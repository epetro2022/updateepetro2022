//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LowisChartApp {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("lw2DataSet3")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class lw2DataSet3 : global::System.Data.DataSet {
        
        private prosedur_getdataGroupAnalogConfigDataTable tableprosedur_getdataGroupAnalogConfig;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public lw2DataSet3() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected lw2DataSet3(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["prosedur_getdataGroupAnalogConfig"] != null)) {
                    base.Tables.Add(new prosedur_getdataGroupAnalogConfigDataTable(ds.Tables["prosedur_getdataGroupAnalogConfig"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public prosedur_getdataGroupAnalogConfigDataTable prosedur_getdataGroupAnalogConfig {
            get {
                return this.tableprosedur_getdataGroupAnalogConfig;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            lw2DataSet3 cln = ((lw2DataSet3)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["prosedur_getdataGroupAnalogConfig"] != null)) {
                    base.Tables.Add(new prosedur_getdataGroupAnalogConfigDataTable(ds.Tables["prosedur_getdataGroupAnalogConfig"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableprosedur_getdataGroupAnalogConfig = ((prosedur_getdataGroupAnalogConfigDataTable)(base.Tables["prosedur_getdataGroupAnalogConfig"]));
            if ((initTable == true)) {
                if ((this.tableprosedur_getdataGroupAnalogConfig != null)) {
                    this.tableprosedur_getdataGroupAnalogConfig.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "lw2DataSet3";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/lw2DataSet3.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableprosedur_getdataGroupAnalogConfig = new prosedur_getdataGroupAnalogConfigDataTable();
            base.Tables.Add(this.tableprosedur_getdataGroupAnalogConfig);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeprosedur_getdataGroupAnalogConfig() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            lw2DataSet3 ds = new lw2DataSet3();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void prosedur_getdataGroupAnalogConfigRowChangeEventHandler(object sender, prosedur_getdataGroupAnalogConfigRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class prosedur_getdataGroupAnalogConfigDataTable : global::System.Data.TypedTableBase<prosedur_getdataGroupAnalogConfigRow> {
            
            private global::System.Data.DataColumn columnLWNAME;
            
            private global::System.Data.DataColumn columnAnalog_Desc;
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnPoint_Type;
            
            private global::System.Data.DataColumn columnEng_Units;
            
            private global::System.Data.DataColumn columnProcessing_Type;
            
            private global::System.Data.DataColumn columnRegister_Number;
            
            private global::System.Data.DataColumn columnSlope_or_HiRaw;
            
            private global::System.Data.DataColumn columnOffset_or_LoRaw;
            
            private global::System.Data.DataColumn columnHigh_Range;
            
            private global::System.Data.DataColumn columnLow_Range;
            
            private global::System.Data.DataColumn columnOn_Trend;
            
            private global::System.Data.DataColumn _columnTrend_Limit__Eng_Units_;
            
            private global::System.Data.DataColumn columnPeriod_Hours;
            
            private global::System.Data.DataColumn _columnMax_Current_Trend_Points__;
            
            private global::System.Data.DataColumn columnMax_Daily_Trend_Points;
            
            private global::System.Data.DataColumn columnMax_Monthly_Trend_Points;
            
            private global::System.Data.DataColumn columnMax_Period_Trend_Points;
            
            private global::System.Data.DataColumn columnFrom_External_Trend;
            
            private global::System.Data.DataColumn columnExt_Alarm;
            
            private global::System.Data.DataColumn columnInhibit_HiHi_Alarm;
            
            private global::System.Data.DataColumn columnHiHi_Alarm_Limit_Eng_Units;
            
            private global::System.Data.DataColumn columnInhibit_High_Alarm;
            
            private global::System.Data.DataColumn columnHigh_Alarm_Limit_Eng_Units;
            
            private global::System.Data.DataColumn columnInhibit_Low_Alarm;
            
            private global::System.Data.DataColumn columnLow_Alarm_Limit_Eng_Units;
            
            private global::System.Data.DataColumn columnInhibit_LoLo_Alarm;
            
            private global::System.Data.DataColumn columnLoLo_Alarm_Limit_Eng_Units;
            
            private global::System.Data.DataColumn columnClamp_Active;
            
            private global::System.Data.DataColumn columnInhibit_Clamp;
            
            private global::System.Data.DataColumn columnClamp_High;
            
            private global::System.Data.DataColumn columnClamp_At_Eng_Units;
            
            private global::System.Data.DataColumn columnClamp_To_Eng_Units;
            
            private global::System.Data.DataColumn columnInhibit_Sensor_Fail;
            
            private global::System.Data.DataColumn columnFail_High;
            
            private global::System.Data.DataColumn _columnFail_At__Eng_Units_;
            
            private global::System.Data.DataColumn columnNeed_Ack;
            
            private global::System.Data.DataColumn columnAck_OnClear;
            
            private global::System.Data.DataColumn columnRepeat_Until_Ack;
            
            private global::System.Data.DataColumn columnSmoothing_Factor;
            
            private global::System.Data.DataColumn columnGroup_1_Name;
            
            private global::System.Data.DataColumn columnGroup_2_Name;
            
            private global::System.Data.DataColumn columnGroup_3_Name;
            
            private global::System.Data.DataColumn columnCalc_Analog;
            
            private global::System.Data.DataColumn columnAlarm_Level;
            
            private global::System.Data.DataColumn columnAlarm_Group;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public prosedur_getdataGroupAnalogConfigDataTable() {
                this.TableName = "prosedur_getdataGroupAnalogConfig";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal prosedur_getdataGroupAnalogConfigDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected prosedur_getdataGroupAnalogConfigDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LWNAMEColumn {
                get {
                    return this.columnLWNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Analog_DescColumn {
                get {
                    return this.columnAnalog_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Point_TypeColumn {
                get {
                    return this.columnPoint_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Eng_UnitsColumn {
                get {
                    return this.columnEng_Units;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Processing_TypeColumn {
                get {
                    return this.columnProcessing_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Register_NumberColumn {
                get {
                    return this.columnRegister_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Slope_or_HiRawColumn {
                get {
                    return this.columnSlope_or_HiRaw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Offset_or_LoRawColumn {
                get {
                    return this.columnOffset_or_LoRaw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn High_RangeColumn {
                get {
                    return this.columnHigh_Range;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Low_RangeColumn {
                get {
                    return this.columnLow_Range;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn On_TrendColumn {
                get {
                    return this.columnOn_Trend;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn _Trend_Limit__Eng_Units_Column {
                get {
                    return this._columnTrend_Limit__Eng_Units_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Period_HoursColumn {
                get {
                    return this.columnPeriod_Hours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn _Max_Current_Trend_Points__Column {
                get {
                    return this._columnMax_Current_Trend_Points__;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Max_Daily_Trend_PointsColumn {
                get {
                    return this.columnMax_Daily_Trend_Points;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Max_Monthly_Trend_PointsColumn {
                get {
                    return this.columnMax_Monthly_Trend_Points;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Max_Period_Trend_PointsColumn {
                get {
                    return this.columnMax_Period_Trend_Points;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn From_External_TrendColumn {
                get {
                    return this.columnFrom_External_Trend;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Ext_AlarmColumn {
                get {
                    return this.columnExt_Alarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Inhibit_HiHi_AlarmColumn {
                get {
                    return this.columnInhibit_HiHi_Alarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HiHi_Alarm_Limit_Eng_UnitsColumn {
                get {
                    return this.columnHiHi_Alarm_Limit_Eng_Units;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Inhibit_High_AlarmColumn {
                get {
                    return this.columnInhibit_High_Alarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn High_Alarm_Limit_Eng_UnitsColumn {
                get {
                    return this.columnHigh_Alarm_Limit_Eng_Units;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Inhibit_Low_AlarmColumn {
                get {
                    return this.columnInhibit_Low_Alarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Low_Alarm_Limit_Eng_UnitsColumn {
                get {
                    return this.columnLow_Alarm_Limit_Eng_Units;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Inhibit_LoLo_AlarmColumn {
                get {
                    return this.columnInhibit_LoLo_Alarm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LoLo_Alarm_Limit_Eng_UnitsColumn {
                get {
                    return this.columnLoLo_Alarm_Limit_Eng_Units;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Clamp_ActiveColumn {
                get {
                    return this.columnClamp_Active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Inhibit_ClampColumn {
                get {
                    return this.columnInhibit_Clamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Clamp_HighColumn {
                get {
                    return this.columnClamp_High;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Clamp_At_Eng_UnitsColumn {
                get {
                    return this.columnClamp_At_Eng_Units;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Clamp_To_Eng_UnitsColumn {
                get {
                    return this.columnClamp_To_Eng_Units;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Inhibit_Sensor_FailColumn {
                get {
                    return this.columnInhibit_Sensor_Fail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fail_HighColumn {
                get {
                    return this.columnFail_High;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn _Fail_At__Eng_Units_Column {
                get {
                    return this._columnFail_At__Eng_Units_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Need_AckColumn {
                get {
                    return this.columnNeed_Ack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Ack_OnClearColumn {
                get {
                    return this.columnAck_OnClear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Repeat_Until_AckColumn {
                get {
                    return this.columnRepeat_Until_Ack;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Smoothing_FactorColumn {
                get {
                    return this.columnSmoothing_Factor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group_1_NameColumn {
                get {
                    return this.columnGroup_1_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group_2_NameColumn {
                get {
                    return this.columnGroup_2_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group_3_NameColumn {
                get {
                    return this.columnGroup_3_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Calc_AnalogColumn {
                get {
                    return this.columnCalc_Analog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Alarm_LevelColumn {
                get {
                    return this.columnAlarm_Level;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Alarm_GroupColumn {
                get {
                    return this.columnAlarm_Group;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public prosedur_getdataGroupAnalogConfigRow this[int index] {
                get {
                    return ((prosedur_getdataGroupAnalogConfigRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event prosedur_getdataGroupAnalogConfigRowChangeEventHandler prosedur_getdataGroupAnalogConfigRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event prosedur_getdataGroupAnalogConfigRowChangeEventHandler prosedur_getdataGroupAnalogConfigRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event prosedur_getdataGroupAnalogConfigRowChangeEventHandler prosedur_getdataGroupAnalogConfigRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event prosedur_getdataGroupAnalogConfigRowChangeEventHandler prosedur_getdataGroupAnalogConfigRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addprosedur_getdataGroupAnalogConfigRow(prosedur_getdataGroupAnalogConfigRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public prosedur_getdataGroupAnalogConfigRow Addprosedur_getdataGroupAnalogConfigRow(
                        string LWNAME, 
                        string Analog_Desc, 
                        double Active, 
                        string Point_Type, 
                        string Eng_Units, 
                        string Processing_Type, 
                        double Register_Number, 
                        double Slope_or_HiRaw, 
                        double Offset_or_LoRaw, 
                        double High_Range, 
                        double Low_Range, 
                        double On_Trend, 
                        double _Trend_Limit__Eng_Units_, 
                        double Period_Hours, 
                        double _Max_Current_Trend_Points__, 
                        double Max_Daily_Trend_Points, 
                        double Max_Monthly_Trend_Points, 
                        double Max_Period_Trend_Points, 
                        double From_External_Trend, 
                        double Ext_Alarm, 
                        double Inhibit_HiHi_Alarm, 
                        double HiHi_Alarm_Limit_Eng_Units, 
                        double Inhibit_High_Alarm, 
                        double High_Alarm_Limit_Eng_Units, 
                        double Inhibit_Low_Alarm, 
                        double Low_Alarm_Limit_Eng_Units, 
                        double Inhibit_LoLo_Alarm, 
                        double LoLo_Alarm_Limit_Eng_Units, 
                        double Clamp_Active, 
                        double Inhibit_Clamp, 
                        double Clamp_High, 
                        double Clamp_At_Eng_Units, 
                        double Clamp_To_Eng_Units, 
                        double Inhibit_Sensor_Fail, 
                        double Fail_High, 
                        double _Fail_At__Eng_Units_, 
                        double Need_Ack, 
                        double Ack_OnClear, 
                        double Repeat_Until_Ack, 
                        double Smoothing_Factor, 
                        string Group_1_Name, 
                        string Group_2_Name, 
                        string Group_3_Name, 
                        double Calc_Analog, 
                        double Alarm_Level, 
                        double Alarm_Group) {
                prosedur_getdataGroupAnalogConfigRow rowprosedur_getdataGroupAnalogConfigRow = ((prosedur_getdataGroupAnalogConfigRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LWNAME,
                        Analog_Desc,
                        Active,
                        Point_Type,
                        Eng_Units,
                        Processing_Type,
                        Register_Number,
                        Slope_or_HiRaw,
                        Offset_or_LoRaw,
                        High_Range,
                        Low_Range,
                        On_Trend,
                        _Trend_Limit__Eng_Units_,
                        Period_Hours,
                        _Max_Current_Trend_Points__,
                        Max_Daily_Trend_Points,
                        Max_Monthly_Trend_Points,
                        Max_Period_Trend_Points,
                        From_External_Trend,
                        Ext_Alarm,
                        Inhibit_HiHi_Alarm,
                        HiHi_Alarm_Limit_Eng_Units,
                        Inhibit_High_Alarm,
                        High_Alarm_Limit_Eng_Units,
                        Inhibit_Low_Alarm,
                        Low_Alarm_Limit_Eng_Units,
                        Inhibit_LoLo_Alarm,
                        LoLo_Alarm_Limit_Eng_Units,
                        Clamp_Active,
                        Inhibit_Clamp,
                        Clamp_High,
                        Clamp_At_Eng_Units,
                        Clamp_To_Eng_Units,
                        Inhibit_Sensor_Fail,
                        Fail_High,
                        _Fail_At__Eng_Units_,
                        Need_Ack,
                        Ack_OnClear,
                        Repeat_Until_Ack,
                        Smoothing_Factor,
                        Group_1_Name,
                        Group_2_Name,
                        Group_3_Name,
                        Calc_Analog,
                        Alarm_Level,
                        Alarm_Group};
                rowprosedur_getdataGroupAnalogConfigRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowprosedur_getdataGroupAnalogConfigRow);
                return rowprosedur_getdataGroupAnalogConfigRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                prosedur_getdataGroupAnalogConfigDataTable cln = ((prosedur_getdataGroupAnalogConfigDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new prosedur_getdataGroupAnalogConfigDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnLWNAME = base.Columns["LWNAME"];
                this.columnAnalog_Desc = base.Columns["Analog_Desc"];
                this.columnActive = base.Columns["Active"];
                this.columnPoint_Type = base.Columns["Point_Type"];
                this.columnEng_Units = base.Columns["Eng_Units"];
                this.columnProcessing_Type = base.Columns["Processing_Type"];
                this.columnRegister_Number = base.Columns["Register_Number"];
                this.columnSlope_or_HiRaw = base.Columns["Slope_or_HiRaw"];
                this.columnOffset_or_LoRaw = base.Columns["Offset_or_LoRaw"];
                this.columnHigh_Range = base.Columns["High_Range"];
                this.columnLow_Range = base.Columns["Low_Range"];
                this.columnOn_Trend = base.Columns["On_Trend"];
                this._columnTrend_Limit__Eng_Units_ = base.Columns["Trend_Limit_(Eng_Units)"];
                this.columnPeriod_Hours = base.Columns["Period_Hours"];
                this._columnMax_Current_Trend_Points__ = base.Columns["Max_Current_Trend_Points_#"];
                this.columnMax_Daily_Trend_Points = base.Columns["Max_Daily_Trend_Points"];
                this.columnMax_Monthly_Trend_Points = base.Columns["Max_Monthly_Trend_Points"];
                this.columnMax_Period_Trend_Points = base.Columns["Max_Period_Trend_Points"];
                this.columnFrom_External_Trend = base.Columns["From_External_Trend"];
                this.columnExt_Alarm = base.Columns["Ext_Alarm"];
                this.columnInhibit_HiHi_Alarm = base.Columns["Inhibit_HiHi_Alarm"];
                this.columnHiHi_Alarm_Limit_Eng_Units = base.Columns["HiHi_Alarm_Limit_Eng_Units"];
                this.columnInhibit_High_Alarm = base.Columns["Inhibit_High_Alarm"];
                this.columnHigh_Alarm_Limit_Eng_Units = base.Columns["High_Alarm_Limit_Eng_Units"];
                this.columnInhibit_Low_Alarm = base.Columns["Inhibit_Low_Alarm"];
                this.columnLow_Alarm_Limit_Eng_Units = base.Columns["Low_Alarm_Limit_Eng_Units"];
                this.columnInhibit_LoLo_Alarm = base.Columns["Inhibit_LoLo_Alarm"];
                this.columnLoLo_Alarm_Limit_Eng_Units = base.Columns["LoLo_Alarm_Limit_Eng_Units"];
                this.columnClamp_Active = base.Columns["Clamp_Active"];
                this.columnInhibit_Clamp = base.Columns["Inhibit_Clamp"];
                this.columnClamp_High = base.Columns["Clamp_High"];
                this.columnClamp_At_Eng_Units = base.Columns["Clamp_At_Eng_Units"];
                this.columnClamp_To_Eng_Units = base.Columns["Clamp_To_Eng_Units"];
                this.columnInhibit_Sensor_Fail = base.Columns["Inhibit_Sensor_Fail"];
                this.columnFail_High = base.Columns["Fail_High"];
                this._columnFail_At__Eng_Units_ = base.Columns["Fail_At_(Eng_Units)"];
                this.columnNeed_Ack = base.Columns["Need_Ack"];
                this.columnAck_OnClear = base.Columns["Ack_OnClear"];
                this.columnRepeat_Until_Ack = base.Columns["Repeat_Until_Ack"];
                this.columnSmoothing_Factor = base.Columns["Smoothing_Factor"];
                this.columnGroup_1_Name = base.Columns["Group_1_Name"];
                this.columnGroup_2_Name = base.Columns["Group_2_Name"];
                this.columnGroup_3_Name = base.Columns["Group_3_Name"];
                this.columnCalc_Analog = base.Columns["Calc_Analog"];
                this.columnAlarm_Level = base.Columns["Alarm_Level"];
                this.columnAlarm_Group = base.Columns["Alarm_Group"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnLWNAME = new global::System.Data.DataColumn("LWNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLWNAME);
                this.columnAnalog_Desc = new global::System.Data.DataColumn("Analog_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnalog_Desc);
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnPoint_Type = new global::System.Data.DataColumn("Point_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoint_Type);
                this.columnEng_Units = new global::System.Data.DataColumn("Eng_Units", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEng_Units);
                this.columnProcessing_Type = new global::System.Data.DataColumn("Processing_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessing_Type);
                this.columnRegister_Number = new global::System.Data.DataColumn("Register_Number", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegister_Number);
                this.columnSlope_or_HiRaw = new global::System.Data.DataColumn("Slope_or_HiRaw", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlope_or_HiRaw);
                this.columnOffset_or_LoRaw = new global::System.Data.DataColumn("Offset_or_LoRaw", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOffset_or_LoRaw);
                this.columnHigh_Range = new global::System.Data.DataColumn("High_Range", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHigh_Range);
                this.columnLow_Range = new global::System.Data.DataColumn("Low_Range", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLow_Range);
                this.columnOn_Trend = new global::System.Data.DataColumn("On_Trend", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOn_Trend);
                this._columnTrend_Limit__Eng_Units_ = new global::System.Data.DataColumn("Trend_Limit_(Eng_Units)", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnTrend_Limit__Eng_Units_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnTrend_Limit__Eng_Units_");
                this._columnTrend_Limit__Eng_Units_.ExtendedProperties.Add("Generator_UserColumnName", "Trend_Limit_(Eng_Units)");
                base.Columns.Add(this._columnTrend_Limit__Eng_Units_);
                this.columnPeriod_Hours = new global::System.Data.DataColumn("Period_Hours", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPeriod_Hours);
                this._columnMax_Current_Trend_Points__ = new global::System.Data.DataColumn("Max_Current_Trend_Points_#", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnMax_Current_Trend_Points__.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnMax_Current_Trend_Points__");
                this._columnMax_Current_Trend_Points__.ExtendedProperties.Add("Generator_UserColumnName", "Max_Current_Trend_Points_#");
                base.Columns.Add(this._columnMax_Current_Trend_Points__);
                this.columnMax_Daily_Trend_Points = new global::System.Data.DataColumn("Max_Daily_Trend_Points", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_Daily_Trend_Points);
                this.columnMax_Monthly_Trend_Points = new global::System.Data.DataColumn("Max_Monthly_Trend_Points", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_Monthly_Trend_Points);
                this.columnMax_Period_Trend_Points = new global::System.Data.DataColumn("Max_Period_Trend_Points", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_Period_Trend_Points);
                this.columnFrom_External_Trend = new global::System.Data.DataColumn("From_External_Trend", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFrom_External_Trend);
                this.columnExt_Alarm = new global::System.Data.DataColumn("Ext_Alarm", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExt_Alarm);
                this.columnInhibit_HiHi_Alarm = new global::System.Data.DataColumn("Inhibit_HiHi_Alarm", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInhibit_HiHi_Alarm);
                this.columnHiHi_Alarm_Limit_Eng_Units = new global::System.Data.DataColumn("HiHi_Alarm_Limit_Eng_Units", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHiHi_Alarm_Limit_Eng_Units);
                this.columnInhibit_High_Alarm = new global::System.Data.DataColumn("Inhibit_High_Alarm", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInhibit_High_Alarm);
                this.columnHigh_Alarm_Limit_Eng_Units = new global::System.Data.DataColumn("High_Alarm_Limit_Eng_Units", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHigh_Alarm_Limit_Eng_Units);
                this.columnInhibit_Low_Alarm = new global::System.Data.DataColumn("Inhibit_Low_Alarm", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInhibit_Low_Alarm);
                this.columnLow_Alarm_Limit_Eng_Units = new global::System.Data.DataColumn("Low_Alarm_Limit_Eng_Units", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLow_Alarm_Limit_Eng_Units);
                this.columnInhibit_LoLo_Alarm = new global::System.Data.DataColumn("Inhibit_LoLo_Alarm", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInhibit_LoLo_Alarm);
                this.columnLoLo_Alarm_Limit_Eng_Units = new global::System.Data.DataColumn("LoLo_Alarm_Limit_Eng_Units", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoLo_Alarm_Limit_Eng_Units);
                this.columnClamp_Active = new global::System.Data.DataColumn("Clamp_Active", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClamp_Active);
                this.columnInhibit_Clamp = new global::System.Data.DataColumn("Inhibit_Clamp", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInhibit_Clamp);
                this.columnClamp_High = new global::System.Data.DataColumn("Clamp_High", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClamp_High);
                this.columnClamp_At_Eng_Units = new global::System.Data.DataColumn("Clamp_At_Eng_Units", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClamp_At_Eng_Units);
                this.columnClamp_To_Eng_Units = new global::System.Data.DataColumn("Clamp_To_Eng_Units", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClamp_To_Eng_Units);
                this.columnInhibit_Sensor_Fail = new global::System.Data.DataColumn("Inhibit_Sensor_Fail", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInhibit_Sensor_Fail);
                this.columnFail_High = new global::System.Data.DataColumn("Fail_High", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFail_High);
                this._columnFail_At__Eng_Units_ = new global::System.Data.DataColumn("Fail_At_(Eng_Units)", typeof(double), null, global::System.Data.MappingType.Element);
                this._columnFail_At__Eng_Units_.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnFail_At__Eng_Units_");
                this._columnFail_At__Eng_Units_.ExtendedProperties.Add("Generator_UserColumnName", "Fail_At_(Eng_Units)");
                base.Columns.Add(this._columnFail_At__Eng_Units_);
                this.columnNeed_Ack = new global::System.Data.DataColumn("Need_Ack", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeed_Ack);
                this.columnAck_OnClear = new global::System.Data.DataColumn("Ack_OnClear", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAck_OnClear);
                this.columnRepeat_Until_Ack = new global::System.Data.DataColumn("Repeat_Until_Ack", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepeat_Until_Ack);
                this.columnSmoothing_Factor = new global::System.Data.DataColumn("Smoothing_Factor", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSmoothing_Factor);
                this.columnGroup_1_Name = new global::System.Data.DataColumn("Group_1_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup_1_Name);
                this.columnGroup_2_Name = new global::System.Data.DataColumn("Group_2_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup_2_Name);
                this.columnGroup_3_Name = new global::System.Data.DataColumn("Group_3_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup_3_Name);
                this.columnCalc_Analog = new global::System.Data.DataColumn("Calc_Analog", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalc_Analog);
                this.columnAlarm_Level = new global::System.Data.DataColumn("Alarm_Level", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlarm_Level);
                this.columnAlarm_Group = new global::System.Data.DataColumn("Alarm_Group", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlarm_Group);
                this.columnLWNAME.MaxLength = 255;
                this.columnAnalog_Desc.MaxLength = 255;
                this.columnPoint_Type.MaxLength = 255;
                this.columnEng_Units.MaxLength = 255;
                this.columnProcessing_Type.MaxLength = 255;
                this.columnGroup_1_Name.MaxLength = 255;
                this.columnGroup_2_Name.MaxLength = 255;
                this.columnGroup_3_Name.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public prosedur_getdataGroupAnalogConfigRow Newprosedur_getdataGroupAnalogConfigRow() {
                return ((prosedur_getdataGroupAnalogConfigRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new prosedur_getdataGroupAnalogConfigRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(prosedur_getdataGroupAnalogConfigRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.prosedur_getdataGroupAnalogConfigRowChanged != null)) {
                    this.prosedur_getdataGroupAnalogConfigRowChanged(this, new prosedur_getdataGroupAnalogConfigRowChangeEvent(((prosedur_getdataGroupAnalogConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.prosedur_getdataGroupAnalogConfigRowChanging != null)) {
                    this.prosedur_getdataGroupAnalogConfigRowChanging(this, new prosedur_getdataGroupAnalogConfigRowChangeEvent(((prosedur_getdataGroupAnalogConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.prosedur_getdataGroupAnalogConfigRowDeleted != null)) {
                    this.prosedur_getdataGroupAnalogConfigRowDeleted(this, new prosedur_getdataGroupAnalogConfigRowChangeEvent(((prosedur_getdataGroupAnalogConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.prosedur_getdataGroupAnalogConfigRowDeleting != null)) {
                    this.prosedur_getdataGroupAnalogConfigRowDeleting(this, new prosedur_getdataGroupAnalogConfigRowChangeEvent(((prosedur_getdataGroupAnalogConfigRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removeprosedur_getdataGroupAnalogConfigRow(prosedur_getdataGroupAnalogConfigRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                lw2DataSet3 ds = new lw2DataSet3();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "prosedur_getdataGroupAnalogConfigDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class prosedur_getdataGroupAnalogConfigRow : global::System.Data.DataRow {
            
            private prosedur_getdataGroupAnalogConfigDataTable tableprosedur_getdataGroupAnalogConfig;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal prosedur_getdataGroupAnalogConfigRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableprosedur_getdataGroupAnalogConfig = ((prosedur_getdataGroupAnalogConfigDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LWNAME {
                get {
                    try {
                        return ((string)(this[this.tableprosedur_getdataGroupAnalogConfig.LWNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LWNAME\' in table \'prosedur_getdataGroupAnalogConfig\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.LWNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Analog_Desc {
                get {
                    try {
                        return ((string)(this[this.tableprosedur_getdataGroupAnalogConfig.Analog_DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Analog_Desc\' in table \'prosedur_getdataGroupAnalogConfig\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Analog_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Active {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active\' in table \'prosedur_getdataGroupAnalogConfig\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Point_Type {
                get {
                    try {
                        return ((string)(this[this.tableprosedur_getdataGroupAnalogConfig.Point_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Point_Type\' in table \'prosedur_getdataGroupAnalogConfig\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Point_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Eng_Units {
                get {
                    try {
                        return ((string)(this[this.tableprosedur_getdataGroupAnalogConfig.Eng_UnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Eng_Units\' in table \'prosedur_getdataGroupAnalogConfig\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Eng_UnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Processing_Type {
                get {
                    try {
                        return ((string)(this[this.tableprosedur_getdataGroupAnalogConfig.Processing_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Processing_Type\' in table \'prosedur_getdataGroupAnalogConfi" +
                                "g\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Processing_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Register_Number {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Register_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Register_Number\' in table \'prosedur_getdataGroupAnalogConfi" +
                                "g\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Register_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Slope_or_HiRaw {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Slope_or_HiRawColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Slope_or_HiRaw\' in table \'prosedur_getdataGroupAnalogConfig" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Slope_or_HiRawColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Offset_or_LoRaw {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Offset_or_LoRawColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Offset_or_LoRaw\' in table \'prosedur_getdataGroupAnalogConfi" +
                                "g\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Offset_or_LoRawColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double High_Range {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.High_RangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'High_Range\' in table \'prosedur_getdataGroupAnalogConfig\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.High_RangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Low_Range {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Low_RangeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Low_Range\' in table \'prosedur_getdataGroupAnalogConfig\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Low_RangeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double On_Trend {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.On_TrendColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'On_Trend\' in table \'prosedur_getdataGroupAnalogConfig\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.On_TrendColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double _Trend_Limit__Eng_Units_ {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig._Trend_Limit__Eng_Units_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Trend_Limit_(Eng_Units)\' in table \'prosedur_getdataGroupAna" +
                                "logConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig._Trend_Limit__Eng_Units_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Period_Hours {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Period_HoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Period_Hours\' in table \'prosedur_getdataGroupAnalogConfig\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Period_HoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double _Max_Current_Trend_Points__ {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig._Max_Current_Trend_Points__Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Current_Trend_Points_#\' in table \'prosedur_getdataGroup" +
                                "AnalogConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig._Max_Current_Trend_Points__Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Max_Daily_Trend_Points {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Max_Daily_Trend_PointsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Daily_Trend_Points\' in table \'prosedur_getdataGroupAnal" +
                                "ogConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Max_Daily_Trend_PointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Max_Monthly_Trend_Points {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Max_Monthly_Trend_PointsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Monthly_Trend_Points\' in table \'prosedur_getdataGroupAn" +
                                "alogConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Max_Monthly_Trend_PointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Max_Period_Trend_Points {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Max_Period_Trend_PointsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Period_Trend_Points\' in table \'prosedur_getdataGroupAna" +
                                "logConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Max_Period_Trend_PointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double From_External_Trend {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.From_External_TrendColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'From_External_Trend\' in table \'prosedur_getdataGroupAnalogC" +
                                "onfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.From_External_TrendColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Ext_Alarm {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Ext_AlarmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ext_Alarm\' in table \'prosedur_getdataGroupAnalogConfig\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Ext_AlarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Inhibit_HiHi_Alarm {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_HiHi_AlarmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inhibit_HiHi_Alarm\' in table \'prosedur_getdataGroupAnalogCo" +
                                "nfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_HiHi_AlarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double HiHi_Alarm_Limit_Eng_Units {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.HiHi_Alarm_Limit_Eng_UnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HiHi_Alarm_Limit_Eng_Units\' in table \'prosedur_getdataGroup" +
                                "AnalogConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.HiHi_Alarm_Limit_Eng_UnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Inhibit_High_Alarm {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_High_AlarmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inhibit_High_Alarm\' in table \'prosedur_getdataGroupAnalogCo" +
                                "nfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_High_AlarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double High_Alarm_Limit_Eng_Units {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.High_Alarm_Limit_Eng_UnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'High_Alarm_Limit_Eng_Units\' in table \'prosedur_getdataGroup" +
                                "AnalogConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.High_Alarm_Limit_Eng_UnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Inhibit_Low_Alarm {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_Low_AlarmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inhibit_Low_Alarm\' in table \'prosedur_getdataGroupAnalogCon" +
                                "fig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_Low_AlarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Low_Alarm_Limit_Eng_Units {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Low_Alarm_Limit_Eng_UnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Low_Alarm_Limit_Eng_Units\' in table \'prosedur_getdataGroupA" +
                                "nalogConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Low_Alarm_Limit_Eng_UnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Inhibit_LoLo_Alarm {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_LoLo_AlarmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inhibit_LoLo_Alarm\' in table \'prosedur_getdataGroupAnalogCo" +
                                "nfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_LoLo_AlarmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double LoLo_Alarm_Limit_Eng_Units {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.LoLo_Alarm_Limit_Eng_UnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoLo_Alarm_Limit_Eng_Units\' in table \'prosedur_getdataGroup" +
                                "AnalogConfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.LoLo_Alarm_Limit_Eng_UnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Clamp_Active {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Clamp_ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Clamp_Active\' in table \'prosedur_getdataGroupAnalogConfig\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Clamp_ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Inhibit_Clamp {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_ClampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inhibit_Clamp\' in table \'prosedur_getdataGroupAnalogConfig\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_ClampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Clamp_High {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Clamp_HighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Clamp_High\' in table \'prosedur_getdataGroupAnalogConfig\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Clamp_HighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Clamp_At_Eng_Units {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Clamp_At_Eng_UnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Clamp_At_Eng_Units\' in table \'prosedur_getdataGroupAnalogCo" +
                                "nfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Clamp_At_Eng_UnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Clamp_To_Eng_Units {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Clamp_To_Eng_UnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Clamp_To_Eng_Units\' in table \'prosedur_getdataGroupAnalogCo" +
                                "nfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Clamp_To_Eng_UnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Inhibit_Sensor_Fail {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_Sensor_FailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inhibit_Sensor_Fail\' in table \'prosedur_getdataGroupAnalogC" +
                                "onfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_Sensor_FailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Fail_High {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Fail_HighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fail_High\' in table \'prosedur_getdataGroupAnalogConfig\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Fail_HighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double _Fail_At__Eng_Units_ {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig._Fail_At__Eng_Units_Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fail_At_(Eng_Units)\' in table \'prosedur_getdataGroupAnalogC" +
                                "onfig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig._Fail_At__Eng_Units_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Need_Ack {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Need_AckColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Need_Ack\' in table \'prosedur_getdataGroupAnalogConfig\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Need_AckColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Ack_OnClear {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Ack_OnClearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ack_OnClear\' in table \'prosedur_getdataGroupAnalogConfig\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Ack_OnClearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Repeat_Until_Ack {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Repeat_Until_AckColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Repeat_Until_Ack\' in table \'prosedur_getdataGroupAnalogConf" +
                                "ig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Repeat_Until_AckColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Smoothing_Factor {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Smoothing_FactorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Smoothing_Factor\' in table \'prosedur_getdataGroupAnalogConf" +
                                "ig\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Smoothing_FactorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group_1_Name {
                get {
                    try {
                        return ((string)(this[this.tableprosedur_getdataGroupAnalogConfig.Group_1_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group_1_Name\' in table \'prosedur_getdataGroupAnalogConfig\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Group_1_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group_2_Name {
                get {
                    try {
                        return ((string)(this[this.tableprosedur_getdataGroupAnalogConfig.Group_2_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group_2_Name\' in table \'prosedur_getdataGroupAnalogConfig\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Group_2_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group_3_Name {
                get {
                    try {
                        return ((string)(this[this.tableprosedur_getdataGroupAnalogConfig.Group_3_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group_3_Name\' in table \'prosedur_getdataGroupAnalogConfig\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Group_3_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Calc_Analog {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Calc_AnalogColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Calc_Analog\' in table \'prosedur_getdataGroupAnalogConfig\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Calc_AnalogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Alarm_Level {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Alarm_LevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alarm_Level\' in table \'prosedur_getdataGroupAnalogConfig\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Alarm_LevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double Alarm_Group {
                get {
                    try {
                        return ((double)(this[this.tableprosedur_getdataGroupAnalogConfig.Alarm_GroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alarm_Group\' in table \'prosedur_getdataGroupAnalogConfig\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableprosedur_getdataGroupAnalogConfig.Alarm_GroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLWNAMENull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.LWNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLWNAMENull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.LWNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAnalog_DescNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Analog_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAnalog_DescNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Analog_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActiveNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActiveNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPoint_TypeNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Point_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPoint_TypeNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Point_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEng_UnitsNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Eng_UnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEng_UnitsNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Eng_UnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsProcessing_TypeNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Processing_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetProcessing_TypeNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Processing_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRegister_NumberNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Register_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRegister_NumberNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Register_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSlope_or_HiRawNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Slope_or_HiRawColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSlope_or_HiRawNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Slope_or_HiRawColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOffset_or_LoRawNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Offset_or_LoRawColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOffset_or_LoRawNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Offset_or_LoRawColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHigh_RangeNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.High_RangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHigh_RangeNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.High_RangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLow_RangeNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Low_RangeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLow_RangeNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Low_RangeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOn_TrendNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.On_TrendColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOn_TrendNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.On_TrendColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is_Trend_Limit__Eng_Units_Null() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig._Trend_Limit__Eng_Units_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set_Trend_Limit__Eng_Units_Null() {
                this[this.tableprosedur_getdataGroupAnalogConfig._Trend_Limit__Eng_Units_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPeriod_HoursNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Period_HoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPeriod_HoursNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Period_HoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is_Max_Current_Trend_Points__Null() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig._Max_Current_Trend_Points__Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set_Max_Current_Trend_Points__Null() {
                this[this.tableprosedur_getdataGroupAnalogConfig._Max_Current_Trend_Points__Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMax_Daily_Trend_PointsNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Max_Daily_Trend_PointsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMax_Daily_Trend_PointsNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Max_Daily_Trend_PointsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMax_Monthly_Trend_PointsNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Max_Monthly_Trend_PointsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMax_Monthly_Trend_PointsNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Max_Monthly_Trend_PointsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMax_Period_Trend_PointsNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Max_Period_Trend_PointsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMax_Period_Trend_PointsNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Max_Period_Trend_PointsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFrom_External_TrendNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.From_External_TrendColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFrom_External_TrendNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.From_External_TrendColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsExt_AlarmNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Ext_AlarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetExt_AlarmNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Ext_AlarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInhibit_HiHi_AlarmNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Inhibit_HiHi_AlarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInhibit_HiHi_AlarmNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_HiHi_AlarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHiHi_Alarm_Limit_Eng_UnitsNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.HiHi_Alarm_Limit_Eng_UnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHiHi_Alarm_Limit_Eng_UnitsNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.HiHi_Alarm_Limit_Eng_UnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInhibit_High_AlarmNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Inhibit_High_AlarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInhibit_High_AlarmNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_High_AlarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHigh_Alarm_Limit_Eng_UnitsNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.High_Alarm_Limit_Eng_UnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHigh_Alarm_Limit_Eng_UnitsNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.High_Alarm_Limit_Eng_UnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInhibit_Low_AlarmNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Inhibit_Low_AlarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInhibit_Low_AlarmNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_Low_AlarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLow_Alarm_Limit_Eng_UnitsNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Low_Alarm_Limit_Eng_UnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLow_Alarm_Limit_Eng_UnitsNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Low_Alarm_Limit_Eng_UnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInhibit_LoLo_AlarmNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Inhibit_LoLo_AlarmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInhibit_LoLo_AlarmNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_LoLo_AlarmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLoLo_Alarm_Limit_Eng_UnitsNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.LoLo_Alarm_Limit_Eng_UnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLoLo_Alarm_Limit_Eng_UnitsNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.LoLo_Alarm_Limit_Eng_UnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsClamp_ActiveNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Clamp_ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetClamp_ActiveNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Clamp_ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInhibit_ClampNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Inhibit_ClampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInhibit_ClampNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_ClampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsClamp_HighNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Clamp_HighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetClamp_HighNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Clamp_HighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsClamp_At_Eng_UnitsNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Clamp_At_Eng_UnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetClamp_At_Eng_UnitsNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Clamp_At_Eng_UnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsClamp_To_Eng_UnitsNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Clamp_To_Eng_UnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetClamp_To_Eng_UnitsNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Clamp_To_Eng_UnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInhibit_Sensor_FailNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Inhibit_Sensor_FailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInhibit_Sensor_FailNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Inhibit_Sensor_FailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFail_HighNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Fail_HighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFail_HighNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Fail_HighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Is_Fail_At__Eng_Units_Null() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig._Fail_At__Eng_Units_Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Set_Fail_At__Eng_Units_Null() {
                this[this.tableprosedur_getdataGroupAnalogConfig._Fail_At__Eng_Units_Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNeed_AckNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Need_AckColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNeed_AckNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Need_AckColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAck_OnClearNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Ack_OnClearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAck_OnClearNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Ack_OnClearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRepeat_Until_AckNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Repeat_Until_AckColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRepeat_Until_AckNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Repeat_Until_AckColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSmoothing_FactorNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Smoothing_FactorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSmoothing_FactorNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Smoothing_FactorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup_1_NameNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Group_1_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup_1_NameNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Group_1_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup_2_NameNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Group_2_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup_2_NameNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Group_2_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup_3_NameNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Group_3_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup_3_NameNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Group_3_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCalc_AnalogNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Calc_AnalogColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCalc_AnalogNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Calc_AnalogColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAlarm_LevelNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Alarm_LevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAlarm_LevelNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Alarm_LevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAlarm_GroupNull() {
                return this.IsNull(this.tableprosedur_getdataGroupAnalogConfig.Alarm_GroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAlarm_GroupNull() {
                this[this.tableprosedur_getdataGroupAnalogConfig.Alarm_GroupColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class prosedur_getdataGroupAnalogConfigRowChangeEvent : global::System.EventArgs {
            
            private prosedur_getdataGroupAnalogConfigRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public prosedur_getdataGroupAnalogConfigRowChangeEvent(prosedur_getdataGroupAnalogConfigRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public prosedur_getdataGroupAnalogConfigRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LowisChartApp.lw2DataSet3TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class prosedur_getdataGroupAnalogConfigTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public prosedur_getdataGroupAnalogConfigTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "prosedur_getdataGroupAnalogConfig";
            tableMapping.ColumnMappings.Add("LWNAME", "LWNAME");
            tableMapping.ColumnMappings.Add("Analog_Desc", "Analog_Desc");
            tableMapping.ColumnMappings.Add("Active", "Active");
            tableMapping.ColumnMappings.Add("Point_Type", "Point_Type");
            tableMapping.ColumnMappings.Add("Eng_Units", "Eng_Units");
            tableMapping.ColumnMappings.Add("Processing_Type", "Processing_Type");
            tableMapping.ColumnMappings.Add("Register_Number", "Register_Number");
            tableMapping.ColumnMappings.Add("Slope_or_HiRaw", "Slope_or_HiRaw");
            tableMapping.ColumnMappings.Add("Offset_or_LoRaw", "Offset_or_LoRaw");
            tableMapping.ColumnMappings.Add("High_Range", "High_Range");
            tableMapping.ColumnMappings.Add("Low_Range", "Low_Range");
            tableMapping.ColumnMappings.Add("On_Trend", "On_Trend");
            tableMapping.ColumnMappings.Add("Trend_Limit_(Eng_Units)", "Trend_Limit_(Eng_Units)");
            tableMapping.ColumnMappings.Add("Period_Hours", "Period_Hours");
            tableMapping.ColumnMappings.Add("Max_Current_Trend_Points_#", "Max_Current_Trend_Points_#");
            tableMapping.ColumnMappings.Add("Max_Daily_Trend_Points", "Max_Daily_Trend_Points");
            tableMapping.ColumnMappings.Add("Max_Monthly_Trend_Points", "Max_Monthly_Trend_Points");
            tableMapping.ColumnMappings.Add("Max_Period_Trend_Points", "Max_Period_Trend_Points");
            tableMapping.ColumnMappings.Add("From_External_Trend", "From_External_Trend");
            tableMapping.ColumnMappings.Add("Ext_Alarm", "Ext_Alarm");
            tableMapping.ColumnMappings.Add("Inhibit_HiHi_Alarm", "Inhibit_HiHi_Alarm");
            tableMapping.ColumnMappings.Add("HiHi_Alarm_Limit_Eng_Units", "HiHi_Alarm_Limit_Eng_Units");
            tableMapping.ColumnMappings.Add("Inhibit_High_Alarm", "Inhibit_High_Alarm");
            tableMapping.ColumnMappings.Add("High_Alarm_Limit_Eng_Units", "High_Alarm_Limit_Eng_Units");
            tableMapping.ColumnMappings.Add("Inhibit_Low_Alarm", "Inhibit_Low_Alarm");
            tableMapping.ColumnMappings.Add("Low_Alarm_Limit_Eng_Units", "Low_Alarm_Limit_Eng_Units");
            tableMapping.ColumnMappings.Add("Inhibit_LoLo_Alarm", "Inhibit_LoLo_Alarm");
            tableMapping.ColumnMappings.Add("LoLo_Alarm_Limit_Eng_Units", "LoLo_Alarm_Limit_Eng_Units");
            tableMapping.ColumnMappings.Add("Clamp_Active", "Clamp_Active");
            tableMapping.ColumnMappings.Add("Inhibit_Clamp", "Inhibit_Clamp");
            tableMapping.ColumnMappings.Add("Clamp_High", "Clamp_High");
            tableMapping.ColumnMappings.Add("Clamp_At_Eng_Units", "Clamp_At_Eng_Units");
            tableMapping.ColumnMappings.Add("Clamp_To_Eng_Units", "Clamp_To_Eng_Units");
            tableMapping.ColumnMappings.Add("Inhibit_Sensor_Fail", "Inhibit_Sensor_Fail");
            tableMapping.ColumnMappings.Add("Fail_High", "Fail_High");
            tableMapping.ColumnMappings.Add("Fail_At_(Eng_Units)", "Fail_At_(Eng_Units)");
            tableMapping.ColumnMappings.Add("Need_Ack", "Need_Ack");
            tableMapping.ColumnMappings.Add("Ack_OnClear", "Ack_OnClear");
            tableMapping.ColumnMappings.Add("Repeat_Until_Ack", "Repeat_Until_Ack");
            tableMapping.ColumnMappings.Add("Smoothing_Factor", "Smoothing_Factor");
            tableMapping.ColumnMappings.Add("Group_1_Name", "Group_1_Name");
            tableMapping.ColumnMappings.Add("Group_2_Name", "Group_2_Name");
            tableMapping.ColumnMappings.Add("Group_3_Name", "Group_3_Name");
            tableMapping.ColumnMappings.Add("Calc_Analog", "Calc_Analog");
            tableMapping.ColumnMappings.Add("Alarm_Level", "Alarm_Level");
            tableMapping.ColumnMappings.Add("Alarm_Group", "Alarm_Group");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LowisChartApp.Properties.Settings.Default.lw2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.prosedur_getdataGroupAnalogConfig";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@param", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(lw2DataSet3.prosedur_getdataGroupAnalogConfigDataTable dataTable, string param) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((param == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(param));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual lw2DataSet3.prosedur_getdataGroupAnalogConfigDataTable GetData(string param) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((param == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(param));
            }
            lw2DataSet3.prosedur_getdataGroupAnalogConfigDataTable dataTable = new lw2DataSet3.prosedur_getdataGroupAnalogConfigDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(lw2DataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(lw2DataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(lw2DataSet3 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(lw2DataSet3 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591