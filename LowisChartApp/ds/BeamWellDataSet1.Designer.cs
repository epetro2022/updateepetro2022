//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LowisChartApp.ds {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BeamWellDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BeamWellDataSet : global::System.Data.DataSet {
        
        private BeamWellDataTable tableBeamWell;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public BeamWellDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected BeamWellDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BeamWell"] != null)) {
                    base.Tables.Add(new BeamWellDataTable(ds.Tables["BeamWell"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BeamWellDataTable BeamWell {
            get {
                return this.tableBeamWell;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            BeamWellDataSet cln = ((BeamWellDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BeamWell"] != null)) {
                    base.Tables.Add(new BeamWellDataTable(ds.Tables["BeamWell"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableBeamWell = ((BeamWellDataTable)(base.Tables["BeamWell"]));
            if ((initTable == true)) {
                if ((this.tableBeamWell != null)) {
                    this.tableBeamWell.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "BeamWellDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BeamWellDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBeamWell = new BeamWellDataTable();
            base.Tables.Add(this.tableBeamWell);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeBeamWell() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BeamWellDataSet ds = new BeamWellDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void BeamWellRowChangeEventHandler(object sender, BeamWellRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BeamWellDataTable : global::System.Data.TypedTableBase<BeamWellRow> {
            
            private global::System.Data.DataColumn columnwellname;
            
            private global::System.Data.DataColumn columnnavigator_name;
            
            private global::System.Data.DataColumn columnCAO_ID;
            
            private global::System.Data.DataColumn columnLong_Name;
            
            private global::System.Data.DataColumn columnInternal_ID;
            
            private global::System.Data.DataColumn columnGroup1;
            
            private global::System.Data.DataColumn columnGroup2;
            
            private global::System.Data.DataColumn columnGroup3;
            
            private global::System.Data.DataColumn columnGroup4;
            
            private global::System.Data.DataColumn columnFacility_Description;
            
            private global::System.Data.DataColumn columnRodpum_Controller;
            
            private global::System.Data.DataColumn columnController_Type;
            
            private global::System.Data.DataColumn columnSub_Controller_Type;
            
            private global::System.Data.DataColumn columnCommunication_Protocol;
            
            private global::System.Data.DataColumn columnCommunication_Port;
            
            private global::System.Data.DataColumn columnCommunication_Address;
            
            private global::System.Data.DataColumn columnAlt_Address;
            
            private global::System.Data.DataColumn columnComm_retry;
            
            private global::System.Data.DataColumn columnKey_On_Delay;
            
            private global::System.Data.DataColumn columnKey_Off_Delay;
            
            private global::System.Data.DataColumn columnAlarm_Delay;
            
            private global::System.Data.DataColumn columnClear_Delay;
            
            private global::System.Data.DataColumn columnMax_Event_History_Recs;
            
            private global::System.Data.DataColumn columnTop_Perforation;
            
            private global::System.Data.DataColumn columnBottom_Perforation;
            
            private global::System.Data.DataColumn columnAnchor_depth;
            
            private global::System.Data.DataColumn columnPlug_Back_TD;
            
            private global::System.Data.DataColumn columnPump_Measured;
            
            private global::System.Data.DataColumn columnPump_Vertical;
            
            private global::System.Data.DataColumn columnPump_ID;
            
            private global::System.Data.DataColumn columnCasing_Valve_Open;
            
            private global::System.Data.DataColumn columnCasing_OD;
            
            private global::System.Data.DataColumn columnCasing_Weight;
            
            private global::System.Data.DataColumn columnTubing_OD;
            
            private global::System.Data.DataColumn columnOil;
            
            private global::System.Data.DataColumn columnWater;
            
            private global::System.Data.DataColumn columnGas;
            
            private global::System.Data.DataColumn columnLast_WT_date;
            
            private global::System.Data.DataColumn columnOil_Gravity;
            
            private global::System.Data.DataColumn columnWater_SP_Grav;
            
            private global::System.Data.DataColumn columnGas_Sp_Grav;
            
            private global::System.Data.DataColumn columnTubing_Press;
            
            private global::System.Data.DataColumn columnTubing_Gradient;
            
            private global::System.Data.DataColumn columnTubing_Temp_Whead;
            
            private global::System.Data.DataColumn columnCasing_Press;
            
            private global::System.Data.DataColumn columnCasing_Oil_Cut;
            
            private global::System.Data.DataColumn columnFluid_Level_From_Surface;
            
            private global::System.Data.DataColumn columnFluid_Level_Shot_Date;
            
            private global::System.Data.DataColumn columnFluid_Level_Comment;
            
            private global::System.Data.DataColumn columnUse_Fluid_Insertia_For_Analysis;
            
            private global::System.Data.DataColumn columnUnit_Type;
            
            private global::System.Data.DataColumn columnPumping_Unit;
            
            private global::System.Data.DataColumn columnWrist_Pin;
            
            private global::System.Data.DataColumn columnActual_Stroke;
            
            private global::System.Data.DataColumn columnTorque_Methode;
            
            private global::System.Data.DataColumn columnRotation;
            
            private global::System.Data.DataColumn columnMotor_Type;
            
            private global::System.Data.DataColumn columnMotor_Size;
            
            private global::System.Data.DataColumn columnSlip_Torque;
            
            private global::System.Data.DataColumn columnMeasured_Motor_Amps_Up;
            
            private global::System.Data.DataColumn columnMeasured_Motor_Amps_Down;
            
            private global::System.Data.DataColumn columnMax_Air_Balance_Press;
            
            private global::System.Data.DataColumn columnMin_Air_Balance_Press;
            
            private global::System.Data.DataColumn columnCrank_ID;
            
            private global::System.Data.DataColumn columnCBT;
            
            private global::System.Data.DataColumn columnC1_Lead_Distance;
            
            private global::System.Data.DataColumn columnC1_Lead_Primary_Wt;
            
            private global::System.Data.DataColumn columnC1_Lead_Aux_WT;
            
            private global::System.Data.DataColumn columnC1_lag_Distance;
            
            private global::System.Data.DataColumn columnC1_Lag_Primary_Wt;
            
            private global::System.Data.DataColumn columnC1_Lag_Aux_Wt;
            
            private global::System.Data.DataColumn columnC2_Lead_Distance;
            
            private global::System.Data.DataColumn columnC2_Lead_Primary_Wt;
            
            private global::System.Data.DataColumn columnC2_Lead_Aux_WT;
            
            private global::System.Data.DataColumn columnC2_lag_Distance;
            
            private global::System.Data.DataColumn columnC2_Lag_Primary_Wt;
            
            private global::System.Data.DataColumn columnC2_Lag_Aux_Wt;
            
            private global::System.Data.DataColumn columnFluid_Above_Pump;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public BeamWellDataTable() {
                this.TableName = "BeamWell";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal BeamWellDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected BeamWellDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn wellnameColumn {
                get {
                    return this.columnwellname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn navigator_nameColumn {
                get {
                    return this.columnnavigator_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CAO_IDColumn {
                get {
                    return this.columnCAO_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Long_NameColumn {
                get {
                    return this.columnLong_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Internal_IDColumn {
                get {
                    return this.columnInternal_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group1Column {
                get {
                    return this.columnGroup1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group2Column {
                get {
                    return this.columnGroup2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group3Column {
                get {
                    return this.columnGroup3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Group4Column {
                get {
                    return this.columnGroup4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Facility_DescriptionColumn {
                get {
                    return this.columnFacility_Description;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Rodpum_ControllerColumn {
                get {
                    return this.columnRodpum_Controller;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Controller_TypeColumn {
                get {
                    return this.columnController_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Sub_Controller_TypeColumn {
                get {
                    return this.columnSub_Controller_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Communication_ProtocolColumn {
                get {
                    return this.columnCommunication_Protocol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Communication_PortColumn {
                get {
                    return this.columnCommunication_Port;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Communication_AddressColumn {
                get {
                    return this.columnCommunication_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Alt_AddressColumn {
                get {
                    return this.columnAlt_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Comm_retryColumn {
                get {
                    return this.columnComm_retry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Key_On_DelayColumn {
                get {
                    return this.columnKey_On_Delay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Key_Off_DelayColumn {
                get {
                    return this.columnKey_Off_Delay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Alarm_DelayColumn {
                get {
                    return this.columnAlarm_Delay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Clear_DelayColumn {
                get {
                    return this.columnClear_Delay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Max_Event_History_RecsColumn {
                get {
                    return this.columnMax_Event_History_Recs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Top_PerforationColumn {
                get {
                    return this.columnTop_Perforation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Bottom_PerforationColumn {
                get {
                    return this.columnBottom_Perforation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Anchor_depthColumn {
                get {
                    return this.columnAnchor_depth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Plug_Back_TDColumn {
                get {
                    return this.columnPlug_Back_TD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Pump_MeasuredColumn {
                get {
                    return this.columnPump_Measured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Pump_VerticalColumn {
                get {
                    return this.columnPump_Vertical;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Pump_IDColumn {
                get {
                    return this.columnPump_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Casing_Valve_OpenColumn {
                get {
                    return this.columnCasing_Valve_Open;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Casing_ODColumn {
                get {
                    return this.columnCasing_OD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Casing_WeightColumn {
                get {
                    return this.columnCasing_Weight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Tubing_ODColumn {
                get {
                    return this.columnTubing_OD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OilColumn {
                get {
                    return this.columnOil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WaterColumn {
                get {
                    return this.columnWater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GasColumn {
                get {
                    return this.columnGas;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Last_WT_dateColumn {
                get {
                    return this.columnLast_WT_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Oil_GravityColumn {
                get {
                    return this.columnOil_Gravity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Water_SP_GravColumn {
                get {
                    return this.columnWater_SP_Grav;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Gas_Sp_GravColumn {
                get {
                    return this.columnGas_Sp_Grav;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Tubing_PressColumn {
                get {
                    return this.columnTubing_Press;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Tubing_GradientColumn {
                get {
                    return this.columnTubing_Gradient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Tubing_Temp_WheadColumn {
                get {
                    return this.columnTubing_Temp_Whead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Casing_PressColumn {
                get {
                    return this.columnCasing_Press;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Casing_Oil_CutColumn {
                get {
                    return this.columnCasing_Oil_Cut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fluid_Level_From_SurfaceColumn {
                get {
                    return this.columnFluid_Level_From_Surface;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fluid_Level_Shot_DateColumn {
                get {
                    return this.columnFluid_Level_Shot_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fluid_Level_CommentColumn {
                get {
                    return this.columnFluid_Level_Comment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Use_Fluid_Insertia_For_AnalysisColumn {
                get {
                    return this.columnUse_Fluid_Insertia_For_Analysis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Unit_TypeColumn {
                get {
                    return this.columnUnit_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Pumping_UnitColumn {
                get {
                    return this.columnPumping_Unit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Wrist_PinColumn {
                get {
                    return this.columnWrist_Pin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Actual_StrokeColumn {
                get {
                    return this.columnActual_Stroke;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Torque_MethodeColumn {
                get {
                    return this.columnTorque_Methode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RotationColumn {
                get {
                    return this.columnRotation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Motor_TypeColumn {
                get {
                    return this.columnMotor_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Motor_SizeColumn {
                get {
                    return this.columnMotor_Size;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Slip_TorqueColumn {
                get {
                    return this.columnSlip_Torque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Measured_Motor_Amps_UpColumn {
                get {
                    return this.columnMeasured_Motor_Amps_Up;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Measured_Motor_Amps_DownColumn {
                get {
                    return this.columnMeasured_Motor_Amps_Down;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Max_Air_Balance_PressColumn {
                get {
                    return this.columnMax_Air_Balance_Press;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Min_Air_Balance_PressColumn {
                get {
                    return this.columnMin_Air_Balance_Press;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Crank_IDColumn {
                get {
                    return this.columnCrank_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CBTColumn {
                get {
                    return this.columnCBT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1_Lead_DistanceColumn {
                get {
                    return this.columnC1_Lead_Distance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1_Lead_Primary_WtColumn {
                get {
                    return this.columnC1_Lead_Primary_Wt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1_Lead_Aux_WTColumn {
                get {
                    return this.columnC1_Lead_Aux_WT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1_lag_DistanceColumn {
                get {
                    return this.columnC1_lag_Distance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1_Lag_Primary_WtColumn {
                get {
                    return this.columnC1_Lag_Primary_Wt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C1_Lag_Aux_WtColumn {
                get {
                    return this.columnC1_Lag_Aux_Wt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2_Lead_DistanceColumn {
                get {
                    return this.columnC2_Lead_Distance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2_Lead_Primary_WtColumn {
                get {
                    return this.columnC2_Lead_Primary_Wt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2_Lead_Aux_WTColumn {
                get {
                    return this.columnC2_Lead_Aux_WT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2_lag_DistanceColumn {
                get {
                    return this.columnC2_lag_Distance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2_Lag_Primary_WtColumn {
                get {
                    return this.columnC2_Lag_Primary_Wt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn C2_Lag_Aux_WtColumn {
                get {
                    return this.columnC2_Lag_Aux_Wt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Fluid_Above_PumpColumn {
                get {
                    return this.columnFluid_Above_Pump;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public BeamWellRow this[int index] {
                get {
                    return ((BeamWellRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event BeamWellRowChangeEventHandler BeamWellRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event BeamWellRowChangeEventHandler BeamWellRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event BeamWellRowChangeEventHandler BeamWellRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event BeamWellRowChangeEventHandler BeamWellRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddBeamWellRow(BeamWellRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public BeamWellRow AddBeamWellRow(
                        string wellname, 
                        string navigator_name, 
                        string CAO_ID, 
                        string Long_Name, 
                        string Internal_ID, 
                        string Group1, 
                        string Group2, 
                        string Group3, 
                        string Group4, 
                        string Facility_Description, 
                        string Rodpum_Controller, 
                        string Controller_Type, 
                        string Sub_Controller_Type, 
                        string Communication_Protocol, 
                        string Communication_Port, 
                        int Communication_Address, 
                        int Alt_Address, 
                        int Comm_retry, 
                        int Key_On_Delay, 
                        int Key_Off_Delay, 
                        int Alarm_Delay, 
                        int Clear_Delay, 
                        int Max_Event_History_Recs, 
                        decimal Top_Perforation, 
                        decimal Bottom_Perforation, 
                        decimal Anchor_depth, 
                        decimal Plug_Back_TD, 
                        decimal Pump_Measured, 
                        decimal Pump_Vertical, 
                        decimal Pump_ID, 
                        string Casing_Valve_Open, 
                        decimal Casing_OD, 
                        decimal Casing_Weight, 
                        decimal Tubing_OD, 
                        decimal Oil, 
                        decimal Water, 
                        decimal Gas, 
                        System.DateTime Last_WT_date, 
                        decimal Oil_Gravity, 
                        decimal Water_SP_Grav, 
                        decimal Gas_Sp_Grav, 
                        decimal Tubing_Press, 
                        decimal Tubing_Gradient, 
                        decimal Tubing_Temp_Whead, 
                        decimal Casing_Press, 
                        decimal Casing_Oil_Cut, 
                        decimal Fluid_Level_From_Surface, 
                        System.DateTime Fluid_Level_Shot_Date, 
                        string Fluid_Level_Comment, 
                        string Use_Fluid_Insertia_For_Analysis, 
                        string Unit_Type, 
                        string Pumping_Unit, 
                        int Wrist_Pin, 
                        decimal Actual_Stroke, 
                        string Torque_Methode, 
                        string Rotation, 
                        string Motor_Type, 
                        decimal Motor_Size, 
                        decimal Slip_Torque, 
                        decimal Measured_Motor_Amps_Up, 
                        decimal Measured_Motor_Amps_Down, 
                        decimal Max_Air_Balance_Press, 
                        decimal Min_Air_Balance_Press, 
                        string Crank_ID, 
                        decimal CBT, 
                        decimal C1_Lead_Distance, 
                        string C1_Lead_Primary_Wt, 
                        string C1_Lead_Aux_WT, 
                        decimal C1_lag_Distance, 
                        string C1_Lag_Primary_Wt, 
                        string C1_Lag_Aux_Wt, 
                        decimal C2_Lead_Distance, 
                        string C2_Lead_Primary_Wt, 
                        string C2_Lead_Aux_WT, 
                        decimal C2_lag_Distance, 
                        string C2_Lag_Primary_Wt, 
                        string C2_Lag_Aux_Wt, 
                        decimal Fluid_Above_Pump) {
                BeamWellRow rowBeamWellRow = ((BeamWellRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        wellname,
                        navigator_name,
                        CAO_ID,
                        Long_Name,
                        Internal_ID,
                        Group1,
                        Group2,
                        Group3,
                        Group4,
                        Facility_Description,
                        Rodpum_Controller,
                        Controller_Type,
                        Sub_Controller_Type,
                        Communication_Protocol,
                        Communication_Port,
                        Communication_Address,
                        Alt_Address,
                        Comm_retry,
                        Key_On_Delay,
                        Key_Off_Delay,
                        Alarm_Delay,
                        Clear_Delay,
                        Max_Event_History_Recs,
                        Top_Perforation,
                        Bottom_Perforation,
                        Anchor_depth,
                        Plug_Back_TD,
                        Pump_Measured,
                        Pump_Vertical,
                        Pump_ID,
                        Casing_Valve_Open,
                        Casing_OD,
                        Casing_Weight,
                        Tubing_OD,
                        Oil,
                        Water,
                        Gas,
                        Last_WT_date,
                        Oil_Gravity,
                        Water_SP_Grav,
                        Gas_Sp_Grav,
                        Tubing_Press,
                        Tubing_Gradient,
                        Tubing_Temp_Whead,
                        Casing_Press,
                        Casing_Oil_Cut,
                        Fluid_Level_From_Surface,
                        Fluid_Level_Shot_Date,
                        Fluid_Level_Comment,
                        Use_Fluid_Insertia_For_Analysis,
                        Unit_Type,
                        Pumping_Unit,
                        Wrist_Pin,
                        Actual_Stroke,
                        Torque_Methode,
                        Rotation,
                        Motor_Type,
                        Motor_Size,
                        Slip_Torque,
                        Measured_Motor_Amps_Up,
                        Measured_Motor_Amps_Down,
                        Max_Air_Balance_Press,
                        Min_Air_Balance_Press,
                        Crank_ID,
                        CBT,
                        C1_Lead_Distance,
                        C1_Lead_Primary_Wt,
                        C1_Lead_Aux_WT,
                        C1_lag_Distance,
                        C1_Lag_Primary_Wt,
                        C1_Lag_Aux_Wt,
                        C2_Lead_Distance,
                        C2_Lead_Primary_Wt,
                        C2_Lead_Aux_WT,
                        C2_lag_Distance,
                        C2_Lag_Primary_Wt,
                        C2_Lag_Aux_Wt,
                        Fluid_Above_Pump};
                rowBeamWellRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBeamWellRow);
                return rowBeamWellRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public BeamWellRow FindBywellname(string wellname) {
                return ((BeamWellRow)(this.Rows.Find(new object[] {
                            wellname})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BeamWellDataTable cln = ((BeamWellDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BeamWellDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnwellname = base.Columns["wellname"];
                this.columnnavigator_name = base.Columns["navigator_name"];
                this.columnCAO_ID = base.Columns["CAO_ID"];
                this.columnLong_Name = base.Columns["Long_Name"];
                this.columnInternal_ID = base.Columns["Internal_ID"];
                this.columnGroup1 = base.Columns["Group1"];
                this.columnGroup2 = base.Columns["Group2"];
                this.columnGroup3 = base.Columns["Group3"];
                this.columnGroup4 = base.Columns["Group4"];
                this.columnFacility_Description = base.Columns["Facility_Description"];
                this.columnRodpum_Controller = base.Columns["Rodpum_Controller"];
                this.columnController_Type = base.Columns["Controller_Type"];
                this.columnSub_Controller_Type = base.Columns["Sub_Controller_Type"];
                this.columnCommunication_Protocol = base.Columns["Communication_Protocol"];
                this.columnCommunication_Port = base.Columns["Communication_Port"];
                this.columnCommunication_Address = base.Columns["Communication_Address"];
                this.columnAlt_Address = base.Columns["Alt_Address"];
                this.columnComm_retry = base.Columns["Comm_retry"];
                this.columnKey_On_Delay = base.Columns["Key_On_Delay"];
                this.columnKey_Off_Delay = base.Columns["Key_Off_Delay"];
                this.columnAlarm_Delay = base.Columns["Alarm_Delay"];
                this.columnClear_Delay = base.Columns["Clear_Delay"];
                this.columnMax_Event_History_Recs = base.Columns["Max_Event_History_Recs"];
                this.columnTop_Perforation = base.Columns["Top_Perforation"];
                this.columnBottom_Perforation = base.Columns["Bottom_Perforation"];
                this.columnAnchor_depth = base.Columns["Anchor_depth"];
                this.columnPlug_Back_TD = base.Columns["Plug_Back_TD"];
                this.columnPump_Measured = base.Columns["Pump_Measured"];
                this.columnPump_Vertical = base.Columns["Pump_Vertical"];
                this.columnPump_ID = base.Columns["Pump_ID"];
                this.columnCasing_Valve_Open = base.Columns["Casing_Valve_Open"];
                this.columnCasing_OD = base.Columns["Casing_OD"];
                this.columnCasing_Weight = base.Columns["Casing_Weight"];
                this.columnTubing_OD = base.Columns["Tubing_OD"];
                this.columnOil = base.Columns["Oil"];
                this.columnWater = base.Columns["Water"];
                this.columnGas = base.Columns["Gas"];
                this.columnLast_WT_date = base.Columns["Last_WT_date"];
                this.columnOil_Gravity = base.Columns["Oil_Gravity"];
                this.columnWater_SP_Grav = base.Columns["Water_SP_Grav"];
                this.columnGas_Sp_Grav = base.Columns["Gas_Sp_Grav"];
                this.columnTubing_Press = base.Columns["Tubing_Press"];
                this.columnTubing_Gradient = base.Columns["Tubing_Gradient"];
                this.columnTubing_Temp_Whead = base.Columns["Tubing_Temp_Whead"];
                this.columnCasing_Press = base.Columns["Casing_Press"];
                this.columnCasing_Oil_Cut = base.Columns["Casing_Oil_Cut"];
                this.columnFluid_Level_From_Surface = base.Columns["Fluid_Level_From_Surface"];
                this.columnFluid_Level_Shot_Date = base.Columns["Fluid_Level_Shot_Date"];
                this.columnFluid_Level_Comment = base.Columns["Fluid_Level_Comment"];
                this.columnUse_Fluid_Insertia_For_Analysis = base.Columns["Use_Fluid_Insertia_For_Analysis"];
                this.columnUnit_Type = base.Columns["Unit_Type"];
                this.columnPumping_Unit = base.Columns["Pumping_Unit"];
                this.columnWrist_Pin = base.Columns["Wrist_Pin"];
                this.columnActual_Stroke = base.Columns["Actual_Stroke"];
                this.columnTorque_Methode = base.Columns["Torque_Methode"];
                this.columnRotation = base.Columns["Rotation"];
                this.columnMotor_Type = base.Columns["Motor_Type"];
                this.columnMotor_Size = base.Columns["Motor_Size"];
                this.columnSlip_Torque = base.Columns["Slip_Torque"];
                this.columnMeasured_Motor_Amps_Up = base.Columns["Measured_Motor_Amps_Up"];
                this.columnMeasured_Motor_Amps_Down = base.Columns["Measured_Motor_Amps_Down"];
                this.columnMax_Air_Balance_Press = base.Columns["Max_Air_Balance_Press"];
                this.columnMin_Air_Balance_Press = base.Columns["Min_Air_Balance_Press"];
                this.columnCrank_ID = base.Columns["Crank_ID"];
                this.columnCBT = base.Columns["CBT"];
                this.columnC1_Lead_Distance = base.Columns["C1_Lead_Distance"];
                this.columnC1_Lead_Primary_Wt = base.Columns["C1_Lead_Primary_Wt"];
                this.columnC1_Lead_Aux_WT = base.Columns["C1_Lead_Aux_WT"];
                this.columnC1_lag_Distance = base.Columns["C1_lag_Distance"];
                this.columnC1_Lag_Primary_Wt = base.Columns["C1_Lag_Primary_Wt"];
                this.columnC1_Lag_Aux_Wt = base.Columns["C1_Lag_Aux_Wt"];
                this.columnC2_Lead_Distance = base.Columns["C2_Lead_Distance"];
                this.columnC2_Lead_Primary_Wt = base.Columns["C2_Lead_Primary_Wt"];
                this.columnC2_Lead_Aux_WT = base.Columns["C2_Lead_Aux_WT"];
                this.columnC2_lag_Distance = base.Columns["C2_lag_Distance"];
                this.columnC2_Lag_Primary_Wt = base.Columns["C2_Lag_Primary_Wt"];
                this.columnC2_Lag_Aux_Wt = base.Columns["C2_Lag_Aux_Wt"];
                this.columnFluid_Above_Pump = base.Columns["Fluid_Above_Pump"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnwellname = new global::System.Data.DataColumn("wellname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwellname);
                this.columnnavigator_name = new global::System.Data.DataColumn("navigator_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnavigator_name);
                this.columnCAO_ID = new global::System.Data.DataColumn("CAO_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAO_ID);
                this.columnLong_Name = new global::System.Data.DataColumn("Long_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLong_Name);
                this.columnInternal_ID = new global::System.Data.DataColumn("Internal_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInternal_ID);
                this.columnGroup1 = new global::System.Data.DataColumn("Group1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup1);
                this.columnGroup2 = new global::System.Data.DataColumn("Group2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup2);
                this.columnGroup3 = new global::System.Data.DataColumn("Group3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup3);
                this.columnGroup4 = new global::System.Data.DataColumn("Group4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroup4);
                this.columnFacility_Description = new global::System.Data.DataColumn("Facility_Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacility_Description);
                this.columnRodpum_Controller = new global::System.Data.DataColumn("Rodpum_Controller", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRodpum_Controller);
                this.columnController_Type = new global::System.Data.DataColumn("Controller_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnController_Type);
                this.columnSub_Controller_Type = new global::System.Data.DataColumn("Sub_Controller_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSub_Controller_Type);
                this.columnCommunication_Protocol = new global::System.Data.DataColumn("Communication_Protocol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommunication_Protocol);
                this.columnCommunication_Port = new global::System.Data.DataColumn("Communication_Port", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommunication_Port);
                this.columnCommunication_Address = new global::System.Data.DataColumn("Communication_Address", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommunication_Address);
                this.columnAlt_Address = new global::System.Data.DataColumn("Alt_Address", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlt_Address);
                this.columnComm_retry = new global::System.Data.DataColumn("Comm_retry", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComm_retry);
                this.columnKey_On_Delay = new global::System.Data.DataColumn("Key_On_Delay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKey_On_Delay);
                this.columnKey_Off_Delay = new global::System.Data.DataColumn("Key_Off_Delay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKey_Off_Delay);
                this.columnAlarm_Delay = new global::System.Data.DataColumn("Alarm_Delay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlarm_Delay);
                this.columnClear_Delay = new global::System.Data.DataColumn("Clear_Delay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClear_Delay);
                this.columnMax_Event_History_Recs = new global::System.Data.DataColumn("Max_Event_History_Recs", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_Event_History_Recs);
                this.columnTop_Perforation = new global::System.Data.DataColumn("Top_Perforation", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTop_Perforation);
                this.columnBottom_Perforation = new global::System.Data.DataColumn("Bottom_Perforation", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBottom_Perforation);
                this.columnAnchor_depth = new global::System.Data.DataColumn("Anchor_depth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnchor_depth);
                this.columnPlug_Back_TD = new global::System.Data.DataColumn("Plug_Back_TD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlug_Back_TD);
                this.columnPump_Measured = new global::System.Data.DataColumn("Pump_Measured", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPump_Measured);
                this.columnPump_Vertical = new global::System.Data.DataColumn("Pump_Vertical", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPump_Vertical);
                this.columnPump_ID = new global::System.Data.DataColumn("Pump_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPump_ID);
                this.columnCasing_Valve_Open = new global::System.Data.DataColumn("Casing_Valve_Open", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasing_Valve_Open);
                this.columnCasing_OD = new global::System.Data.DataColumn("Casing_OD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasing_OD);
                this.columnCasing_Weight = new global::System.Data.DataColumn("Casing_Weight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasing_Weight);
                this.columnTubing_OD = new global::System.Data.DataColumn("Tubing_OD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubing_OD);
                this.columnOil = new global::System.Data.DataColumn("Oil", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOil);
                this.columnWater = new global::System.Data.DataColumn("Water", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWater);
                this.columnGas = new global::System.Data.DataColumn("Gas", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGas);
                this.columnLast_WT_date = new global::System.Data.DataColumn("Last_WT_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLast_WT_date);
                this.columnOil_Gravity = new global::System.Data.DataColumn("Oil_Gravity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOil_Gravity);
                this.columnWater_SP_Grav = new global::System.Data.DataColumn("Water_SP_Grav", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWater_SP_Grav);
                this.columnGas_Sp_Grav = new global::System.Data.DataColumn("Gas_Sp_Grav", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGas_Sp_Grav);
                this.columnTubing_Press = new global::System.Data.DataColumn("Tubing_Press", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubing_Press);
                this.columnTubing_Gradient = new global::System.Data.DataColumn("Tubing_Gradient", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubing_Gradient);
                this.columnTubing_Temp_Whead = new global::System.Data.DataColumn("Tubing_Temp_Whead", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTubing_Temp_Whead);
                this.columnCasing_Press = new global::System.Data.DataColumn("Casing_Press", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasing_Press);
                this.columnCasing_Oil_Cut = new global::System.Data.DataColumn("Casing_Oil_Cut", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCasing_Oil_Cut);
                this.columnFluid_Level_From_Surface = new global::System.Data.DataColumn("Fluid_Level_From_Surface", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFluid_Level_From_Surface);
                this.columnFluid_Level_Shot_Date = new global::System.Data.DataColumn("Fluid_Level_Shot_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFluid_Level_Shot_Date);
                this.columnFluid_Level_Comment = new global::System.Data.DataColumn("Fluid_Level_Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFluid_Level_Comment);
                this.columnUse_Fluid_Insertia_For_Analysis = new global::System.Data.DataColumn("Use_Fluid_Insertia_For_Analysis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUse_Fluid_Insertia_For_Analysis);
                this.columnUnit_Type = new global::System.Data.DataColumn("Unit_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Type);
                this.columnPumping_Unit = new global::System.Data.DataColumn("Pumping_Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPumping_Unit);
                this.columnWrist_Pin = new global::System.Data.DataColumn("Wrist_Pin", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWrist_Pin);
                this.columnActual_Stroke = new global::System.Data.DataColumn("Actual_Stroke", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActual_Stroke);
                this.columnTorque_Methode = new global::System.Data.DataColumn("Torque_Methode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTorque_Methode);
                this.columnRotation = new global::System.Data.DataColumn("Rotation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRotation);
                this.columnMotor_Type = new global::System.Data.DataColumn("Motor_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotor_Type);
                this.columnMotor_Size = new global::System.Data.DataColumn("Motor_Size", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotor_Size);
                this.columnSlip_Torque = new global::System.Data.DataColumn("Slip_Torque", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlip_Torque);
                this.columnMeasured_Motor_Amps_Up = new global::System.Data.DataColumn("Measured_Motor_Amps_Up", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasured_Motor_Amps_Up);
                this.columnMeasured_Motor_Amps_Down = new global::System.Data.DataColumn("Measured_Motor_Amps_Down", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasured_Motor_Amps_Down);
                this.columnMax_Air_Balance_Press = new global::System.Data.DataColumn("Max_Air_Balance_Press", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_Air_Balance_Press);
                this.columnMin_Air_Balance_Press = new global::System.Data.DataColumn("Min_Air_Balance_Press", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMin_Air_Balance_Press);
                this.columnCrank_ID = new global::System.Data.DataColumn("Crank_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCrank_ID);
                this.columnCBT = new global::System.Data.DataColumn("CBT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBT);
                this.columnC1_Lead_Distance = new global::System.Data.DataColumn("C1_Lead_Distance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1_Lead_Distance);
                this.columnC1_Lead_Primary_Wt = new global::System.Data.DataColumn("C1_Lead_Primary_Wt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1_Lead_Primary_Wt);
                this.columnC1_Lead_Aux_WT = new global::System.Data.DataColumn("C1_Lead_Aux_WT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1_Lead_Aux_WT);
                this.columnC1_lag_Distance = new global::System.Data.DataColumn("C1_lag_Distance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1_lag_Distance);
                this.columnC1_Lag_Primary_Wt = new global::System.Data.DataColumn("C1_Lag_Primary_Wt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1_Lag_Primary_Wt);
                this.columnC1_Lag_Aux_Wt = new global::System.Data.DataColumn("C1_Lag_Aux_Wt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC1_Lag_Aux_Wt);
                this.columnC2_Lead_Distance = new global::System.Data.DataColumn("C2_Lead_Distance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2_Lead_Distance);
                this.columnC2_Lead_Primary_Wt = new global::System.Data.DataColumn("C2_Lead_Primary_Wt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2_Lead_Primary_Wt);
                this.columnC2_Lead_Aux_WT = new global::System.Data.DataColumn("C2_Lead_Aux_WT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2_Lead_Aux_WT);
                this.columnC2_lag_Distance = new global::System.Data.DataColumn("C2_lag_Distance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2_lag_Distance);
                this.columnC2_Lag_Primary_Wt = new global::System.Data.DataColumn("C2_Lag_Primary_Wt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2_Lag_Primary_Wt);
                this.columnC2_Lag_Aux_Wt = new global::System.Data.DataColumn("C2_Lag_Aux_Wt", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC2_Lag_Aux_Wt);
                this.columnFluid_Above_Pump = new global::System.Data.DataColumn("Fluid_Above_Pump", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFluid_Above_Pump);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnwellname}, true));
                this.columnwellname.AllowDBNull = false;
                this.columnwellname.Unique = true;
                this.columnwellname.MaxLength = 20;
                this.columnnavigator_name.MaxLength = 50;
                this.columnCAO_ID.MaxLength = 50;
                this.columnLong_Name.MaxLength = 50;
                this.columnInternal_ID.MaxLength = 50;
                this.columnGroup1.MaxLength = 50;
                this.columnGroup2.MaxLength = 50;
                this.columnGroup3.MaxLength = 50;
                this.columnGroup4.MaxLength = 50;
                this.columnFacility_Description.MaxLength = 50;
                this.columnRodpum_Controller.MaxLength = 50;
                this.columnController_Type.MaxLength = 50;
                this.columnSub_Controller_Type.MaxLength = 50;
                this.columnCommunication_Protocol.MaxLength = 50;
                this.columnCommunication_Port.MaxLength = 50;
                this.columnCasing_Valve_Open.MaxLength = 1;
                this.columnFluid_Level_Comment.MaxLength = 50;
                this.columnUse_Fluid_Insertia_For_Analysis.MaxLength = 1;
                this.columnUnit_Type.MaxLength = 50;
                this.columnPumping_Unit.MaxLength = 50;
                this.columnTorque_Methode.MaxLength = 50;
                this.columnRotation.MaxLength = 50;
                this.columnMotor_Type.MaxLength = 50;
                this.columnCrank_ID.MaxLength = 50;
                this.columnC1_Lead_Primary_Wt.MaxLength = 50;
                this.columnC1_Lead_Aux_WT.MaxLength = 50;
                this.columnC1_Lag_Primary_Wt.MaxLength = 50;
                this.columnC1_Lag_Aux_Wt.MaxLength = 50;
                this.columnC2_Lead_Primary_Wt.MaxLength = 50;
                this.columnC2_Lead_Aux_WT.MaxLength = 50;
                this.columnC2_Lag_Primary_Wt.MaxLength = 50;
                this.columnC2_Lag_Aux_Wt.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public BeamWellRow NewBeamWellRow() {
                return ((BeamWellRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BeamWellRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BeamWellRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BeamWellRowChanged != null)) {
                    this.BeamWellRowChanged(this, new BeamWellRowChangeEvent(((BeamWellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BeamWellRowChanging != null)) {
                    this.BeamWellRowChanging(this, new BeamWellRowChangeEvent(((BeamWellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BeamWellRowDeleted != null)) {
                    this.BeamWellRowDeleted(this, new BeamWellRowChangeEvent(((BeamWellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BeamWellRowDeleting != null)) {
                    this.BeamWellRowDeleting(this, new BeamWellRowChangeEvent(((BeamWellRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveBeamWellRow(BeamWellRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BeamWellDataSet ds = new BeamWellDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BeamWellDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BeamWellRow : global::System.Data.DataRow {
            
            private BeamWellDataTable tableBeamWell;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal BeamWellRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBeamWell = ((BeamWellDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string wellname {
                get {
                    return ((string)(this[this.tableBeamWell.wellnameColumn]));
                }
                set {
                    this[this.tableBeamWell.wellnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string navigator_name {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.navigator_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'navigator_name\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.navigator_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CAO_ID {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.CAO_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CAO_ID\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.CAO_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Long_Name {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Long_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Long_Name\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Long_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Internal_ID {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Internal_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Internal_ID\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Internal_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group1 {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Group1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group1\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Group1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group2 {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Group2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group2\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Group2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group3 {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Group3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group3\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Group3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Group4 {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Group4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Group4\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Group4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Facility_Description {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Facility_DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Facility_Description\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Facility_DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Rodpum_Controller {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Rodpum_ControllerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rodpum_Controller\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Rodpum_ControllerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Controller_Type {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Controller_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Controller_Type\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Controller_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Sub_Controller_Type {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Sub_Controller_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sub_Controller_Type\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Sub_Controller_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Communication_Protocol {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Communication_ProtocolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Communication_Protocol\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Communication_ProtocolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Communication_Port {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Communication_PortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Communication_Port\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Communication_PortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Communication_Address {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Communication_AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Communication_Address\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Communication_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Alt_Address {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Alt_AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alt_Address\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Alt_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Comm_retry {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Comm_retryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comm_retry\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Comm_retryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Key_On_Delay {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Key_On_DelayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Key_On_Delay\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Key_On_DelayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Key_Off_Delay {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Key_Off_DelayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Key_Off_Delay\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Key_Off_DelayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Alarm_Delay {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Alarm_DelayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alarm_Delay\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Alarm_DelayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Clear_Delay {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Clear_DelayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Clear_Delay\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Clear_DelayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Max_Event_History_Recs {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Max_Event_History_RecsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Event_History_Recs\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Max_Event_History_RecsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Top_Perforation {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Top_PerforationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Top_Perforation\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Top_PerforationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Bottom_Perforation {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Bottom_PerforationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bottom_Perforation\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Bottom_PerforationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Anchor_depth {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Anchor_depthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Anchor_depth\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Anchor_depthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Plug_Back_TD {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Plug_Back_TDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Plug_Back_TD\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Plug_Back_TDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Pump_Measured {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Pump_MeasuredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pump_Measured\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Pump_MeasuredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Pump_Vertical {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Pump_VerticalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pump_Vertical\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Pump_VerticalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Pump_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Pump_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pump_ID\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Pump_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Casing_Valve_Open {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Casing_Valve_OpenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Casing_Valve_Open\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Casing_Valve_OpenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Casing_OD {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Casing_ODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Casing_OD\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Casing_ODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Casing_Weight {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Casing_WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Casing_Weight\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Casing_WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Tubing_OD {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Tubing_ODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tubing_OD\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Tubing_ODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Oil {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.OilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oil\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.OilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Water {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.WaterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Water\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.WaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Gas {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.GasColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gas\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.GasColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Last_WT_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBeamWell.Last_WT_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Last_WT_date\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Last_WT_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Oil_Gravity {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Oil_GravityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oil_Gravity\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Oil_GravityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Water_SP_Grav {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Water_SP_GravColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Water_SP_Grav\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Water_SP_GravColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Gas_Sp_Grav {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Gas_Sp_GravColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gas_Sp_Grav\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Gas_Sp_GravColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Tubing_Press {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Tubing_PressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tubing_Press\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Tubing_PressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Tubing_Gradient {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Tubing_GradientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tubing_Gradient\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Tubing_GradientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Tubing_Temp_Whead {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Tubing_Temp_WheadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tubing_Temp_Whead\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Tubing_Temp_WheadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Casing_Press {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Casing_PressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Casing_Press\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Casing_PressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Casing_Oil_Cut {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Casing_Oil_CutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Casing_Oil_Cut\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Casing_Oil_CutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Fluid_Level_From_Surface {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Fluid_Level_From_SurfaceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fluid_Level_From_Surface\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Fluid_Level_From_SurfaceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime Fluid_Level_Shot_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBeamWell.Fluid_Level_Shot_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fluid_Level_Shot_Date\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Fluid_Level_Shot_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Fluid_Level_Comment {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Fluid_Level_CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fluid_Level_Comment\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Fluid_Level_CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Use_Fluid_Insertia_For_Analysis {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Use_Fluid_Insertia_For_AnalysisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Use_Fluid_Insertia_For_Analysis\' in table \'BeamWell\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Use_Fluid_Insertia_For_AnalysisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Unit_Type {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Unit_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_Type\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Unit_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Pumping_Unit {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Pumping_UnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pumping_Unit\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Pumping_UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Wrist_Pin {
                get {
                    try {
                        return ((int)(this[this.tableBeamWell.Wrist_PinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Wrist_Pin\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Wrist_PinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Actual_Stroke {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Actual_StrokeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Actual_Stroke\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Actual_StrokeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Torque_Methode {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Torque_MethodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Torque_Methode\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Torque_MethodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Rotation {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.RotationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rotation\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.RotationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Motor_Type {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Motor_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Motor_Type\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Motor_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Motor_Size {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Motor_SizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Motor_Size\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Motor_SizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Slip_Torque {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Slip_TorqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Slip_Torque\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Slip_TorqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Measured_Motor_Amps_Up {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Measured_Motor_Amps_UpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Measured_Motor_Amps_Up\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Measured_Motor_Amps_UpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Measured_Motor_Amps_Down {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Measured_Motor_Amps_DownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Measured_Motor_Amps_Down\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Measured_Motor_Amps_DownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Max_Air_Balance_Press {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Max_Air_Balance_PressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Air_Balance_Press\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Max_Air_Balance_PressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Min_Air_Balance_Press {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Min_Air_Balance_PressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Min_Air_Balance_Press\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Min_Air_Balance_PressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Crank_ID {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.Crank_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Crank_ID\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Crank_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal CBT {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.CBTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CBT\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.CBTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal C1_Lead_Distance {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.C1_Lead_DistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1_Lead_Distance\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C1_Lead_DistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C1_Lead_Primary_Wt {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C1_Lead_Primary_WtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1_Lead_Primary_Wt\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C1_Lead_Primary_WtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C1_Lead_Aux_WT {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C1_Lead_Aux_WTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1_Lead_Aux_WT\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C1_Lead_Aux_WTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal C1_lag_Distance {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.C1_lag_DistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1_lag_Distance\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C1_lag_DistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C1_Lag_Primary_Wt {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C1_Lag_Primary_WtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1_Lag_Primary_Wt\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C1_Lag_Primary_WtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C1_Lag_Aux_Wt {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C1_Lag_Aux_WtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C1_Lag_Aux_Wt\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C1_Lag_Aux_WtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal C2_Lead_Distance {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.C2_Lead_DistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2_Lead_Distance\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C2_Lead_DistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C2_Lead_Primary_Wt {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C2_Lead_Primary_WtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2_Lead_Primary_Wt\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C2_Lead_Primary_WtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C2_Lead_Aux_WT {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C2_Lead_Aux_WTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2_Lead_Aux_WT\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C2_Lead_Aux_WTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal C2_lag_Distance {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.C2_lag_DistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2_lag_Distance\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C2_lag_DistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C2_Lag_Primary_Wt {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C2_Lag_Primary_WtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2_Lag_Primary_Wt\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C2_Lag_Primary_WtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string C2_Lag_Aux_Wt {
                get {
                    try {
                        return ((string)(this[this.tableBeamWell.C2_Lag_Aux_WtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'C2_Lag_Aux_Wt\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.C2_Lag_Aux_WtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal Fluid_Above_Pump {
                get {
                    try {
                        return ((decimal)(this[this.tableBeamWell.Fluid_Above_PumpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fluid_Above_Pump\' in table \'BeamWell\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBeamWell.Fluid_Above_PumpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isnavigator_nameNull() {
                return this.IsNull(this.tableBeamWell.navigator_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setnavigator_nameNull() {
                this[this.tableBeamWell.navigator_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCAO_IDNull() {
                return this.IsNull(this.tableBeamWell.CAO_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCAO_IDNull() {
                this[this.tableBeamWell.CAO_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLong_NameNull() {
                return this.IsNull(this.tableBeamWell.Long_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLong_NameNull() {
                this[this.tableBeamWell.Long_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInternal_IDNull() {
                return this.IsNull(this.tableBeamWell.Internal_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInternal_IDNull() {
                this[this.tableBeamWell.Internal_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup1Null() {
                return this.IsNull(this.tableBeamWell.Group1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup1Null() {
                this[this.tableBeamWell.Group1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup2Null() {
                return this.IsNull(this.tableBeamWell.Group2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup2Null() {
                this[this.tableBeamWell.Group2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup3Null() {
                return this.IsNull(this.tableBeamWell.Group3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup3Null() {
                this[this.tableBeamWell.Group3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGroup4Null() {
                return this.IsNull(this.tableBeamWell.Group4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGroup4Null() {
                this[this.tableBeamWell.Group4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFacility_DescriptionNull() {
                return this.IsNull(this.tableBeamWell.Facility_DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFacility_DescriptionNull() {
                this[this.tableBeamWell.Facility_DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRodpum_ControllerNull() {
                return this.IsNull(this.tableBeamWell.Rodpum_ControllerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRodpum_ControllerNull() {
                this[this.tableBeamWell.Rodpum_ControllerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsController_TypeNull() {
                return this.IsNull(this.tableBeamWell.Controller_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetController_TypeNull() {
                this[this.tableBeamWell.Controller_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSub_Controller_TypeNull() {
                return this.IsNull(this.tableBeamWell.Sub_Controller_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSub_Controller_TypeNull() {
                this[this.tableBeamWell.Sub_Controller_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommunication_ProtocolNull() {
                return this.IsNull(this.tableBeamWell.Communication_ProtocolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommunication_ProtocolNull() {
                this[this.tableBeamWell.Communication_ProtocolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommunication_PortNull() {
                return this.IsNull(this.tableBeamWell.Communication_PortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommunication_PortNull() {
                this[this.tableBeamWell.Communication_PortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCommunication_AddressNull() {
                return this.IsNull(this.tableBeamWell.Communication_AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCommunication_AddressNull() {
                this[this.tableBeamWell.Communication_AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAlt_AddressNull() {
                return this.IsNull(this.tableBeamWell.Alt_AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAlt_AddressNull() {
                this[this.tableBeamWell.Alt_AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsComm_retryNull() {
                return this.IsNull(this.tableBeamWell.Comm_retryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetComm_retryNull() {
                this[this.tableBeamWell.Comm_retryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsKey_On_DelayNull() {
                return this.IsNull(this.tableBeamWell.Key_On_DelayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetKey_On_DelayNull() {
                this[this.tableBeamWell.Key_On_DelayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsKey_Off_DelayNull() {
                return this.IsNull(this.tableBeamWell.Key_Off_DelayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetKey_Off_DelayNull() {
                this[this.tableBeamWell.Key_Off_DelayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAlarm_DelayNull() {
                return this.IsNull(this.tableBeamWell.Alarm_DelayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAlarm_DelayNull() {
                this[this.tableBeamWell.Alarm_DelayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsClear_DelayNull() {
                return this.IsNull(this.tableBeamWell.Clear_DelayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetClear_DelayNull() {
                this[this.tableBeamWell.Clear_DelayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMax_Event_History_RecsNull() {
                return this.IsNull(this.tableBeamWell.Max_Event_History_RecsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMax_Event_History_RecsNull() {
                this[this.tableBeamWell.Max_Event_History_RecsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTop_PerforationNull() {
                return this.IsNull(this.tableBeamWell.Top_PerforationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTop_PerforationNull() {
                this[this.tableBeamWell.Top_PerforationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBottom_PerforationNull() {
                return this.IsNull(this.tableBeamWell.Bottom_PerforationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBottom_PerforationNull() {
                this[this.tableBeamWell.Bottom_PerforationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAnchor_depthNull() {
                return this.IsNull(this.tableBeamWell.Anchor_depthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAnchor_depthNull() {
                this[this.tableBeamWell.Anchor_depthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPlug_Back_TDNull() {
                return this.IsNull(this.tableBeamWell.Plug_Back_TDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPlug_Back_TDNull() {
                this[this.tableBeamWell.Plug_Back_TDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPump_MeasuredNull() {
                return this.IsNull(this.tableBeamWell.Pump_MeasuredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPump_MeasuredNull() {
                this[this.tableBeamWell.Pump_MeasuredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPump_VerticalNull() {
                return this.IsNull(this.tableBeamWell.Pump_VerticalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPump_VerticalNull() {
                this[this.tableBeamWell.Pump_VerticalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPump_IDNull() {
                return this.IsNull(this.tableBeamWell.Pump_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPump_IDNull() {
                this[this.tableBeamWell.Pump_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasing_Valve_OpenNull() {
                return this.IsNull(this.tableBeamWell.Casing_Valve_OpenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasing_Valve_OpenNull() {
                this[this.tableBeamWell.Casing_Valve_OpenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasing_ODNull() {
                return this.IsNull(this.tableBeamWell.Casing_ODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasing_ODNull() {
                this[this.tableBeamWell.Casing_ODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasing_WeightNull() {
                return this.IsNull(this.tableBeamWell.Casing_WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasing_WeightNull() {
                this[this.tableBeamWell.Casing_WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTubing_ODNull() {
                return this.IsNull(this.tableBeamWell.Tubing_ODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTubing_ODNull() {
                this[this.tableBeamWell.Tubing_ODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOilNull() {
                return this.IsNull(this.tableBeamWell.OilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOilNull() {
                this[this.tableBeamWell.OilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWaterNull() {
                return this.IsNull(this.tableBeamWell.WaterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWaterNull() {
                this[this.tableBeamWell.WaterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGasNull() {
                return this.IsNull(this.tableBeamWell.GasColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGasNull() {
                this[this.tableBeamWell.GasColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLast_WT_dateNull() {
                return this.IsNull(this.tableBeamWell.Last_WT_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLast_WT_dateNull() {
                this[this.tableBeamWell.Last_WT_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOil_GravityNull() {
                return this.IsNull(this.tableBeamWell.Oil_GravityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOil_GravityNull() {
                this[this.tableBeamWell.Oil_GravityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWater_SP_GravNull() {
                return this.IsNull(this.tableBeamWell.Water_SP_GravColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWater_SP_GravNull() {
                this[this.tableBeamWell.Water_SP_GravColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGas_Sp_GravNull() {
                return this.IsNull(this.tableBeamWell.Gas_Sp_GravColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGas_Sp_GravNull() {
                this[this.tableBeamWell.Gas_Sp_GravColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTubing_PressNull() {
                return this.IsNull(this.tableBeamWell.Tubing_PressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTubing_PressNull() {
                this[this.tableBeamWell.Tubing_PressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTubing_GradientNull() {
                return this.IsNull(this.tableBeamWell.Tubing_GradientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTubing_GradientNull() {
                this[this.tableBeamWell.Tubing_GradientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTubing_Temp_WheadNull() {
                return this.IsNull(this.tableBeamWell.Tubing_Temp_WheadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTubing_Temp_WheadNull() {
                this[this.tableBeamWell.Tubing_Temp_WheadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasing_PressNull() {
                return this.IsNull(this.tableBeamWell.Casing_PressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasing_PressNull() {
                this[this.tableBeamWell.Casing_PressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCasing_Oil_CutNull() {
                return this.IsNull(this.tableBeamWell.Casing_Oil_CutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCasing_Oil_CutNull() {
                this[this.tableBeamWell.Casing_Oil_CutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFluid_Level_From_SurfaceNull() {
                return this.IsNull(this.tableBeamWell.Fluid_Level_From_SurfaceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFluid_Level_From_SurfaceNull() {
                this[this.tableBeamWell.Fluid_Level_From_SurfaceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFluid_Level_Shot_DateNull() {
                return this.IsNull(this.tableBeamWell.Fluid_Level_Shot_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFluid_Level_Shot_DateNull() {
                this[this.tableBeamWell.Fluid_Level_Shot_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFluid_Level_CommentNull() {
                return this.IsNull(this.tableBeamWell.Fluid_Level_CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFluid_Level_CommentNull() {
                this[this.tableBeamWell.Fluid_Level_CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUse_Fluid_Insertia_For_AnalysisNull() {
                return this.IsNull(this.tableBeamWell.Use_Fluid_Insertia_For_AnalysisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUse_Fluid_Insertia_For_AnalysisNull() {
                this[this.tableBeamWell.Use_Fluid_Insertia_For_AnalysisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUnit_TypeNull() {
                return this.IsNull(this.tableBeamWell.Unit_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUnit_TypeNull() {
                this[this.tableBeamWell.Unit_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsPumping_UnitNull() {
                return this.IsNull(this.tableBeamWell.Pumping_UnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetPumping_UnitNull() {
                this[this.tableBeamWell.Pumping_UnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWrist_PinNull() {
                return this.IsNull(this.tableBeamWell.Wrist_PinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWrist_PinNull() {
                this[this.tableBeamWell.Wrist_PinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsActual_StrokeNull() {
                return this.IsNull(this.tableBeamWell.Actual_StrokeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetActual_StrokeNull() {
                this[this.tableBeamWell.Actual_StrokeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTorque_MethodeNull() {
                return this.IsNull(this.tableBeamWell.Torque_MethodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTorque_MethodeNull() {
                this[this.tableBeamWell.Torque_MethodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRotationNull() {
                return this.IsNull(this.tableBeamWell.RotationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRotationNull() {
                this[this.tableBeamWell.RotationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMotor_TypeNull() {
                return this.IsNull(this.tableBeamWell.Motor_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMotor_TypeNull() {
                this[this.tableBeamWell.Motor_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMotor_SizeNull() {
                return this.IsNull(this.tableBeamWell.Motor_SizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMotor_SizeNull() {
                this[this.tableBeamWell.Motor_SizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSlip_TorqueNull() {
                return this.IsNull(this.tableBeamWell.Slip_TorqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSlip_TorqueNull() {
                this[this.tableBeamWell.Slip_TorqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMeasured_Motor_Amps_UpNull() {
                return this.IsNull(this.tableBeamWell.Measured_Motor_Amps_UpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMeasured_Motor_Amps_UpNull() {
                this[this.tableBeamWell.Measured_Motor_Amps_UpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMeasured_Motor_Amps_DownNull() {
                return this.IsNull(this.tableBeamWell.Measured_Motor_Amps_DownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMeasured_Motor_Amps_DownNull() {
                this[this.tableBeamWell.Measured_Motor_Amps_DownColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMax_Air_Balance_PressNull() {
                return this.IsNull(this.tableBeamWell.Max_Air_Balance_PressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMax_Air_Balance_PressNull() {
                this[this.tableBeamWell.Max_Air_Balance_PressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMin_Air_Balance_PressNull() {
                return this.IsNull(this.tableBeamWell.Min_Air_Balance_PressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMin_Air_Balance_PressNull() {
                this[this.tableBeamWell.Min_Air_Balance_PressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCrank_IDNull() {
                return this.IsNull(this.tableBeamWell.Crank_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCrank_IDNull() {
                this[this.tableBeamWell.Crank_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCBTNull() {
                return this.IsNull(this.tableBeamWell.CBTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCBTNull() {
                this[this.tableBeamWell.CBTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1_Lead_DistanceNull() {
                return this.IsNull(this.tableBeamWell.C1_Lead_DistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1_Lead_DistanceNull() {
                this[this.tableBeamWell.C1_Lead_DistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1_Lead_Primary_WtNull() {
                return this.IsNull(this.tableBeamWell.C1_Lead_Primary_WtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1_Lead_Primary_WtNull() {
                this[this.tableBeamWell.C1_Lead_Primary_WtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1_Lead_Aux_WTNull() {
                return this.IsNull(this.tableBeamWell.C1_Lead_Aux_WTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1_Lead_Aux_WTNull() {
                this[this.tableBeamWell.C1_Lead_Aux_WTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1_lag_DistanceNull() {
                return this.IsNull(this.tableBeamWell.C1_lag_DistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1_lag_DistanceNull() {
                this[this.tableBeamWell.C1_lag_DistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1_Lag_Primary_WtNull() {
                return this.IsNull(this.tableBeamWell.C1_Lag_Primary_WtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1_Lag_Primary_WtNull() {
                this[this.tableBeamWell.C1_Lag_Primary_WtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC1_Lag_Aux_WtNull() {
                return this.IsNull(this.tableBeamWell.C1_Lag_Aux_WtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC1_Lag_Aux_WtNull() {
                this[this.tableBeamWell.C1_Lag_Aux_WtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2_Lead_DistanceNull() {
                return this.IsNull(this.tableBeamWell.C2_Lead_DistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2_Lead_DistanceNull() {
                this[this.tableBeamWell.C2_Lead_DistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2_Lead_Primary_WtNull() {
                return this.IsNull(this.tableBeamWell.C2_Lead_Primary_WtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2_Lead_Primary_WtNull() {
                this[this.tableBeamWell.C2_Lead_Primary_WtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2_Lead_Aux_WTNull() {
                return this.IsNull(this.tableBeamWell.C2_Lead_Aux_WTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2_Lead_Aux_WTNull() {
                this[this.tableBeamWell.C2_Lead_Aux_WTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2_lag_DistanceNull() {
                return this.IsNull(this.tableBeamWell.C2_lag_DistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2_lag_DistanceNull() {
                this[this.tableBeamWell.C2_lag_DistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2_Lag_Primary_WtNull() {
                return this.IsNull(this.tableBeamWell.C2_Lag_Primary_WtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2_Lag_Primary_WtNull() {
                this[this.tableBeamWell.C2_Lag_Primary_WtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsC2_Lag_Aux_WtNull() {
                return this.IsNull(this.tableBeamWell.C2_Lag_Aux_WtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetC2_Lag_Aux_WtNull() {
                this[this.tableBeamWell.C2_Lag_Aux_WtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFluid_Above_PumpNull() {
                return this.IsNull(this.tableBeamWell.Fluid_Above_PumpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFluid_Above_PumpNull() {
                this[this.tableBeamWell.Fluid_Above_PumpColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class BeamWellRowChangeEvent : global::System.EventArgs {
            
            private BeamWellRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public BeamWellRowChangeEvent(BeamWellRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public BeamWellRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LowisChartApp.ds.BeamWellDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BeamWellTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public BeamWellTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BeamWell";
            tableMapping.ColumnMappings.Add("wellname", "wellname");
            tableMapping.ColumnMappings.Add("navigator_name", "navigator_name");
            tableMapping.ColumnMappings.Add("CAO_ID", "CAO_ID");
            tableMapping.ColumnMappings.Add("Long_Name", "Long_Name");
            tableMapping.ColumnMappings.Add("Internal_ID", "Internal_ID");
            tableMapping.ColumnMappings.Add("Group1", "Group1");
            tableMapping.ColumnMappings.Add("Group2", "Group2");
            tableMapping.ColumnMappings.Add("Group3", "Group3");
            tableMapping.ColumnMappings.Add("Group4", "Group4");
            tableMapping.ColumnMappings.Add("Facility_Description", "Facility_Description");
            tableMapping.ColumnMappings.Add("Rodpum_Controller", "Rodpum_Controller");
            tableMapping.ColumnMappings.Add("Controller_Type", "Controller_Type");
            tableMapping.ColumnMappings.Add("Sub_Controller_Type", "Sub_Controller_Type");
            tableMapping.ColumnMappings.Add("Communication_Protocol", "Communication_Protocol");
            tableMapping.ColumnMappings.Add("Communication_Port", "Communication_Port");
            tableMapping.ColumnMappings.Add("Communication_Address", "Communication_Address");
            tableMapping.ColumnMappings.Add("Alt_Address", "Alt_Address");
            tableMapping.ColumnMappings.Add("Comm_retry", "Comm_retry");
            tableMapping.ColumnMappings.Add("Key_On_Delay", "Key_On_Delay");
            tableMapping.ColumnMappings.Add("Key_Off_Delay", "Key_Off_Delay");
            tableMapping.ColumnMappings.Add("Alarm_Delay", "Alarm_Delay");
            tableMapping.ColumnMappings.Add("Clear_Delay", "Clear_Delay");
            tableMapping.ColumnMappings.Add("Max_Event_History_Recs", "Max_Event_History_Recs");
            tableMapping.ColumnMappings.Add("Top_Perforation", "Top_Perforation");
            tableMapping.ColumnMappings.Add("Bottom_Perforation", "Bottom_Perforation");
            tableMapping.ColumnMappings.Add("Anchor_depth", "Anchor_depth");
            tableMapping.ColumnMappings.Add("Plug_Back_TD", "Plug_Back_TD");
            tableMapping.ColumnMappings.Add("Pump_Measured", "Pump_Measured");
            tableMapping.ColumnMappings.Add("Pump_Vertical", "Pump_Vertical");
            tableMapping.ColumnMappings.Add("Pump_ID", "Pump_ID");
            tableMapping.ColumnMappings.Add("Casing_Valve_Open", "Casing_Valve_Open");
            tableMapping.ColumnMappings.Add("Casing_OD", "Casing_OD");
            tableMapping.ColumnMappings.Add("Casing_Weight", "Casing_Weight");
            tableMapping.ColumnMappings.Add("Tubing_OD", "Tubing_OD");
            tableMapping.ColumnMappings.Add("Oil", "Oil");
            tableMapping.ColumnMappings.Add("Water", "Water");
            tableMapping.ColumnMappings.Add("Gas", "Gas");
            tableMapping.ColumnMappings.Add("Last_WT_date", "Last_WT_date");
            tableMapping.ColumnMappings.Add("Oil_Gravity", "Oil_Gravity");
            tableMapping.ColumnMappings.Add("Water_SP_Grav", "Water_SP_Grav");
            tableMapping.ColumnMappings.Add("Gas_Sp_Grav", "Gas_Sp_Grav");
            tableMapping.ColumnMappings.Add("Tubing_Press", "Tubing_Press");
            tableMapping.ColumnMappings.Add("Tubing_Gradient", "Tubing_Gradient");
            tableMapping.ColumnMappings.Add("Tubing_Temp_Whead", "Tubing_Temp_Whead");
            tableMapping.ColumnMappings.Add("Casing_Press", "Casing_Press");
            tableMapping.ColumnMappings.Add("Casing_Oil_Cut", "Casing_Oil_Cut");
            tableMapping.ColumnMappings.Add("Fluid_Level_From_Surface", "Fluid_Level_From_Surface");
            tableMapping.ColumnMappings.Add("Fluid_Level_Shot_Date", "Fluid_Level_Shot_Date");
            tableMapping.ColumnMappings.Add("Fluid_Level_Comment", "Fluid_Level_Comment");
            tableMapping.ColumnMappings.Add("Use_Fluid_Insertia_For_Analysis", "Use_Fluid_Insertia_For_Analysis");
            tableMapping.ColumnMappings.Add("Unit_Type", "Unit_Type");
            tableMapping.ColumnMappings.Add("Pumping_Unit", "Pumping_Unit");
            tableMapping.ColumnMappings.Add("Wrist_Pin", "Wrist_Pin");
            tableMapping.ColumnMappings.Add("Actual_Stroke", "Actual_Stroke");
            tableMapping.ColumnMappings.Add("Torque_Methode", "Torque_Methode");
            tableMapping.ColumnMappings.Add("Rotation", "Rotation");
            tableMapping.ColumnMappings.Add("Motor_Type", "Motor_Type");
            tableMapping.ColumnMappings.Add("Motor_Size", "Motor_Size");
            tableMapping.ColumnMappings.Add("Slip_Torque", "Slip_Torque");
            tableMapping.ColumnMappings.Add("Measured_Motor_Amps_Up", "Measured_Motor_Amps_Up");
            tableMapping.ColumnMappings.Add("Measured_Motor_Amps_Down", "Measured_Motor_Amps_Down");
            tableMapping.ColumnMappings.Add("Max_Air_Balance_Press", "Max_Air_Balance_Press");
            tableMapping.ColumnMappings.Add("Min_Air_Balance_Press", "Min_Air_Balance_Press");
            tableMapping.ColumnMappings.Add("Crank_ID", "Crank_ID");
            tableMapping.ColumnMappings.Add("CBT", "CBT");
            tableMapping.ColumnMappings.Add("C1_Lead_Distance", "C1_Lead_Distance");
            tableMapping.ColumnMappings.Add("C1_Lead_Primary_Wt", "C1_Lead_Primary_Wt");
            tableMapping.ColumnMappings.Add("C1_Lead_Aux_WT", "C1_Lead_Aux_WT");
            tableMapping.ColumnMappings.Add("C1_lag_Distance", "C1_lag_Distance");
            tableMapping.ColumnMappings.Add("C1_Lag_Primary_Wt", "C1_Lag_Primary_Wt");
            tableMapping.ColumnMappings.Add("C1_Lag_Aux_Wt", "C1_Lag_Aux_Wt");
            tableMapping.ColumnMappings.Add("C2_Lead_Distance", "C2_Lead_Distance");
            tableMapping.ColumnMappings.Add("C2_Lead_Primary_Wt", "C2_Lead_Primary_Wt");
            tableMapping.ColumnMappings.Add("C2_Lead_Aux_WT", "C2_Lead_Aux_WT");
            tableMapping.ColumnMappings.Add("C2_lag_Distance", "C2_lag_Distance");
            tableMapping.ColumnMappings.Add("C2_Lag_Primary_Wt", "C2_Lag_Primary_Wt");
            tableMapping.ColumnMappings.Add("C2_Lag_Aux_Wt", "C2_Lag_Aux_Wt");
            tableMapping.ColumnMappings.Add("Fluid_Above_Pump", "Fluid_Above_Pump");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [BeamWell] WHERE (([wellname] = @Original_wellname) AND ((@IsNull_nav" +
                "igator_name = 1 AND [navigator_name] IS NULL) OR ([navigator_name] = @Original_n" +
                "avigator_name)) AND ((@IsNull_CAO_ID = 1 AND [CAO_ID] IS NULL) OR ([CAO_ID] = @O" +
                "riginal_CAO_ID)) AND ((@IsNull_Long_Name = 1 AND [Long_Name] IS NULL) OR ([Long_" +
                "Name] = @Original_Long_Name)) AND ((@IsNull_Internal_ID = 1 AND [Internal_ID] IS" +
                " NULL) OR ([Internal_ID] = @Original_Internal_ID)) AND ((@IsNull_Group1 = 1 AND " +
                "[Group1] IS NULL) OR ([Group1] = @Original_Group1)) AND ((@IsNull_Group2 = 1 AND" +
                " [Group2] IS NULL) OR ([Group2] = @Original_Group2)) AND ((@IsNull_Group3 = 1 AN" +
                "D [Group3] IS NULL) OR ([Group3] = @Original_Group3)) AND ((@IsNull_Group4 = 1 A" +
                "ND [Group4] IS NULL) OR ([Group4] = @Original_Group4)) AND ((@IsNull_Facility_De" +
                "scription = 1 AND [Facility_Description] IS NULL) OR ([Facility_Description] = @" +
                "Original_Facility_Description)) AND ((@IsNull_Rodpum_Controller = 1 AND [Rodpum_" +
                "Controller] IS NULL) OR ([Rodpum_Controller] = @Original_Rodpum_Controller)) AND" +
                " ((@IsNull_Controller_Type = 1 AND [Controller_Type] IS NULL) OR ([Controller_Ty" +
                "pe] = @Original_Controller_Type)) AND ((@IsNull_Sub_Controller_Type = 1 AND [Sub" +
                "_Controller_Type] IS NULL) OR ([Sub_Controller_Type] = @Original_Sub_Controller_" +
                "Type)) AND ((@IsNull_Communication_Protocol = 1 AND [Communication_Protocol] IS " +
                "NULL) OR ([Communication_Protocol] = @Original_Communication_Protocol)) AND ((@I" +
                "sNull_Communication_Port = 1 AND [Communication_Port] IS NULL) OR ([Communicatio" +
                "n_Port] = @Original_Communication_Port)) AND ((@IsNull_Communication_Address = 1" +
                " AND [Communication_Address] IS NULL) OR ([Communication_Address] = @Original_Co" +
                "mmunication_Address)) AND ((@IsNull_Alt_Address = 1 AND [Alt_Address] IS NULL) O" +
                "R ([Alt_Address] = @Original_Alt_Address)) AND ((@IsNull_Comm_retry = 1 AND [Com" +
                "m_retry] IS NULL) OR ([Comm_retry] = @Original_Comm_retry)) AND ((@IsNull_Key_On" +
                "_Delay = 1 AND [Key_On_Delay] IS NULL) OR ([Key_On_Delay] = @Original_Key_On_Del" +
                "ay)) AND ((@IsNull_Key_Off_Delay = 1 AND [Key_Off_Delay] IS NULL) OR ([Key_Off_D" +
                "elay] = @Original_Key_Off_Delay)) AND ((@IsNull_Alarm_Delay = 1 AND [Alarm_Delay" +
                "] IS NULL) OR ([Alarm_Delay] = @Original_Alarm_Delay)) AND ((@IsNull_Clear_Delay" +
                " = 1 AND [Clear_Delay] IS NULL) OR ([Clear_Delay] = @Original_Clear_Delay)) AND " +
                "((@IsNull_Max_Event_History_Recs = 1 AND [Max_Event_History_Recs] IS NULL) OR ([" +
                "Max_Event_History_Recs] = @Original_Max_Event_History_Recs)) AND ((@IsNull_Top_P" +
                "erforation = 1 AND [Top_Perforation] IS NULL) OR ([Top_Perforation] = @Original_" +
                "Top_Perforation)) AND ((@IsNull_Bottom_Perforation = 1 AND [Bottom_Perforation] " +
                "IS NULL) OR ([Bottom_Perforation] = @Original_Bottom_Perforation)) AND ((@IsNull" +
                "_Anchor_depth = 1 AND [Anchor_depth] IS NULL) OR ([Anchor_depth] = @Original_Anc" +
                "hor_depth)) AND ((@IsNull_Plug_Back_TD = 1 AND [Plug_Back_TD] IS NULL) OR ([Plug" +
                "_Back_TD] = @Original_Plug_Back_TD)) AND ((@IsNull_Pump_Measured = 1 AND [Pump_M" +
                "easured] IS NULL) OR ([Pump_Measured] = @Original_Pump_Measured)) AND ((@IsNull_" +
                "Pump_Vertical = 1 AND [Pump_Vertical] IS NULL) OR ([Pump_Vertical] = @Original_P" +
                "ump_Vertical)) AND ((@IsNull_Pump_ID = 1 AND [Pump_ID] IS NULL) OR ([Pump_ID] = " +
                "@Original_Pump_ID)) AND ((@IsNull_Casing_Valve_Open = 1 AND [Casing_Valve_Open] " +
                "IS NULL) OR ([Casing_Valve_Open] = @Original_Casing_Valve_Open)) AND ((@IsNull_C" +
                "asing_OD = 1 AND [Casing_OD] IS NULL) OR ([Casing_OD] = @Original_Casing_OD)) AN" +
                "D ((@IsNull_Casing_Weight = 1 AND [Casing_Weight] IS NULL) OR ([Casing_Weight] =" +
                " @Original_Casing_Weight)) AND ((@IsNull_Tubing_OD = 1 AND [Tubing_OD] IS NULL) " +
                "OR ([Tubing_OD] = @Original_Tubing_OD)) AND ((@IsNull_Oil = 1 AND [Oil] IS NULL)" +
                " OR ([Oil] = @Original_Oil)) AND ((@IsNull_Water = 1 AND [Water] IS NULL) OR ([W" +
                "ater] = @Original_Water)) AND ((@IsNull_Gas = 1 AND [Gas] IS NULL) OR ([Gas] = @" +
                "Original_Gas)) AND ((@IsNull_Last_WT_date = 1 AND [Last_WT_date] IS NULL) OR ([L" +
                "ast_WT_date] = @Original_Last_WT_date)) AND ((@IsNull_Oil_Gravity = 1 AND [Oil_G" +
                "ravity] IS NULL) OR ([Oil_Gravity] = @Original_Oil_Gravity)) AND ((@IsNull_Water" +
                "_SP_Grav = 1 AND [Water_SP_Grav] IS NULL) OR ([Water_SP_Grav] = @Original_Water_" +
                "SP_Grav)) AND ((@IsNull_Gas_Sp_Grav = 1 AND [Gas_Sp_Grav] IS NULL) OR ([Gas_Sp_G" +
                "rav] = @Original_Gas_Sp_Grav)) AND ((@IsNull_Tubing_Press = 1 AND [Tubing_Press]" +
                " IS NULL) OR ([Tubing_Press] = @Original_Tubing_Press)) AND ((@IsNull_Tubing_Gra" +
                "dient = 1 AND [Tubing_Gradient] IS NULL) OR ([Tubing_Gradient] = @Original_Tubin" +
                "g_Gradient)) AND ((@IsNull_Tubing_Temp_Whead = 1 AND [Tubing_Temp_Whead] IS NULL" +
                ") OR ([Tubing_Temp_Whead] = @Original_Tubing_Temp_Whead)) AND ((@IsNull_Casing_P" +
                "ress = 1 AND [Casing_Press] IS NULL) OR ([Casing_Press] = @Original_Casing_Press" +
                ")) AND ((@IsNull_Casing_Oil_Cut = 1 AND [Casing_Oil_Cut] IS NULL) OR ([Casing_Oi" +
                "l_Cut] = @Original_Casing_Oil_Cut)) AND ((@IsNull_Fluid_Level_From_Surface = 1 A" +
                "ND [Fluid_Level_From_Surface] IS NULL) OR ([Fluid_Level_From_Surface] = @Origina" +
                "l_Fluid_Level_From_Surface)) AND ((@IsNull_Fluid_Level_Shot_Date = 1 AND [Fluid_" +
                "Level_Shot_Date] IS NULL) OR ([Fluid_Level_Shot_Date] = @Original_Fluid_Level_Sh" +
                "ot_Date)) AND ((@IsNull_Fluid_Level_Comment = 1 AND [Fluid_Level_Comment] IS NUL" +
                "L) OR ([Fluid_Level_Comment] = @Original_Fluid_Level_Comment)) AND ((@IsNull_Use" +
                "_Fluid_Insertia_For_Analysis = 1 AND [Use_Fluid_Insertia_For_Analysis] IS NULL) " +
                "OR ([Use_Fluid_Insertia_For_Analysis] = @Original_Use_Fluid_Insertia_For_Analysi" +
                "s)) AND ((@IsNull_Unit_Type = 1 AND [Unit_Type] IS NULL) OR ([Unit_Type] = @Orig" +
                "inal_Unit_Type)) AND ((@IsNull_Pumping_Unit = 1 AND [Pumping_Unit] IS NULL) OR (" +
                "[Pumping_Unit] = @Original_Pumping_Unit)) AND ((@IsNull_Wrist_Pin = 1 AND [Wrist" +
                "_Pin] IS NULL) OR ([Wrist_Pin] = @Original_Wrist_Pin)) AND ((@IsNull_Actual_Stro" +
                "ke = 1 AND [Actual_Stroke] IS NULL) OR ([Actual_Stroke] = @Original_Actual_Strok" +
                "e)) AND ((@IsNull_Torque_Methode = 1 AND [Torque_Methode] IS NULL) OR ([Torque_M" +
                "ethode] = @Original_Torque_Methode)) AND ((@IsNull_Rotation = 1 AND [Rotation] I" +
                "S NULL) OR ([Rotation] = @Original_Rotation)) AND ((@IsNull_Motor_Type = 1 AND [" +
                "Motor_Type] IS NULL) OR ([Motor_Type] = @Original_Motor_Type)) AND ((@IsNull_Mot" +
                "or_Size = 1 AND [Motor_Size] IS NULL) OR ([Motor_Size] = @Original_Motor_Size)) " +
                "AND ((@IsNull_Slip_Torque = 1 AND [Slip_Torque] IS NULL) OR ([Slip_Torque] = @Or" +
                "iginal_Slip_Torque)) AND ((@IsNull_Measured_Motor_Amps_Up = 1 AND [Measured_Moto" +
                "r_Amps_Up] IS NULL) OR ([Measured_Motor_Amps_Up] = @Original_Measured_Motor_Amps" +
                "_Up)) AND ((@IsNull_Measured_Motor_Amps_Down = 1 AND [Measured_Motor_Amps_Down] " +
                "IS NULL) OR ([Measured_Motor_Amps_Down] = @Original_Measured_Motor_Amps_Down)) A" +
                "ND ((@IsNull_Max_Air_Balance_Press = 1 AND [Max_Air_Balance_Press] IS NULL) OR (" +
                "[Max_Air_Balance_Press] = @Original_Max_Air_Balance_Press)) AND ((@IsNull_Min_Ai" +
                "r_Balance_Press = 1 AND [Min_Air_Balance_Press] IS NULL) OR ([Min_Air_Balance_Pr" +
                "ess] = @Original_Min_Air_Balance_Press)) AND ((@IsNull_Crank_ID = 1 AND [Crank_I" +
                "D] IS NULL) OR ([Crank_ID] = @Original_Crank_ID)) AND ((@IsNull_CBT = 1 AND [CBT" +
                "] IS NULL) OR ([CBT] = @Original_CBT)) AND ((@IsNull_C1_Lead_Distance = 1 AND [C" +
                "1_Lead_Distance] IS NULL) OR ([C1_Lead_Distance] = @Original_C1_Lead_Distance)) " +
                "AND ((@IsNull_C1_Lead_Primary_Wt = 1 AND [C1_Lead_Primary_Wt] IS NULL) OR ([C1_L" +
                "ead_Primary_Wt] = @Original_C1_Lead_Primary_Wt)) AND ((@IsNull_C1_Lead_Aux_WT = " +
                "1 AND [C1_Lead_Aux_WT] IS NULL) OR ([C1_Lead_Aux_WT] = @Original_C1_Lead_Aux_WT)" +
                ") AND ((@IsNull_C1_lag_Distance = 1 AND [C1_lag_Distance] IS NULL) OR ([C1_lag_D" +
                "istance] = @Original_C1_lag_Distance)) AND ((@IsNull_C1_Lag_Primary_Wt = 1 AND [" +
                "C1_Lag_Primary_Wt] IS NULL) OR ([C1_Lag_Primary_Wt] = @Original_C1_Lag_Primary_W" +
                "t)) AND ((@IsNull_C1_Lag_Aux_Wt = 1 AND [C1_Lag_Aux_Wt] IS NULL) OR ([C1_Lag_Aux" +
                "_Wt] = @Original_C1_Lag_Aux_Wt)) AND ((@IsNull_C2_Lead_Distance = 1 AND [C2_Lead" +
                "_Distance] IS NULL) OR ([C2_Lead_Distance] = @Original_C2_Lead_Distance)) AND ((" +
                "@IsNull_C2_Lead_Primary_Wt = 1 AND [C2_Lead_Primary_Wt] IS NULL) OR ([C2_Lead_Pr" +
                "imary_Wt] = @Original_C2_Lead_Primary_Wt)) AND ((@IsNull_C2_Lead_Aux_WT = 1 AND " +
                "[C2_Lead_Aux_WT] IS NULL) OR ([C2_Lead_Aux_WT] = @Original_C2_Lead_Aux_WT)) AND " +
                "((@IsNull_C2_lag_Distance = 1 AND [C2_lag_Distance] IS NULL) OR ([C2_lag_Distanc" +
                "e] = @Original_C2_lag_Distance)) AND ((@IsNull_C2_Lag_Primary_Wt = 1 AND [C2_Lag" +
                "_Primary_Wt] IS NULL) OR ([C2_Lag_Primary_Wt] = @Original_C2_Lag_Primary_Wt)) AN" +
                "D ((@IsNull_C2_Lag_Aux_Wt = 1 AND [C2_Lag_Aux_Wt] IS NULL) OR ([C2_Lag_Aux_Wt] =" +
                " @Original_C2_Lag_Aux_Wt)) AND ((@IsNull_Fluid_Above_Pump = 1 AND [Fluid_Above_P" +
                "ump] IS NULL) OR ([Fluid_Above_Pump] = @Original_Fluid_Above_Pump)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wellname", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wellname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_navigator_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "navigator_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_navigator_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "navigator_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CAO_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAO_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAO_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAO_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Long_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Long_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Long_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Long_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Internal_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Internal_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Facility_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Facility_Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Facility_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Facility_Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rodpum_Controller", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodpum_Controller", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodpum_Controller", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodpum_Controller", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Controller_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Controller_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Controller_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sub_Controller_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sub_Controller_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sub_Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sub_Controller_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Communication_Protocol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Protocol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Communication_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Protocol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Communication_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Communication_Port", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Communication_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Communication_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Alt_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alt_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Alt_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alt_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comm_retry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comm_retry", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comm_retry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comm_retry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Key_On_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_On_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Key_On_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_On_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Key_Off_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_Off_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Key_Off_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_Off_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Alarm_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alarm_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Alarm_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alarm_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Event_History_Recs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Event_History_Recs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Event_History_Recs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Event_History_Recs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Top_Perforation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Top_Perforation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Top_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Top_Perforation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bottom_Perforation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bottom_Perforation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bottom_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Bottom_Perforation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Anchor_depth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anchor_depth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Anchor_depth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Anchor_depth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Plug_Back_TD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Plug_Back_TD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Plug_Back_TD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Plug_Back_TD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pump_Measured", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pump_Measured", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pump_Measured", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Measured", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pump_Vertical", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pump_Vertical", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pump_Vertical", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Vertical", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pump_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pump_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pump_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Valve_Open", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Valve_Open", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Valve_Open", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Valve_Open", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_OD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_OD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Casing_OD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Weight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Weight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_OD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_OD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Tubing_OD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oil", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Water", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Water", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Water", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gas", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gas", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Last_WT_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_WT_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Last_WT_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_WT_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oil_Gravity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oil_Gravity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oil_Gravity", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil_Gravity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Water_SP_Grav", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Water_SP_Grav", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Water_SP_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water_SP_Grav", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gas_Sp_Grav", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gas_Sp_Grav", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gas_Sp_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas_Sp_Grav", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_Gradient", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_Gradient", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_Gradient", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Gradient", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_Temp_Whead", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_Temp_Whead", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_Temp_Whead", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Temp_Whead", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Oil_Cut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Oil_Cut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Oil_Cut", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Oil_Cut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Level_From_Surface", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_From_Surface", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Level_From_Surface", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Level_From_Surface", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Level_Shot_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Shot_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Level_Shot_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Shot_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Level_Comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Level_Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Fluid_Insertia_For_Analysis", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Fluid_Insertia_For_Analysis", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Fluid_Insertia_For_Analysis", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Fluid_Insertia_For_Analysis", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pumping_Unit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pumping_Unit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pumping_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pumping_Unit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Wrist_Pin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wrist_Pin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wrist_Pin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wrist_Pin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Actual_Stroke", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actual_Stroke", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Actual_Stroke", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Actual_Stroke", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Torque_Methode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Torque_Methode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Torque_Methode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Torque_Methode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rotation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rotation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rotation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rotation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Motor_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Motor_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Motor_Size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Size", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Motor_Size", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Motor_Size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Slip_Torque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Slip_Torque", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Slip_Torque", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Slip_Torque", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Measured_Motor_Amps_Up", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Measured_Motor_Amps_Up", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Measured_Motor_Amps_Up", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Up", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Measured_Motor_Amps_Down", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Measured_Motor_Amps_Down", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Measured_Motor_Amps_Down", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Down", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Air_Balance_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Air_Balance_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Max_Air_Balance_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Min_Air_Balance_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Min_Air_Balance_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Min_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Min_Air_Balance_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Crank_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crank_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Crank_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crank_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CBT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CBT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "CBT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lead_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_Lead_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lead_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lead_Aux_WT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_lag_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_lag_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_lag_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lag_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lag_Aux_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lead_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_Lead_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lead_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lead_Aux_WT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_lag_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_lag_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_lag_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lag_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lag_Aux_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Above_Pump", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Above_Pump", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Above_Pump", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Above_Pump", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [BeamWell] ([wellname], [navigator_name], [CAO_ID], [Long_Name], [Int" +
                "ernal_ID], [Group1], [Group2], [Group3], [Group4], [Facility_Description], [Rodp" +
                "um_Controller], [Controller_Type], [Sub_Controller_Type], [Communication_Protoco" +
                "l], [Communication_Port], [Communication_Address], [Alt_Address], [Comm_retry], " +
                "[Key_On_Delay], [Key_Off_Delay], [Alarm_Delay], [Clear_Delay], [Max_Event_Histor" +
                "y_Recs], [Top_Perforation], [Bottom_Perforation], [Anchor_depth], [Plug_Back_TD]" +
                ", [Pump_Measured], [Pump_Vertical], [Pump_ID], [Casing_Valve_Open], [Casing_OD]," +
                " [Casing_Weight], [Tubing_OD], [Oil], [Water], [Gas], [Last_WT_date], [Oil_Gravi" +
                "ty], [Water_SP_Grav], [Gas_Sp_Grav], [Tubing_Press], [Tubing_Gradient], [Tubing_" +
                "Temp_Whead], [Casing_Press], [Casing_Oil_Cut], [Fluid_Level_From_Surface], [Flui" +
                "d_Level_Shot_Date], [Fluid_Level_Comment], [Use_Fluid_Insertia_For_Analysis], [U" +
                "nit_Type], [Pumping_Unit], [Wrist_Pin], [Actual_Stroke], [Torque_Methode], [Rota" +
                "tion], [Motor_Type], [Motor_Size], [Slip_Torque], [Measured_Motor_Amps_Up], [Mea" +
                "sured_Motor_Amps_Down], [Max_Air_Balance_Press], [Min_Air_Balance_Press], [Crank" +
                "_ID], [CBT], [C1_Lead_Distance], [C1_Lead_Primary_Wt], [C1_Lead_Aux_WT], [C1_lag" +
                "_Distance], [C1_Lag_Primary_Wt], [C1_Lag_Aux_Wt], [C2_Lead_Distance], [C2_Lead_P" +
                "rimary_Wt], [C2_Lead_Aux_WT], [C2_lag_Distance], [C2_Lag_Primary_Wt], [C2_Lag_Au" +
                "x_Wt], [Fluid_Above_Pump]) VALUES (@wellname, @navigator_name, @CAO_ID, @Long_Na" +
                "me, @Internal_ID, @Group1, @Group2, @Group3, @Group4, @Facility_Description, @Ro" +
                "dpum_Controller, @Controller_Type, @Sub_Controller_Type, @Communication_Protocol" +
                ", @Communication_Port, @Communication_Address, @Alt_Address, @Comm_retry, @Key_O" +
                "n_Delay, @Key_Off_Delay, @Alarm_Delay, @Clear_Delay, @Max_Event_History_Recs, @T" +
                "op_Perforation, @Bottom_Perforation, @Anchor_depth, @Plug_Back_TD, @Pump_Measure" +
                "d, @Pump_Vertical, @Pump_ID, @Casing_Valve_Open, @Casing_OD, @Casing_Weight, @Tu" +
                "bing_OD, @Oil, @Water, @Gas, @Last_WT_date, @Oil_Gravity, @Water_SP_Grav, @Gas_S" +
                "p_Grav, @Tubing_Press, @Tubing_Gradient, @Tubing_Temp_Whead, @Casing_Press, @Cas" +
                "ing_Oil_Cut, @Fluid_Level_From_Surface, @Fluid_Level_Shot_Date, @Fluid_Level_Com" +
                "ment, @Use_Fluid_Insertia_For_Analysis, @Unit_Type, @Pumping_Unit, @Wrist_Pin, @" +
                "Actual_Stroke, @Torque_Methode, @Rotation, @Motor_Type, @Motor_Size, @Slip_Torqu" +
                "e, @Measured_Motor_Amps_Up, @Measured_Motor_Amps_Down, @Max_Air_Balance_Press, @" +
                "Min_Air_Balance_Press, @Crank_ID, @CBT, @C1_Lead_Distance, @C1_Lead_Primary_Wt, " +
                "@C1_Lead_Aux_WT, @C1_lag_Distance, @C1_Lag_Primary_Wt, @C1_Lag_Aux_Wt, @C2_Lead_" +
                "Distance, @C2_Lead_Primary_Wt, @C2_Lead_Aux_WT, @C2_lag_Distance, @C2_Lag_Primar" +
                "y_Wt, @C2_Lag_Aux_Wt, @Fluid_Above_Pump);\r\nSELECT wellname, navigator_name, CAO_" +
                "ID, Long_Name, Internal_ID, Group1, Group2, Group3, Group4, Facility_Description" +
                ", Rodpum_Controller, Controller_Type, Sub_Controller_Type, Communication_Protoco" +
                "l, Communication_Port, Communication_Address, Alt_Address, Comm_retry, Key_On_De" +
                "lay, Key_Off_Delay, Alarm_Delay, Clear_Delay, Max_Event_History_Recs, Top_Perfor" +
                "ation, Bottom_Perforation, Anchor_depth, Plug_Back_TD, Pump_Measured, Pump_Verti" +
                "cal, Pump_ID, Casing_Valve_Open, Casing_OD, Casing_Weight, Tubing_OD, Oil, Water" +
                ", Gas, Last_WT_date, Oil_Gravity, Water_SP_Grav, Gas_Sp_Grav, Tubing_Press, Tubi" +
                "ng_Gradient, Tubing_Temp_Whead, Casing_Press, Casing_Oil_Cut, Fluid_Level_From_S" +
                "urface, Fluid_Level_Shot_Date, Fluid_Level_Comment, Use_Fluid_Insertia_For_Analy" +
                "sis, Unit_Type, Pumping_Unit, Wrist_Pin, Actual_Stroke, Torque_Methode, Rotation" +
                ", Motor_Type, Motor_Size, Slip_Torque, Measured_Motor_Amps_Up, Measured_Motor_Am" +
                "ps_Down, Max_Air_Balance_Press, Min_Air_Balance_Press, Crank_ID, CBT, C1_Lead_Di" +
                "stance, C1_Lead_Primary_Wt, C1_Lead_Aux_WT, C1_lag_Distance, C1_Lag_Primary_Wt, " +
                "C1_Lag_Aux_Wt, C2_Lead_Distance, C2_Lead_Primary_Wt, C2_Lead_Aux_WT, C2_lag_Dist" +
                "ance, C2_Lag_Primary_Wt, C2_Lag_Aux_Wt, Fluid_Above_Pump FROM BeamWell WHERE (we" +
                "llname = @wellname)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wellname", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wellname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@navigator_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "navigator_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAO_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAO_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Long_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Long_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Internal_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Facility_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Facility_Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodpum_Controller", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodpum_Controller", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Controller_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sub_Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sub_Controller_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Communication_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Protocol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Communication_Port", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Communication_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Alt_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alt_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comm_retry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comm_retry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Key_On_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_On_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Key_Off_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_Off_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Alarm_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alarm_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Event_History_Recs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Event_History_Recs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Top_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Top_Perforation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bottom_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Bottom_Perforation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Anchor_depth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Anchor_depth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Plug_Back_TD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Plug_Back_TD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pump_Measured", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Measured", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pump_Vertical", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Vertical", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pump_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Valve_Open", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Valve_Open", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Casing_OD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Tubing_OD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oil", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Water", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Last_WT_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_WT_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oil_Gravity", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil_Gravity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Water_SP_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water_SP_Grav", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gas_Sp_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas_Sp_Grav", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_Gradient", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Gradient", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_Temp_Whead", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Temp_Whead", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Oil_Cut", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Oil_Cut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Level_From_Surface", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Level_From_Surface", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Level_Shot_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Shot_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Level_Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Fluid_Insertia_For_Analysis", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Fluid_Insertia_For_Analysis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pumping_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pumping_Unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wrist_Pin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wrist_Pin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Actual_Stroke", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Actual_Stroke", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Torque_Methode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Torque_Methode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rotation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rotation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Motor_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Motor_Size", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Motor_Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Slip_Torque", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Slip_Torque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Measured_Motor_Amps_Up", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Up", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Measured_Motor_Amps_Down", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Down", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Max_Air_Balance_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Min_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Min_Air_Balance_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Crank_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crank_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "CBT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_Lead_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Aux_WT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_lag_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Aux_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_Lead_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Aux_WT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_lag_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Aux_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Above_Pump", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Above_Pump", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [BeamWell] SET [wellname] = @wellname, [navigator_name] = @navigator_name," +
                " [CAO_ID] = @CAO_ID, [Long_Name] = @Long_Name, [Internal_ID] = @Internal_ID, [Gr" +
                "oup1] = @Group1, [Group2] = @Group2, [Group3] = @Group3, [Group4] = @Group4, [Fa" +
                "cility_Description] = @Facility_Description, [Rodpum_Controller] = @Rodpum_Contr" +
                "oller, [Controller_Type] = @Controller_Type, [Sub_Controller_Type] = @Sub_Contro" +
                "ller_Type, [Communication_Protocol] = @Communication_Protocol, [Communication_Po" +
                "rt] = @Communication_Port, [Communication_Address] = @Communication_Address, [Al" +
                "t_Address] = @Alt_Address, [Comm_retry] = @Comm_retry, [Key_On_Delay] = @Key_On_" +
                "Delay, [Key_Off_Delay] = @Key_Off_Delay, [Alarm_Delay] = @Alarm_Delay, [Clear_De" +
                "lay] = @Clear_Delay, [Max_Event_History_Recs] = @Max_Event_History_Recs, [Top_Pe" +
                "rforation] = @Top_Perforation, [Bottom_Perforation] = @Bottom_Perforation, [Anch" +
                "or_depth] = @Anchor_depth, [Plug_Back_TD] = @Plug_Back_TD, [Pump_Measured] = @Pu" +
                "mp_Measured, [Pump_Vertical] = @Pump_Vertical, [Pump_ID] = @Pump_ID, [Casing_Val" +
                "ve_Open] = @Casing_Valve_Open, [Casing_OD] = @Casing_OD, [Casing_Weight] = @Casi" +
                "ng_Weight, [Tubing_OD] = @Tubing_OD, [Oil] = @Oil, [Water] = @Water, [Gas] = @Ga" +
                "s, [Last_WT_date] = @Last_WT_date, [Oil_Gravity] = @Oil_Gravity, [Water_SP_Grav]" +
                " = @Water_SP_Grav, [Gas_Sp_Grav] = @Gas_Sp_Grav, [Tubing_Press] = @Tubing_Press," +
                " [Tubing_Gradient] = @Tubing_Gradient, [Tubing_Temp_Whead] = @Tubing_Temp_Whead," +
                " [Casing_Press] = @Casing_Press, [Casing_Oil_Cut] = @Casing_Oil_Cut, [Fluid_Leve" +
                "l_From_Surface] = @Fluid_Level_From_Surface, [Fluid_Level_Shot_Date] = @Fluid_Le" +
                "vel_Shot_Date, [Fluid_Level_Comment] = @Fluid_Level_Comment, [Use_Fluid_Insertia" +
                "_For_Analysis] = @Use_Fluid_Insertia_For_Analysis, [Unit_Type] = @Unit_Type, [Pu" +
                "mping_Unit] = @Pumping_Unit, [Wrist_Pin] = @Wrist_Pin, [Actual_Stroke] = @Actual" +
                "_Stroke, [Torque_Methode] = @Torque_Methode, [Rotation] = @Rotation, [Motor_Type" +
                "] = @Motor_Type, [Motor_Size] = @Motor_Size, [Slip_Torque] = @Slip_Torque, [Meas" +
                "ured_Motor_Amps_Up] = @Measured_Motor_Amps_Up, [Measured_Motor_Amps_Down] = @Mea" +
                "sured_Motor_Amps_Down, [Max_Air_Balance_Press] = @Max_Air_Balance_Press, [Min_Ai" +
                "r_Balance_Press] = @Min_Air_Balance_Press, [Crank_ID] = @Crank_ID, [CBT] = @CBT," +
                " [C1_Lead_Distance] = @C1_Lead_Distance, [C1_Lead_Primary_Wt] = @C1_Lead_Primary" +
                "_Wt, [C1_Lead_Aux_WT] = @C1_Lead_Aux_WT, [C1_lag_Distance] = @C1_lag_Distance, [" +
                "C1_Lag_Primary_Wt] = @C1_Lag_Primary_Wt, [C1_Lag_Aux_Wt] = @C1_Lag_Aux_Wt, [C2_L" +
                "ead_Distance] = @C2_Lead_Distance, [C2_Lead_Primary_Wt] = @C2_Lead_Primary_Wt, [" +
                "C2_Lead_Aux_WT] = @C2_Lead_Aux_WT, [C2_lag_Distance] = @C2_lag_Distance, [C2_Lag" +
                "_Primary_Wt] = @C2_Lag_Primary_Wt, [C2_Lag_Aux_Wt] = @C2_Lag_Aux_Wt, [Fluid_Abov" +
                "e_Pump] = @Fluid_Above_Pump WHERE (([wellname] = @Original_wellname) AND ((@IsNu" +
                "ll_navigator_name = 1 AND [navigator_name] IS NULL) OR ([navigator_name] = @Orig" +
                "inal_navigator_name)) AND ((@IsNull_CAO_ID = 1 AND [CAO_ID] IS NULL) OR ([CAO_ID" +
                "] = @Original_CAO_ID)) AND ((@IsNull_Long_Name = 1 AND [Long_Name] IS NULL) OR (" +
                "[Long_Name] = @Original_Long_Name)) AND ((@IsNull_Internal_ID = 1 AND [Internal_" +
                "ID] IS NULL) OR ([Internal_ID] = @Original_Internal_ID)) AND ((@IsNull_Group1 = " +
                "1 AND [Group1] IS NULL) OR ([Group1] = @Original_Group1)) AND ((@IsNull_Group2 =" +
                " 1 AND [Group2] IS NULL) OR ([Group2] = @Original_Group2)) AND ((@IsNull_Group3 " +
                "= 1 AND [Group3] IS NULL) OR ([Group3] = @Original_Group3)) AND ((@IsNull_Group4" +
                " = 1 AND [Group4] IS NULL) OR ([Group4] = @Original_Group4)) AND ((@IsNull_Facil" +
                "ity_Description = 1 AND [Facility_Description] IS NULL) OR ([Facility_Descriptio" +
                "n] = @Original_Facility_Description)) AND ((@IsNull_Rodpum_Controller = 1 AND [R" +
                "odpum_Controller] IS NULL) OR ([Rodpum_Controller] = @Original_Rodpum_Controller" +
                ")) AND ((@IsNull_Controller_Type = 1 AND [Controller_Type] IS NULL) OR ([Control" +
                "ler_Type] = @Original_Controller_Type)) AND ((@IsNull_Sub_Controller_Type = 1 AN" +
                "D [Sub_Controller_Type] IS NULL) OR ([Sub_Controller_Type] = @Original_Sub_Contr" +
                "oller_Type)) AND ((@IsNull_Communication_Protocol = 1 AND [Communication_Protoco" +
                "l] IS NULL) OR ([Communication_Protocol] = @Original_Communication_Protocol)) AN" +
                "D ((@IsNull_Communication_Port = 1 AND [Communication_Port] IS NULL) OR ([Commun" +
                "ication_Port] = @Original_Communication_Port)) AND ((@IsNull_Communication_Addre" +
                "ss = 1 AND [Communication_Address] IS NULL) OR ([Communication_Address] = @Origi" +
                "nal_Communication_Address)) AND ((@IsNull_Alt_Address = 1 AND [Alt_Address] IS N" +
                "ULL) OR ([Alt_Address] = @Original_Alt_Address)) AND ((@IsNull_Comm_retry = 1 AN" +
                "D [Comm_retry] IS NULL) OR ([Comm_retry] = @Original_Comm_retry)) AND ((@IsNull_" +
                "Key_On_Delay = 1 AND [Key_On_Delay] IS NULL) OR ([Key_On_Delay] = @Original_Key_" +
                "On_Delay)) AND ((@IsNull_Key_Off_Delay = 1 AND [Key_Off_Delay] IS NULL) OR ([Key" +
                "_Off_Delay] = @Original_Key_Off_Delay)) AND ((@IsNull_Alarm_Delay = 1 AND [Alarm" +
                "_Delay] IS NULL) OR ([Alarm_Delay] = @Original_Alarm_Delay)) AND ((@IsNull_Clear" +
                "_Delay = 1 AND [Clear_Delay] IS NULL) OR ([Clear_Delay] = @Original_Clear_Delay)" +
                ") AND ((@IsNull_Max_Event_History_Recs = 1 AND [Max_Event_History_Recs] IS NULL)" +
                " OR ([Max_Event_History_Recs] = @Original_Max_Event_History_Recs)) AND ((@IsNull" +
                "_Top_Perforation = 1 AND [Top_Perforation] IS NULL) OR ([Top_Perforation] = @Ori" +
                "ginal_Top_Perforation)) AND ((@IsNull_Bottom_Perforation = 1 AND [Bottom_Perfora" +
                "tion] IS NULL) OR ([Bottom_Perforation] = @Original_Bottom_Perforation)) AND ((@" +
                "IsNull_Anchor_depth = 1 AND [Anchor_depth] IS NULL) OR ([Anchor_depth] = @Origin" +
                "al_Anchor_depth)) AND ((@IsNull_Plug_Back_TD = 1 AND [Plug_Back_TD] IS NULL) OR " +
                "([Plug_Back_TD] = @Original_Plug_Back_TD)) AND ((@IsNull_Pump_Measured = 1 AND [" +
                "Pump_Measured] IS NULL) OR ([Pump_Measured] = @Original_Pump_Measured)) AND ((@I" +
                "sNull_Pump_Vertical = 1 AND [Pump_Vertical] IS NULL) OR ([Pump_Vertical] = @Orig" +
                "inal_Pump_Vertical)) AND ((@IsNull_Pump_ID = 1 AND [Pump_ID] IS NULL) OR ([Pump_" +
                "ID] = @Original_Pump_ID)) AND ((@IsNull_Casing_Valve_Open = 1 AND [Casing_Valve_" +
                "Open] IS NULL) OR ([Casing_Valve_Open] = @Original_Casing_Valve_Open)) AND ((@Is" +
                "Null_Casing_OD = 1 AND [Casing_OD] IS NULL) OR ([Casing_OD] = @Original_Casing_O" +
                "D)) AND ((@IsNull_Casing_Weight = 1 AND [Casing_Weight] IS NULL) OR ([Casing_Wei" +
                "ght] = @Original_Casing_Weight)) AND ((@IsNull_Tubing_OD = 1 AND [Tubing_OD] IS " +
                "NULL) OR ([Tubing_OD] = @Original_Tubing_OD)) AND ((@IsNull_Oil = 1 AND [Oil] IS" +
                " NULL) OR ([Oil] = @Original_Oil)) AND ((@IsNull_Water = 1 AND [Water] IS NULL) " +
                "OR ([Water] = @Original_Water)) AND ((@IsNull_Gas = 1 AND [Gas] IS NULL) OR ([Ga" +
                "s] = @Original_Gas)) AND ((@IsNull_Last_WT_date = 1 AND [Last_WT_date] IS NULL) " +
                "OR ([Last_WT_date] = @Original_Last_WT_date)) AND ((@IsNull_Oil_Gravity = 1 AND " +
                "[Oil_Gravity] IS NULL) OR ([Oil_Gravity] = @Original_Oil_Gravity)) AND ((@IsNull" +
                "_Water_SP_Grav = 1 AND [Water_SP_Grav] IS NULL) OR ([Water_SP_Grav] = @Original_" +
                "Water_SP_Grav)) AND ((@IsNull_Gas_Sp_Grav = 1 AND [Gas_Sp_Grav] IS NULL) OR ([Ga" +
                "s_Sp_Grav] = @Original_Gas_Sp_Grav)) AND ((@IsNull_Tubing_Press = 1 AND [Tubing_" +
                "Press] IS NULL) OR ([Tubing_Press] = @Original_Tubing_Press)) AND ((@IsNull_Tubi" +
                "ng_Gradient = 1 AND [Tubing_Gradient] IS NULL) OR ([Tubing_Gradient] = @Original" +
                "_Tubing_Gradient)) AND ((@IsNull_Tubing_Temp_Whead = 1 AND [Tubing_Temp_Whead] I" +
                "S NULL) OR ([Tubing_Temp_Whead] = @Original_Tubing_Temp_Whead)) AND ((@IsNull_Ca" +
                "sing_Press = 1 AND [Casing_Press] IS NULL) OR ([Casing_Press] = @Original_Casing" +
                "_Press)) AND ((@IsNull_Casing_Oil_Cut = 1 AND [Casing_Oil_Cut] IS NULL) OR ([Cas" +
                "ing_Oil_Cut] = @Original_Casing_Oil_Cut)) AND ((@IsNull_Fluid_Level_From_Surface" +
                " = 1 AND [Fluid_Level_From_Surface] IS NULL) OR ([Fluid_Level_From_Surface] = @O" +
                "riginal_Fluid_Level_From_Surface)) AND ((@IsNull_Fluid_Level_Shot_Date = 1 AND [" +
                "Fluid_Level_Shot_Date] IS NULL) OR ([Fluid_Level_Shot_Date] = @Original_Fluid_Le" +
                "vel_Shot_Date)) AND ((@IsNull_Fluid_Level_Comment = 1 AND [Fluid_Level_Comment] " +
                "IS NULL) OR ([Fluid_Level_Comment] = @Original_Fluid_Level_Comment)) AND ((@IsNu" +
                "ll_Use_Fluid_Insertia_For_Analysis = 1 AND [Use_Fluid_Insertia_For_Analysis] IS " +
                "NULL) OR ([Use_Fluid_Insertia_For_Analysis] = @Original_Use_Fluid_Insertia_For_A" +
                "nalysis)) AND ((@IsNull_Unit_Type = 1 AND [Unit_Type] IS NULL) OR ([Unit_Type] =" +
                " @Original_Unit_Type)) AND ((@IsNull_Pumping_Unit = 1 AND [Pumping_Unit] IS NULL" +
                ") OR ([Pumping_Unit] = @Original_Pumping_Unit)) AND ((@IsNull_Wrist_Pin = 1 AND " +
                "[Wrist_Pin] IS NULL) OR ([Wrist_Pin] = @Original_Wrist_Pin)) AND ((@IsNull_Actua" +
                "l_Stroke = 1 AND [Actual_Stroke] IS NULL) OR ([Actual_Stroke] = @Original_Actual" +
                "_Stroke)) AND ((@IsNull_Torque_Methode = 1 AND [Torque_Methode] IS NULL) OR ([To" +
                "rque_Methode] = @Original_Torque_Methode)) AND ((@IsNull_Rotation = 1 AND [Rotat" +
                "ion] IS NULL) OR ([Rotation] = @Original_Rotation)) AND ((@IsNull_Motor_Type = 1" +
                " AND [Motor_Type] IS NULL) OR ([Motor_Type] = @Original_Motor_Type)) AND ((@IsNu" +
                "ll_Motor_Size = 1 AND [Motor_Size] IS NULL) OR ([Motor_Size] = @Original_Motor_S" +
                "ize)) AND ((@IsNull_Slip_Torque = 1 AND [Slip_Torque] IS NULL) OR ([Slip_Torque]" +
                " = @Original_Slip_Torque)) AND ((@IsNull_Measured_Motor_Amps_Up = 1 AND [Measure" +
                "d_Motor_Amps_Up] IS NULL) OR ([Measured_Motor_Amps_Up] = @Original_Measured_Moto" +
                "r_Amps_Up)) AND ((@IsNull_Measured_Motor_Amps_Down = 1 AND [Measured_Motor_Amps_" +
                "Down] IS NULL) OR ([Measured_Motor_Amps_Down] = @Original_Measured_Motor_Amps_Do" +
                "wn)) AND ((@IsNull_Max_Air_Balance_Press = 1 AND [Max_Air_Balance_Press] IS NULL" +
                ") OR ([Max_Air_Balance_Press] = @Original_Max_Air_Balance_Press)) AND ((@IsNull_" +
                "Min_Air_Balance_Press = 1 AND [Min_Air_Balance_Press] IS NULL) OR ([Min_Air_Bala" +
                "nce_Press] = @Original_Min_Air_Balance_Press)) AND ((@IsNull_Crank_ID = 1 AND [C" +
                "rank_ID] IS NULL) OR ([Crank_ID] = @Original_Crank_ID)) AND ((@IsNull_CBT = 1 AN" +
                "D [CBT] IS NULL) OR ([CBT] = @Original_CBT)) AND ((@IsNull_C1_Lead_Distance = 1 " +
                "AND [C1_Lead_Distance] IS NULL) OR ([C1_Lead_Distance] = @Original_C1_Lead_Dista" +
                "nce)) AND ((@IsNull_C1_Lead_Primary_Wt = 1 AND [C1_Lead_Primary_Wt] IS NULL) OR " +
                "([C1_Lead_Primary_Wt] = @Original_C1_Lead_Primary_Wt)) AND ((@IsNull_C1_Lead_Aux" +
                "_WT = 1 AND [C1_Lead_Aux_WT] IS NULL) OR ([C1_Lead_Aux_WT] = @Original_C1_Lead_A" +
                "ux_WT)) AND ((@IsNull_C1_lag_Distance = 1 AND [C1_lag_Distance] IS NULL) OR ([C1" +
                "_lag_Distance] = @Original_C1_lag_Distance)) AND ((@IsNull_C1_Lag_Primary_Wt = 1" +
                " AND [C1_Lag_Primary_Wt] IS NULL) OR ([C1_Lag_Primary_Wt] = @Original_C1_Lag_Pri" +
                "mary_Wt)) AND ((@IsNull_C1_Lag_Aux_Wt = 1 AND [C1_Lag_Aux_Wt] IS NULL) OR ([C1_L" +
                "ag_Aux_Wt] = @Original_C1_Lag_Aux_Wt)) AND ((@IsNull_C2_Lead_Distance = 1 AND [C" +
                "2_Lead_Distance] IS NULL) OR ([C2_Lead_Distance] = @Original_C2_Lead_Distance)) " +
                "AND ((@IsNull_C2_Lead_Primary_Wt = 1 AND [C2_Lead_Primary_Wt] IS NULL) OR ([C2_L" +
                "ead_Primary_Wt] = @Original_C2_Lead_Primary_Wt)) AND ((@IsNull_C2_Lead_Aux_WT = " +
                "1 AND [C2_Lead_Aux_WT] IS NULL) OR ([C2_Lead_Aux_WT] = @Original_C2_Lead_Aux_WT)" +
                ") AND ((@IsNull_C2_lag_Distance = 1 AND [C2_lag_Distance] IS NULL) OR ([C2_lag_D" +
                "istance] = @Original_C2_lag_Distance)) AND ((@IsNull_C2_Lag_Primary_Wt = 1 AND [" +
                "C2_Lag_Primary_Wt] IS NULL) OR ([C2_Lag_Primary_Wt] = @Original_C2_Lag_Primary_W" +
                "t)) AND ((@IsNull_C2_Lag_Aux_Wt = 1 AND [C2_Lag_Aux_Wt] IS NULL) OR ([C2_Lag_Aux" +
                "_Wt] = @Original_C2_Lag_Aux_Wt)) AND ((@IsNull_Fluid_Above_Pump = 1 AND [Fluid_A" +
                "bove_Pump] IS NULL) OR ([Fluid_Above_Pump] = @Original_Fluid_Above_Pump)));\r\nSEL" +
                "ECT wellname, navigator_name, CAO_ID, Long_Name, Internal_ID, Group1, Group2, Gr" +
                "oup3, Group4, Facility_Description, Rodpum_Controller, Controller_Type, Sub_Cont" +
                "roller_Type, Communication_Protocol, Communication_Port, Communication_Address, " +
                "Alt_Address, Comm_retry, Key_On_Delay, Key_Off_Delay, Alarm_Delay, Clear_Delay, " +
                "Max_Event_History_Recs, Top_Perforation, Bottom_Perforation, Anchor_depth, Plug_" +
                "Back_TD, Pump_Measured, Pump_Vertical, Pump_ID, Casing_Valve_Open, Casing_OD, Ca" +
                "sing_Weight, Tubing_OD, Oil, Water, Gas, Last_WT_date, Oil_Gravity, Water_SP_Gra" +
                "v, Gas_Sp_Grav, Tubing_Press, Tubing_Gradient, Tubing_Temp_Whead, Casing_Press, " +
                "Casing_Oil_Cut, Fluid_Level_From_Surface, Fluid_Level_Shot_Date, Fluid_Level_Com" +
                "ment, Use_Fluid_Insertia_For_Analysis, Unit_Type, Pumping_Unit, Wrist_Pin, Actua" +
                "l_Stroke, Torque_Methode, Rotation, Motor_Type, Motor_Size, Slip_Torque, Measure" +
                "d_Motor_Amps_Up, Measured_Motor_Amps_Down, Max_Air_Balance_Press, Min_Air_Balanc" +
                "e_Press, Crank_ID, CBT, C1_Lead_Distance, C1_Lead_Primary_Wt, C1_Lead_Aux_WT, C1" +
                "_lag_Distance, C1_Lag_Primary_Wt, C1_Lag_Aux_Wt, C2_Lead_Distance, C2_Lead_Prima" +
                "ry_Wt, C2_Lead_Aux_WT, C2_lag_Distance, C2_Lag_Primary_Wt, C2_Lag_Aux_Wt, Fluid_" +
                "Above_Pump FROM BeamWell WHERE (wellname = @wellname)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@wellname", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wellname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@navigator_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "navigator_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAO_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAO_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Long_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Long_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Internal_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Group4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Facility_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Facility_Description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rodpum_Controller", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodpum_Controller", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Controller_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sub_Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sub_Controller_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Communication_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Protocol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Communication_Port", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Communication_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Alt_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alt_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comm_retry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comm_retry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Key_On_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_On_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Key_Off_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_Off_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Alarm_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alarm_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Clear_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Delay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Event_History_Recs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Event_History_Recs", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Top_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Top_Perforation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bottom_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Bottom_Perforation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Anchor_depth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Anchor_depth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Plug_Back_TD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Plug_Back_TD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pump_Measured", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Measured", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pump_Vertical", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Vertical", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pump_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Valve_Open", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Valve_Open", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Casing_OD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Weight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Tubing_OD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oil", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Water", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Last_WT_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_WT_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Oil_Gravity", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil_Gravity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Water_SP_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water_SP_Grav", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Gas_Sp_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas_Sp_Grav", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_Gradient", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Gradient", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tubing_Temp_Whead", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Temp_Whead", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Casing_Oil_Cut", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Oil_Cut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Level_From_Surface", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Level_From_Surface", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Level_Shot_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Shot_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Level_Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Comment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Use_Fluid_Insertia_For_Analysis", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Fluid_Insertia_For_Analysis", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unit_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pumping_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pumping_Unit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Wrist_Pin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wrist_Pin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Actual_Stroke", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Actual_Stroke", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Torque_Methode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Torque_Methode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Rotation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rotation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Motor_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Motor_Size", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Motor_Size", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Slip_Torque", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Slip_Torque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Measured_Motor_Amps_Up", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Up", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Measured_Motor_Amps_Down", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Down", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Max_Air_Balance_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Min_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Min_Air_Balance_Press", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Crank_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crank_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "CBT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_Lead_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Aux_WT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_lag_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C1_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Aux_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_Lead_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Aux_WT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_lag_Distance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Primary_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C2_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Aux_Wt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fluid_Above_Pump", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Above_Pump", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_wellname", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "wellname", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_navigator_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "navigator_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_navigator_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "navigator_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CAO_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAO_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAO_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAO_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Long_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Long_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Long_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Long_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Internal_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Internal_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Internal_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Group4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Group4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Group4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Facility_Description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Facility_Description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Facility_Description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Facility_Description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rodpum_Controller", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodpum_Controller", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rodpum_Controller", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rodpum_Controller", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Controller_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Controller_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Controller_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sub_Controller_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sub_Controller_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sub_Controller_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sub_Controller_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Communication_Protocol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Protocol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Communication_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Protocol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Communication_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Communication_Port", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Communication_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Communication_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Communication_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Alt_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alt_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Alt_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alt_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Comm_retry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comm_retry", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comm_retry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comm_retry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Key_On_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_On_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Key_On_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_On_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Key_Off_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_Off_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Key_Off_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Key_Off_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Alarm_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alarm_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Alarm_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alarm_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Clear_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Delay", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Clear_Delay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Clear_Delay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Event_History_Recs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Event_History_Recs", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Event_History_Recs", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Event_History_Recs", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Top_Perforation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Top_Perforation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Top_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Top_Perforation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bottom_Perforation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bottom_Perforation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bottom_Perforation", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Bottom_Perforation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Anchor_depth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Anchor_depth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Anchor_depth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Anchor_depth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Plug_Back_TD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Plug_Back_TD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Plug_Back_TD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Plug_Back_TD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pump_Measured", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pump_Measured", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pump_Measured", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Measured", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pump_Vertical", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pump_Vertical", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pump_Vertical", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_Vertical", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pump_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pump_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pump_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Pump_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Valve_Open", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Valve_Open", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Valve_Open", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Valve_Open", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_OD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_OD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Casing_OD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Weight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Weight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Weight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Weight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_OD", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_OD", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_OD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 3, "Tubing_OD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oil", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oil", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oil", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Water", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Water", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Water", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gas", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gas", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gas", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Last_WT_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_WT_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Last_WT_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_WT_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Oil_Gravity", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Oil_Gravity", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Oil_Gravity", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Oil_Gravity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Water_SP_Grav", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Water_SP_Grav", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Water_SP_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Water_SP_Grav", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Gas_Sp_Grav", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Gas_Sp_Grav", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Gas_Sp_Grav", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Gas_Sp_Grav", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_Gradient", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_Gradient", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_Gradient", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Gradient", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Tubing_Temp_Whead", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tubing_Temp_Whead", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tubing_Temp_Whead", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Tubing_Temp_Whead", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Casing_Oil_Cut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Casing_Oil_Cut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Casing_Oil_Cut", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Casing_Oil_Cut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Level_From_Surface", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_From_Surface", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Level_From_Surface", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Level_From_Surface", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Level_Shot_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Shot_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Level_Shot_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Shot_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Level_Comment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Comment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Level_Comment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Level_Comment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Use_Fluid_Insertia_For_Analysis", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Fluid_Insertia_For_Analysis", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Use_Fluid_Insertia_For_Analysis", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Use_Fluid_Insertia_For_Analysis", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unit_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unit_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unit_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Pumping_Unit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pumping_Unit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pumping_Unit", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pumping_Unit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Wrist_Pin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wrist_Pin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Wrist_Pin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Wrist_Pin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Actual_Stroke", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actual_Stroke", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Actual_Stroke", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Actual_Stroke", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Torque_Methode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Torque_Methode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Torque_Methode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Torque_Methode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Rotation", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rotation", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Rotation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Rotation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Motor_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Motor_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Motor_Size", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Motor_Size", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Motor_Size", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Motor_Size", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Slip_Torque", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Slip_Torque", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Slip_Torque", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Slip_Torque", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Measured_Motor_Amps_Up", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Measured_Motor_Amps_Up", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Measured_Motor_Amps_Up", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Up", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Measured_Motor_Amps_Down", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Measured_Motor_Amps_Down", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Measured_Motor_Amps_Down", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Measured_Motor_Amps_Down", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Air_Balance_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Air_Balance_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Max_Air_Balance_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Min_Air_Balance_Press", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Min_Air_Balance_Press", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Min_Air_Balance_Press", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Min_Air_Balance_Press", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Crank_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crank_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Crank_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Crank_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CBT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CBT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "CBT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lead_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_Lead_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lead_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lead_Aux_WT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_lag_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_lag_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C1_lag_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lag_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C1_Lag_Aux_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C1_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C1_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lead_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lead_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_Lead_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lead_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lead_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lead_Aux_WT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lead_Aux_WT", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lead_Aux_WT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_lag_Distance", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_lag_Distance", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_lag_Distance", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "C2_lag_Distance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lag_Primary_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lag_Primary_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Primary_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_C2_Lag_Aux_Wt", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_C2_Lag_Aux_Wt", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "C2_Lag_Aux_Wt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fluid_Above_Pump", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fluid_Above_Pump", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fluid_Above_Pump", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 6, 2, "Fluid_Above_Pump", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LowisChartApp.Properties.Settings.Default.lw2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        wellname, navigator_name, CAO_ID, Long_Name, Internal_ID, Group1, Group2, Group3, Group4, Facility_Description, Rodpum_Controller, Controller_Type, Sub_Controller_Type, Communication_Protocol, Communication_Port, 
                         Communication_Address, Alt_Address, Comm_retry, Key_On_Delay, Key_Off_Delay, Alarm_Delay, Clear_Delay, Max_Event_History_Recs, Top_Perforation, Bottom_Perforation, Anchor_depth, Plug_Back_TD, Pump_Measured, 
                         Pump_Vertical, Pump_ID, Casing_Valve_Open, Casing_OD, Casing_Weight, Tubing_OD, Oil, Water, Gas, Last_WT_date, Oil_Gravity, Water_SP_Grav, Gas_Sp_Grav, Tubing_Press, Tubing_Gradient, Tubing_Temp_Whead, 
                         Casing_Press, Casing_Oil_Cut, Fluid_Level_From_Surface, Fluid_Level_Shot_Date, Fluid_Level_Comment, Use_Fluid_Insertia_For_Analysis, Unit_Type, Pumping_Unit, Wrist_Pin, Actual_Stroke, Torque_Methode, Rotation, 
                         Motor_Type, Motor_Size, Slip_Torque, Measured_Motor_Amps_Up, Measured_Motor_Amps_Down, Max_Air_Balance_Press, Min_Air_Balance_Press, Crank_ID, CBT, C1_Lead_Distance, C1_Lead_Primary_Wt, 
                         C1_Lead_Aux_WT, C1_lag_Distance, C1_Lag_Primary_Wt, C1_Lag_Aux_Wt, C2_Lead_Distance, C2_Lead_Primary_Wt, C2_Lead_Aux_WT, C2_lag_Distance, C2_Lag_Primary_Wt, C2_Lag_Aux_Wt, Fluid_Above_Pump
FROM            BeamWell";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        Actual_Stroke, Alarm_Delay, Alt_Address, Anchor_depth, Bottom_Perforation, C1_Lag_Aux_Wt, C1_Lag_Primary_Wt, C1_Lead_Aux_WT, C1_Lead_Distance, C1_Lead_Primary_Wt, C1_lag_Distance, C2_Lag_Aux_Wt, 
                         C2_Lag_Primary_Wt, C2_Lead_Aux_WT, C2_Lead_Distance, C2_Lead_Primary_Wt, C2_lag_Distance, CAO_ID, CBT, Casing_OD, Casing_Oil_Cut, Casing_Press, Casing_Valve_Open, Casing_Weight, Clear_Delay, Comm_retry, 
                         Communication_Address, Communication_Port, Communication_Protocol, Controller_Type, Crank_ID, Facility_Description, Fluid_Above_Pump, Fluid_Level_Comment, Fluid_Level_From_Surface, Fluid_Level_Shot_Date, Gas, 
                         Gas_Sp_Grav, Group1, Group2, Group3, Group4, Internal_ID, Key_Off_Delay, Key_On_Delay, Last_WT_date, Long_Name, Max_Air_Balance_Press, Max_Event_History_Recs, Measured_Motor_Amps_Down, 
                         Measured_Motor_Amps_Up, Min_Air_Balance_Press, Motor_Size, Motor_Type, Oil, Oil_Gravity, Plug_Back_TD, Pump_ID, Pump_Measured, Pump_Vertical, Pumping_Unit, Rodpum_Controller, Rotation, Slip_Torque, 
                         Sub_Controller_Type, Top_Perforation, Torque_Methode, Tubing_Gradient, Tubing_OD, Tubing_Press, Tubing_Temp_Whead, Unit_Type, Use_Fluid_Insertia_For_Analysis, Water, Water_SP_Grav, Wrist_Pin, navigator_name, 
                         wellname
FROM            BeamWell
WHERE        (1 = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT        Actual_Stroke, Alarm_Delay, Alt_Address, Anchor_depth, Bottom_Perforation, C1_Lag_Aux_Wt, C1_Lag_Primary_Wt, C1_Lead_Aux_WT, C1_Lead_Distance, C1_Lead_Primary_Wt, C1_lag_Distance, C2_Lag_Aux_Wt, 
                         C2_Lag_Primary_Wt, C2_Lead_Aux_WT, C2_Lead_Distance, C2_Lead_Primary_Wt, C2_lag_Distance, CAO_ID, CBT, Casing_OD, Casing_Oil_Cut, Casing_Press, Casing_Valve_Open, Casing_Weight, Clear_Delay, Comm_retry, 
                         Communication_Address, Communication_Port, Communication_Protocol, Controller_Type, Crank_ID, Facility_Description, Fluid_Above_Pump, Fluid_Level_Comment, Fluid_Level_From_Surface, Fluid_Level_Shot_Date, Gas, 
                         Gas_Sp_Grav, Group1, Group2, Group3, Group4, Internal_ID, Key_Off_Delay, Key_On_Delay, Last_WT_date, Long_Name, Max_Air_Balance_Press, Max_Event_History_Recs, Measured_Motor_Amps_Down, 
                         Measured_Motor_Amps_Up, Min_Air_Balance_Press, Motor_Size, Motor_Type, Oil, Oil_Gravity, Plug_Back_TD, Pump_ID, Pump_Measured, Pump_Vertical, Pumping_Unit, Rodpum_Controller, Rotation, Slip_Torque, 
                         Sub_Controller_Type, Top_Perforation, Torque_Methode, Tubing_Gradient, Tubing_OD, Tubing_Press, Tubing_Temp_Whead, Unit_Type, Use_Fluid_Insertia_For_Analysis, Water, Water_SP_Grav, Wrist_Pin, navigator_name, 
                         wellname
FROM            BeamWell
WHERE        (wellname = @nama)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nama", global::System.Data.SqlDbType.Char, 20, global::System.Data.ParameterDirection.Input, 0, 0, "wellname", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BeamWellDataSet.BeamWellDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BeamWellDataSet.BeamWellDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BeamWellDataSet.BeamWellDataTable dataTable = new BeamWellDataSet.BeamWellDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNone(BeamWellDataSet.BeamWellDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BeamWellDataSet.BeamWellDataTable GetDataByNone() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            BeamWellDataSet.BeamWellDataTable dataTable = new BeamWellDataSet.BeamWellDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByWellName(BeamWellDataSet.BeamWellDataTable dataTable, string nama) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((nama == null)) {
                throw new global::System.ArgumentNullException("nama");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nama));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual BeamWellDataSet.BeamWellDataTable GetDataByWellName(string nama) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((nama == null)) {
                throw new global::System.ArgumentNullException("nama");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nama));
            }
            BeamWellDataSet.BeamWellDataTable dataTable = new BeamWellDataSet.BeamWellDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BeamWellDataSet.BeamWellDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BeamWellDataSet dataSet) {
            return this.Adapter.Update(dataSet, "BeamWell");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_wellname, 
                    string Original_navigator_name, 
                    string Original_CAO_ID, 
                    string Original_Long_Name, 
                    string Original_Internal_ID, 
                    string Original_Group1, 
                    string Original_Group2, 
                    string Original_Group3, 
                    string Original_Group4, 
                    string Original_Facility_Description, 
                    string Original_Rodpum_Controller, 
                    string Original_Controller_Type, 
                    string Original_Sub_Controller_Type, 
                    string Original_Communication_Protocol, 
                    string Original_Communication_Port, 
                    global::System.Nullable<int> Original_Communication_Address, 
                    global::System.Nullable<int> Original_Alt_Address, 
                    global::System.Nullable<int> Original_Comm_retry, 
                    global::System.Nullable<int> Original_Key_On_Delay, 
                    global::System.Nullable<int> Original_Key_Off_Delay, 
                    global::System.Nullable<int> Original_Alarm_Delay, 
                    global::System.Nullable<int> Original_Clear_Delay, 
                    global::System.Nullable<int> Original_Max_Event_History_Recs, 
                    global::System.Nullable<decimal> Original_Top_Perforation, 
                    global::System.Nullable<decimal> Original_Bottom_Perforation, 
                    global::System.Nullable<decimal> Original_Anchor_depth, 
                    global::System.Nullable<decimal> Original_Plug_Back_TD, 
                    global::System.Nullable<decimal> Original_Pump_Measured, 
                    global::System.Nullable<decimal> Original_Pump_Vertical, 
                    global::System.Nullable<decimal> Original_Pump_ID, 
                    string Original_Casing_Valve_Open, 
                    global::System.Nullable<decimal> Original_Casing_OD, 
                    global::System.Nullable<decimal> Original_Casing_Weight, 
                    global::System.Nullable<decimal> Original_Tubing_OD, 
                    global::System.Nullable<decimal> Original_Oil, 
                    global::System.Nullable<decimal> Original_Water, 
                    global::System.Nullable<decimal> Original_Gas, 
                    global::System.Nullable<global::System.DateTime> Original_Last_WT_date, 
                    global::System.Nullable<decimal> Original_Oil_Gravity, 
                    global::System.Nullable<decimal> Original_Water_SP_Grav, 
                    global::System.Nullable<decimal> Original_Gas_Sp_Grav, 
                    global::System.Nullable<decimal> Original_Tubing_Press, 
                    global::System.Nullable<decimal> Original_Tubing_Gradient, 
                    global::System.Nullable<decimal> Original_Tubing_Temp_Whead, 
                    global::System.Nullable<decimal> Original_Casing_Press, 
                    global::System.Nullable<decimal> Original_Casing_Oil_Cut, 
                    global::System.Nullable<decimal> Original_Fluid_Level_From_Surface, 
                    global::System.Nullable<global::System.DateTime> Original_Fluid_Level_Shot_Date, 
                    string Original_Fluid_Level_Comment, 
                    string Original_Use_Fluid_Insertia_For_Analysis, 
                    string Original_Unit_Type, 
                    string Original_Pumping_Unit, 
                    global::System.Nullable<int> Original_Wrist_Pin, 
                    global::System.Nullable<decimal> Original_Actual_Stroke, 
                    string Original_Torque_Methode, 
                    string Original_Rotation, 
                    string Original_Motor_Type, 
                    global::System.Nullable<decimal> Original_Motor_Size, 
                    global::System.Nullable<decimal> Original_Slip_Torque, 
                    global::System.Nullable<decimal> Original_Measured_Motor_Amps_Up, 
                    global::System.Nullable<decimal> Original_Measured_Motor_Amps_Down, 
                    global::System.Nullable<decimal> Original_Max_Air_Balance_Press, 
                    global::System.Nullable<decimal> Original_Min_Air_Balance_Press, 
                    string Original_Crank_ID, 
                    global::System.Nullable<decimal> Original_CBT, 
                    global::System.Nullable<decimal> Original_C1_Lead_Distance, 
                    string Original_C1_Lead_Primary_Wt, 
                    string Original_C1_Lead_Aux_WT, 
                    global::System.Nullable<decimal> Original_C1_lag_Distance, 
                    string Original_C1_Lag_Primary_Wt, 
                    string Original_C1_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Original_C2_Lead_Distance, 
                    string Original_C2_Lead_Primary_Wt, 
                    string Original_C2_Lead_Aux_WT, 
                    global::System.Nullable<decimal> Original_C2_lag_Distance, 
                    string Original_C2_Lag_Primary_Wt, 
                    string Original_C2_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Original_Fluid_Above_Pump) {
            if ((Original_wellname == null)) {
                throw new global::System.ArgumentNullException("Original_wellname");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_wellname));
            }
            if ((Original_navigator_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_navigator_name));
            }
            if ((Original_CAO_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CAO_ID));
            }
            if ((Original_Long_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Long_Name));
            }
            if ((Original_Internal_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Internal_ID));
            }
            if ((Original_Group1 == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Group1));
            }
            if ((Original_Group2 == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Group2));
            }
            if ((Original_Group3 == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Group3));
            }
            if ((Original_Group4 == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Group4));
            }
            if ((Original_Facility_Description == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Facility_Description));
            }
            if ((Original_Rodpum_Controller == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Rodpum_Controller));
            }
            if ((Original_Controller_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_Controller_Type));
            }
            if ((Original_Sub_Controller_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_Sub_Controller_Type));
            }
            if ((Original_Communication_Protocol == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_Communication_Protocol));
            }
            if ((Original_Communication_Port == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_Communication_Port));
            }
            if ((Original_Communication_Address.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_Communication_Address.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Alt_Address.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_Alt_Address.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Comm_retry.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((int)(Original_Comm_retry.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Key_On_Delay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_Key_On_Delay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_Key_Off_Delay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((int)(Original_Key_Off_Delay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_Alarm_Delay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((int)(Original_Alarm_Delay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Delay.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_Clear_Delay.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Event_History_Recs.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((int)(Original_Max_Event_History_Recs.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_Top_Perforation.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((decimal)(Original_Top_Perforation.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_Bottom_Perforation.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((decimal)(Original_Bottom_Perforation.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_Anchor_depth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((decimal)(Original_Anchor_depth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_Plug_Back_TD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((decimal)(Original_Plug_Back_TD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_Pump_Measured.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((decimal)(Original_Pump_Measured.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_Pump_Vertical.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((decimal)(Original_Pump_Vertical.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_Pump_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((decimal)(Original_Pump_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Valve_Open == null)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((string)(Original_Casing_Valve_Open));
            }
            if ((Original_Casing_OD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((decimal)(Original_Casing_OD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Weight.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((decimal)(Original_Casing_Weight.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_OD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((decimal)(Original_Tubing_OD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_Oil.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((decimal)(Original_Oil.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_Water.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((decimal)(Original_Water.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_Gas.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((decimal)(Original_Gas.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_Last_WT_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((System.DateTime)(Original_Last_WT_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_Oil_Gravity.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((decimal)(Original_Oil_Gravity.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_Water_SP_Grav.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((decimal)(Original_Water_SP_Grav.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_Gas_Sp_Grav.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((decimal)(Original_Gas_Sp_Grav.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_Press.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((decimal)(Original_Tubing_Press.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_Gradient.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((decimal)(Original_Tubing_Gradient.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_Temp_Whead.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((decimal)(Original_Tubing_Temp_Whead.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Press.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((decimal)(Original_Casing_Press.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Oil_Cut.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((decimal)(Original_Casing_Oil_Cut.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_Fluid_Level_From_Surface.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((decimal)(Original_Fluid_Level_From_Surface.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_Fluid_Level_Shot_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((System.DateTime)(Original_Fluid_Level_Shot_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((Original_Fluid_Level_Comment == null)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((string)(Original_Fluid_Level_Comment));
            }
            if ((Original_Use_Fluid_Insertia_For_Analysis == null)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((string)(Original_Use_Fluid_Insertia_For_Analysis));
            }
            if ((Original_Unit_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((string)(Original_Unit_Type));
            }
            if ((Original_Pumping_Unit == null)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((string)(Original_Pumping_Unit));
            }
            if ((Original_Wrist_Pin.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((int)(Original_Wrist_Pin.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((Original_Actual_Stroke.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((decimal)(Original_Actual_Stroke.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((Original_Torque_Methode == null)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((string)(Original_Torque_Methode));
            }
            if ((Original_Rotation == null)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((string)(Original_Rotation));
            }
            if ((Original_Motor_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((string)(Original_Motor_Type));
            }
            if ((Original_Motor_Size.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((decimal)(Original_Motor_Size.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_Slip_Torque.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((decimal)(Original_Slip_Torque.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_Measured_Motor_Amps_Up.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((decimal)(Original_Measured_Motor_Amps_Up.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_Measured_Motor_Amps_Down.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((decimal)(Original_Measured_Motor_Amps_Down.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Air_Balance_Press.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((decimal)(Original_Max_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_Min_Air_Balance_Press.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((decimal)(Original_Min_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_Crank_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((string)(Original_Crank_ID));
            }
            if ((Original_CBT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((decimal)(Original_CBT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_C1_Lead_Distance.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((decimal)(Original_C1_Lead_Distance.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_C1_Lead_Primary_Wt == null)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((string)(Original_C1_Lead_Primary_Wt));
            }
            if ((Original_C1_Lead_Aux_WT == null)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((string)(Original_C1_Lead_Aux_WT));
            }
            if ((Original_C1_lag_Distance.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((decimal)(Original_C1_lag_Distance.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_C1_Lag_Primary_Wt == null)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((string)(Original_C1_Lag_Primary_Wt));
            }
            if ((Original_C1_Lag_Aux_Wt == null)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((string)(Original_C1_Lag_Aux_Wt));
            }
            if ((Original_C2_Lead_Distance.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((decimal)(Original_C2_Lead_Distance.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((Original_C2_Lead_Primary_Wt == null)) {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[144].Value = ((string)(Original_C2_Lead_Primary_Wt));
            }
            if ((Original_C2_Lead_Aux_WT == null)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((string)(Original_C2_Lead_Aux_WT));
            }
            if ((Original_C2_lag_Distance.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((decimal)(Original_C2_lag_Distance.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_C2_Lag_Primary_Wt == null)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((string)(Original_C2_Lag_Primary_Wt));
            }
            if ((Original_C2_Lag_Aux_Wt == null)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((string)(Original_C2_Lag_Aux_Wt));
            }
            if ((Original_Fluid_Above_Pump.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((decimal)(Original_Fluid_Above_Pump.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string wellname, 
                    string navigator_name, 
                    string CAO_ID, 
                    string Long_Name, 
                    string Internal_ID, 
                    string Group1, 
                    string Group2, 
                    string Group3, 
                    string Group4, 
                    string Facility_Description, 
                    string Rodpum_Controller, 
                    string Controller_Type, 
                    string Sub_Controller_Type, 
                    string Communication_Protocol, 
                    string Communication_Port, 
                    global::System.Nullable<int> Communication_Address, 
                    global::System.Nullable<int> Alt_Address, 
                    global::System.Nullable<int> Comm_retry, 
                    global::System.Nullable<int> Key_On_Delay, 
                    global::System.Nullable<int> Key_Off_Delay, 
                    global::System.Nullable<int> Alarm_Delay, 
                    global::System.Nullable<int> Clear_Delay, 
                    global::System.Nullable<int> Max_Event_History_Recs, 
                    global::System.Nullable<decimal> Top_Perforation, 
                    global::System.Nullable<decimal> Bottom_Perforation, 
                    global::System.Nullable<decimal> Anchor_depth, 
                    global::System.Nullable<decimal> Plug_Back_TD, 
                    global::System.Nullable<decimal> Pump_Measured, 
                    global::System.Nullable<decimal> Pump_Vertical, 
                    global::System.Nullable<decimal> Pump_ID, 
                    string Casing_Valve_Open, 
                    global::System.Nullable<decimal> Casing_OD, 
                    global::System.Nullable<decimal> Casing_Weight, 
                    global::System.Nullable<decimal> Tubing_OD, 
                    global::System.Nullable<decimal> Oil, 
                    global::System.Nullable<decimal> Water, 
                    global::System.Nullable<decimal> Gas, 
                    global::System.Nullable<global::System.DateTime> Last_WT_date, 
                    global::System.Nullable<decimal> Oil_Gravity, 
                    global::System.Nullable<decimal> Water_SP_Grav, 
                    global::System.Nullable<decimal> Gas_Sp_Grav, 
                    global::System.Nullable<decimal> Tubing_Press, 
                    global::System.Nullable<decimal> Tubing_Gradient, 
                    global::System.Nullable<decimal> Tubing_Temp_Whead, 
                    global::System.Nullable<decimal> Casing_Press, 
                    global::System.Nullable<decimal> Casing_Oil_Cut, 
                    global::System.Nullable<decimal> Fluid_Level_From_Surface, 
                    global::System.Nullable<global::System.DateTime> Fluid_Level_Shot_Date, 
                    string Fluid_Level_Comment, 
                    string Use_Fluid_Insertia_For_Analysis, 
                    string Unit_Type, 
                    string Pumping_Unit, 
                    global::System.Nullable<int> Wrist_Pin, 
                    global::System.Nullable<decimal> Actual_Stroke, 
                    string Torque_Methode, 
                    string Rotation, 
                    string Motor_Type, 
                    global::System.Nullable<decimal> Motor_Size, 
                    global::System.Nullable<decimal> Slip_Torque, 
                    global::System.Nullable<decimal> Measured_Motor_Amps_Up, 
                    global::System.Nullable<decimal> Measured_Motor_Amps_Down, 
                    global::System.Nullable<decimal> Max_Air_Balance_Press, 
                    global::System.Nullable<decimal> Min_Air_Balance_Press, 
                    string Crank_ID, 
                    global::System.Nullable<decimal> CBT, 
                    global::System.Nullable<decimal> C1_Lead_Distance, 
                    string C1_Lead_Primary_Wt, 
                    string C1_Lead_Aux_WT, 
                    global::System.Nullable<decimal> C1_lag_Distance, 
                    string C1_Lag_Primary_Wt, 
                    string C1_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> C2_Lead_Distance, 
                    string C2_Lead_Primary_Wt, 
                    string C2_Lead_Aux_WT, 
                    global::System.Nullable<decimal> C2_lag_Distance, 
                    string C2_Lag_Primary_Wt, 
                    string C2_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Fluid_Above_Pump) {
            if ((wellname == null)) {
                throw new global::System.ArgumentNullException("wellname");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(wellname));
            }
            if ((navigator_name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(navigator_name));
            }
            if ((CAO_ID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CAO_ID));
            }
            if ((Long_Name == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Long_Name));
            }
            if ((Internal_ID == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Internal_ID));
            }
            if ((Group1 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Group1));
            }
            if ((Group2 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Group2));
            }
            if ((Group3 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Group3));
            }
            if ((Group4 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Group4));
            }
            if ((Facility_Description == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Facility_Description));
            }
            if ((Rodpum_Controller == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Rodpum_Controller));
            }
            if ((Controller_Type == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(Controller_Type));
            }
            if ((Sub_Controller_Type == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Sub_Controller_Type));
            }
            if ((Communication_Protocol == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Communication_Protocol));
            }
            if ((Communication_Port == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(Communication_Port));
            }
            if ((Communication_Address.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(Communication_Address.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Alt_Address.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((int)(Alt_Address.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Comm_retry.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(Comm_retry.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Key_On_Delay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(Key_On_Delay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Key_Off_Delay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(Key_Off_Delay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Alarm_Delay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(Alarm_Delay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Clear_Delay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(Clear_Delay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Max_Event_History_Recs.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(Max_Event_History_Recs.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Top_Perforation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(Top_Perforation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Bottom_Perforation.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(Bottom_Perforation.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Anchor_depth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(Anchor_depth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Plug_Back_TD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(Plug_Back_TD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Pump_Measured.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(Pump_Measured.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Pump_Vertical.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(Pump_Vertical.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Pump_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(Pump_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Casing_Valve_Open == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Casing_Valve_Open));
            }
            if ((Casing_OD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(Casing_OD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Casing_Weight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(Casing_Weight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Tubing_OD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(Tubing_OD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Oil.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(Oil.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Water.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(Water.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Gas.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(Gas.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Last_WT_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(Last_WT_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Oil_Gravity.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(Oil_Gravity.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Water_SP_Grav.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(Water_SP_Grav.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Gas_Sp_Grav.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(Gas_Sp_Grav.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Tubing_Press.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(Tubing_Press.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Tubing_Gradient.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(Tubing_Gradient.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Tubing_Temp_Whead.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(Tubing_Temp_Whead.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Casing_Press.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(Casing_Press.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Casing_Oil_Cut.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(Casing_Oil_Cut.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Fluid_Level_From_Surface.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(Fluid_Level_From_Surface.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Fluid_Level_Shot_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((System.DateTime)(Fluid_Level_Shot_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Fluid_Level_Comment == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(Fluid_Level_Comment));
            }
            if ((Use_Fluid_Insertia_For_Analysis == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(Use_Fluid_Insertia_For_Analysis));
            }
            if ((Unit_Type == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(Unit_Type));
            }
            if ((Pumping_Unit == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(Pumping_Unit));
            }
            if ((Wrist_Pin.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((int)(Wrist_Pin.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Actual_Stroke.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((decimal)(Actual_Stroke.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Torque_Methode == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(Torque_Methode));
            }
            if ((Rotation == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(Rotation));
            }
            if ((Motor_Type == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(Motor_Type));
            }
            if ((Motor_Size.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((decimal)(Motor_Size.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Slip_Torque.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((decimal)(Slip_Torque.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Measured_Motor_Amps_Up.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((decimal)(Measured_Motor_Amps_Up.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Measured_Motor_Amps_Down.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((decimal)(Measured_Motor_Amps_Down.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Max_Air_Balance_Press.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((decimal)(Max_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Min_Air_Balance_Press.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((decimal)(Min_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Crank_ID == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(Crank_ID));
            }
            if ((CBT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((decimal)(CBT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((C1_Lead_Distance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((decimal)(C1_Lead_Distance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((C1_Lead_Primary_Wt == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(C1_Lead_Primary_Wt));
            }
            if ((C1_Lead_Aux_WT == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(C1_Lead_Aux_WT));
            }
            if ((C1_lag_Distance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((decimal)(C1_lag_Distance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((C1_Lag_Primary_Wt == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(C1_Lag_Primary_Wt));
            }
            if ((C1_Lag_Aux_Wt == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(C1_Lag_Aux_Wt));
            }
            if ((C2_Lead_Distance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((decimal)(C2_Lead_Distance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((C2_Lead_Primary_Wt == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(C2_Lead_Primary_Wt));
            }
            if ((C2_Lead_Aux_WT == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(C2_Lead_Aux_WT));
            }
            if ((C2_lag_Distance.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((decimal)(C2_lag_Distance.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((C2_Lag_Primary_Wt == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(C2_Lag_Primary_Wt));
            }
            if ((C2_Lag_Aux_Wt == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(C2_Lag_Aux_Wt));
            }
            if ((Fluid_Above_Pump.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((decimal)(Fluid_Above_Pump.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string wellname, 
                    string navigator_name, 
                    string CAO_ID, 
                    string Long_Name, 
                    string Internal_ID, 
                    string Group1, 
                    string Group2, 
                    string Group3, 
                    string Group4, 
                    string Facility_Description, 
                    string Rodpum_Controller, 
                    string Controller_Type, 
                    string Sub_Controller_Type, 
                    string Communication_Protocol, 
                    string Communication_Port, 
                    global::System.Nullable<int> Communication_Address, 
                    global::System.Nullable<int> Alt_Address, 
                    global::System.Nullable<int> Comm_retry, 
                    global::System.Nullable<int> Key_On_Delay, 
                    global::System.Nullable<int> Key_Off_Delay, 
                    global::System.Nullable<int> Alarm_Delay, 
                    global::System.Nullable<int> Clear_Delay, 
                    global::System.Nullable<int> Max_Event_History_Recs, 
                    global::System.Nullable<decimal> Top_Perforation, 
                    global::System.Nullable<decimal> Bottom_Perforation, 
                    global::System.Nullable<decimal> Anchor_depth, 
                    global::System.Nullable<decimal> Plug_Back_TD, 
                    global::System.Nullable<decimal> Pump_Measured, 
                    global::System.Nullable<decimal> Pump_Vertical, 
                    global::System.Nullable<decimal> Pump_ID, 
                    string Casing_Valve_Open, 
                    global::System.Nullable<decimal> Casing_OD, 
                    global::System.Nullable<decimal> Casing_Weight, 
                    global::System.Nullable<decimal> Tubing_OD, 
                    global::System.Nullable<decimal> Oil, 
                    global::System.Nullable<decimal> Water, 
                    global::System.Nullable<decimal> Gas, 
                    global::System.Nullable<global::System.DateTime> Last_WT_date, 
                    global::System.Nullable<decimal> Oil_Gravity, 
                    global::System.Nullable<decimal> Water_SP_Grav, 
                    global::System.Nullable<decimal> Gas_Sp_Grav, 
                    global::System.Nullable<decimal> Tubing_Press, 
                    global::System.Nullable<decimal> Tubing_Gradient, 
                    global::System.Nullable<decimal> Tubing_Temp_Whead, 
                    global::System.Nullable<decimal> Casing_Press, 
                    global::System.Nullable<decimal> Casing_Oil_Cut, 
                    global::System.Nullable<decimal> Fluid_Level_From_Surface, 
                    global::System.Nullable<global::System.DateTime> Fluid_Level_Shot_Date, 
                    string Fluid_Level_Comment, 
                    string Use_Fluid_Insertia_For_Analysis, 
                    string Unit_Type, 
                    string Pumping_Unit, 
                    global::System.Nullable<int> Wrist_Pin, 
                    global::System.Nullable<decimal> Actual_Stroke, 
                    string Torque_Methode, 
                    string Rotation, 
                    string Motor_Type, 
                    global::System.Nullable<decimal> Motor_Size, 
                    global::System.Nullable<decimal> Slip_Torque, 
                    global::System.Nullable<decimal> Measured_Motor_Amps_Up, 
                    global::System.Nullable<decimal> Measured_Motor_Amps_Down, 
                    global::System.Nullable<decimal> Max_Air_Balance_Press, 
                    global::System.Nullable<decimal> Min_Air_Balance_Press, 
                    string Crank_ID, 
                    global::System.Nullable<decimal> CBT, 
                    global::System.Nullable<decimal> C1_Lead_Distance, 
                    string C1_Lead_Primary_Wt, 
                    string C1_Lead_Aux_WT, 
                    global::System.Nullable<decimal> C1_lag_Distance, 
                    string C1_Lag_Primary_Wt, 
                    string C1_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> C2_Lead_Distance, 
                    string C2_Lead_Primary_Wt, 
                    string C2_Lead_Aux_WT, 
                    global::System.Nullable<decimal> C2_lag_Distance, 
                    string C2_Lag_Primary_Wt, 
                    string C2_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Fluid_Above_Pump, 
                    string Original_wellname, 
                    string Original_navigator_name, 
                    string Original_CAO_ID, 
                    string Original_Long_Name, 
                    string Original_Internal_ID, 
                    string Original_Group1, 
                    string Original_Group2, 
                    string Original_Group3, 
                    string Original_Group4, 
                    string Original_Facility_Description, 
                    string Original_Rodpum_Controller, 
                    string Original_Controller_Type, 
                    string Original_Sub_Controller_Type, 
                    string Original_Communication_Protocol, 
                    string Original_Communication_Port, 
                    global::System.Nullable<int> Original_Communication_Address, 
                    global::System.Nullable<int> Original_Alt_Address, 
                    global::System.Nullable<int> Original_Comm_retry, 
                    global::System.Nullable<int> Original_Key_On_Delay, 
                    global::System.Nullable<int> Original_Key_Off_Delay, 
                    global::System.Nullable<int> Original_Alarm_Delay, 
                    global::System.Nullable<int> Original_Clear_Delay, 
                    global::System.Nullable<int> Original_Max_Event_History_Recs, 
                    global::System.Nullable<decimal> Original_Top_Perforation, 
                    global::System.Nullable<decimal> Original_Bottom_Perforation, 
                    global::System.Nullable<decimal> Original_Anchor_depth, 
                    global::System.Nullable<decimal> Original_Plug_Back_TD, 
                    global::System.Nullable<decimal> Original_Pump_Measured, 
                    global::System.Nullable<decimal> Original_Pump_Vertical, 
                    global::System.Nullable<decimal> Original_Pump_ID, 
                    string Original_Casing_Valve_Open, 
                    global::System.Nullable<decimal> Original_Casing_OD, 
                    global::System.Nullable<decimal> Original_Casing_Weight, 
                    global::System.Nullable<decimal> Original_Tubing_OD, 
                    global::System.Nullable<decimal> Original_Oil, 
                    global::System.Nullable<decimal> Original_Water, 
                    global::System.Nullable<decimal> Original_Gas, 
                    global::System.Nullable<global::System.DateTime> Original_Last_WT_date, 
                    global::System.Nullable<decimal> Original_Oil_Gravity, 
                    global::System.Nullable<decimal> Original_Water_SP_Grav, 
                    global::System.Nullable<decimal> Original_Gas_Sp_Grav, 
                    global::System.Nullable<decimal> Original_Tubing_Press, 
                    global::System.Nullable<decimal> Original_Tubing_Gradient, 
                    global::System.Nullable<decimal> Original_Tubing_Temp_Whead, 
                    global::System.Nullable<decimal> Original_Casing_Press, 
                    global::System.Nullable<decimal> Original_Casing_Oil_Cut, 
                    global::System.Nullable<decimal> Original_Fluid_Level_From_Surface, 
                    global::System.Nullable<global::System.DateTime> Original_Fluid_Level_Shot_Date, 
                    string Original_Fluid_Level_Comment, 
                    string Original_Use_Fluid_Insertia_For_Analysis, 
                    string Original_Unit_Type, 
                    string Original_Pumping_Unit, 
                    global::System.Nullable<int> Original_Wrist_Pin, 
                    global::System.Nullable<decimal> Original_Actual_Stroke, 
                    string Original_Torque_Methode, 
                    string Original_Rotation, 
                    string Original_Motor_Type, 
                    global::System.Nullable<decimal> Original_Motor_Size, 
                    global::System.Nullable<decimal> Original_Slip_Torque, 
                    global::System.Nullable<decimal> Original_Measured_Motor_Amps_Up, 
                    global::System.Nullable<decimal> Original_Measured_Motor_Amps_Down, 
                    global::System.Nullable<decimal> Original_Max_Air_Balance_Press, 
                    global::System.Nullable<decimal> Original_Min_Air_Balance_Press, 
                    string Original_Crank_ID, 
                    global::System.Nullable<decimal> Original_CBT, 
                    global::System.Nullable<decimal> Original_C1_Lead_Distance, 
                    string Original_C1_Lead_Primary_Wt, 
                    string Original_C1_Lead_Aux_WT, 
                    global::System.Nullable<decimal> Original_C1_lag_Distance, 
                    string Original_C1_Lag_Primary_Wt, 
                    string Original_C1_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Original_C2_Lead_Distance, 
                    string Original_C2_Lead_Primary_Wt, 
                    string Original_C2_Lead_Aux_WT, 
                    global::System.Nullable<decimal> Original_C2_lag_Distance, 
                    string Original_C2_Lag_Primary_Wt, 
                    string Original_C2_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Original_Fluid_Above_Pump) {
            if ((wellname == null)) {
                throw new global::System.ArgumentNullException("wellname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(wellname));
            }
            if ((navigator_name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(navigator_name));
            }
            if ((CAO_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CAO_ID));
            }
            if ((Long_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Long_Name));
            }
            if ((Internal_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Internal_ID));
            }
            if ((Group1 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Group1));
            }
            if ((Group2 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Group2));
            }
            if ((Group3 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Group3));
            }
            if ((Group4 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Group4));
            }
            if ((Facility_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Facility_Description));
            }
            if ((Rodpum_Controller == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Rodpum_Controller));
            }
            if ((Controller_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Controller_Type));
            }
            if ((Sub_Controller_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Sub_Controller_Type));
            }
            if ((Communication_Protocol == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Communication_Protocol));
            }
            if ((Communication_Port == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Communication_Port));
            }
            if ((Communication_Address.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Communication_Address.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Alt_Address.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Alt_Address.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Comm_retry.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Comm_retry.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Key_On_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Key_On_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Key_Off_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Key_Off_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Alarm_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Alarm_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Clear_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Clear_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Max_Event_History_Recs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Max_Event_History_Recs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Top_Perforation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Top_Perforation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Bottom_Perforation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Bottom_Perforation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Anchor_depth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Anchor_depth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Plug_Back_TD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Plug_Back_TD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Pump_Measured.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Pump_Measured.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Pump_Vertical.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Pump_Vertical.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Pump_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Pump_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Casing_Valve_Open == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Casing_Valve_Open));
            }
            if ((Casing_OD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Casing_OD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Casing_Weight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Casing_Weight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Tubing_OD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Tubing_OD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Oil.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(Oil.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Water.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Water.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Gas.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(Gas.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Last_WT_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(Last_WT_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Oil_Gravity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(Oil_Gravity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Water_SP_Grav.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(Water_SP_Grav.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Gas_Sp_Grav.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Gas_Sp_Grav.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Tubing_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Tubing_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Tubing_Gradient.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(Tubing_Gradient.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Tubing_Temp_Whead.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(Tubing_Temp_Whead.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Casing_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(Casing_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Casing_Oil_Cut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(Casing_Oil_Cut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Fluid_Level_From_Surface.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(Fluid_Level_From_Surface.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Fluid_Level_Shot_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((System.DateTime)(Fluid_Level_Shot_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Fluid_Level_Comment == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Fluid_Level_Comment));
            }
            if ((Use_Fluid_Insertia_For_Analysis == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Use_Fluid_Insertia_For_Analysis));
            }
            if ((Unit_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Unit_Type));
            }
            if ((Pumping_Unit == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Pumping_Unit));
            }
            if ((Wrist_Pin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((int)(Wrist_Pin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Actual_Stroke.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(Actual_Stroke.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Torque_Methode == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Torque_Methode));
            }
            if ((Rotation == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Rotation));
            }
            if ((Motor_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Motor_Type));
            }
            if ((Motor_Size.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((decimal)(Motor_Size.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Slip_Torque.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(Slip_Torque.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Measured_Motor_Amps_Up.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(Measured_Motor_Amps_Up.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Measured_Motor_Amps_Down.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((decimal)(Measured_Motor_Amps_Down.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Max_Air_Balance_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(Max_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Min_Air_Balance_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((decimal)(Min_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Crank_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Crank_ID));
            }
            if ((CBT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((decimal)(CBT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((C1_Lead_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((decimal)(C1_Lead_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((C1_Lead_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(C1_Lead_Primary_Wt));
            }
            if ((C1_Lead_Aux_WT == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(C1_Lead_Aux_WT));
            }
            if ((C1_lag_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((decimal)(C1_lag_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((C1_Lag_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(C1_Lag_Primary_Wt));
            }
            if ((C1_Lag_Aux_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(C1_Lag_Aux_Wt));
            }
            if ((C2_Lead_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((decimal)(C2_Lead_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((C2_Lead_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(C2_Lead_Primary_Wt));
            }
            if ((C2_Lead_Aux_WT == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(C2_Lead_Aux_WT));
            }
            if ((C2_lag_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(C2_lag_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((C2_Lag_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(C2_Lag_Primary_Wt));
            }
            if ((C2_Lag_Aux_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(C2_Lag_Aux_Wt));
            }
            if ((Fluid_Above_Pump.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(Fluid_Above_Pump.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_wellname == null)) {
                throw new global::System.ArgumentNullException("Original_wellname");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_wellname));
            }
            if ((Original_navigator_name == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_navigator_name));
            }
            if ((Original_CAO_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_CAO_ID));
            }
            if ((Original_Long_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_Long_Name));
            }
            if ((Original_Internal_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(Original_Internal_ID));
            }
            if ((Original_Group1 == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(Original_Group1));
            }
            if ((Original_Group2 == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Original_Group2));
            }
            if ((Original_Group3 == null)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_Group3));
            }
            if ((Original_Group4 == null)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_Group4));
            }
            if ((Original_Facility_Description == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(Original_Facility_Description));
            }
            if ((Original_Rodpum_Controller == null)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(Original_Rodpum_Controller));
            }
            if ((Original_Controller_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_Controller_Type));
            }
            if ((Original_Sub_Controller_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(Original_Sub_Controller_Type));
            }
            if ((Original_Communication_Protocol == null)) {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_Communication_Protocol));
            }
            if ((Original_Communication_Port == null)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_Communication_Port));
            }
            if ((Original_Communication_Address.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((int)(Original_Communication_Address.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((Original_Alt_Address.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((int)(Original_Alt_Address.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_Comm_retry.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((int)(Original_Comm_retry.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((Original_Key_On_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[114].Value = ((int)(Original_Key_On_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((Original_Key_Off_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[116].Value = ((int)(Original_Key_Off_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((Original_Alarm_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[118].Value = ((int)(Original_Alarm_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((Original_Clear_Delay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[120].Value = ((int)(Original_Clear_Delay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Event_History_Recs.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[122].Value = ((int)(Original_Max_Event_History_Recs.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((Original_Top_Perforation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[124].Value = ((decimal)(Original_Top_Perforation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((Original_Bottom_Perforation.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[126].Value = ((decimal)(Original_Bottom_Perforation.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((Original_Anchor_depth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[128].Value = ((decimal)(Original_Anchor_depth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((Original_Plug_Back_TD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((decimal)(Original_Plug_Back_TD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_Pump_Measured.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[132].Value = ((decimal)(Original_Pump_Measured.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((Original_Pump_Vertical.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[134].Value = ((decimal)(Original_Pump_Vertical.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((Original_Pump_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[136].Value = ((decimal)(Original_Pump_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Valve_Open == null)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((string)(Original_Casing_Valve_Open));
            }
            if ((Original_Casing_OD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[140].Value = ((decimal)(Original_Casing_OD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Weight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((decimal)(Original_Casing_Weight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_OD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((decimal)(Original_Tubing_OD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((Original_Oil.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[146].Value = ((decimal)(Original_Oil.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((Original_Water.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((decimal)(Original_Water.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((Original_Gas.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[150].Value = ((decimal)(Original_Gas.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((Original_Last_WT_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((System.DateTime)(Original_Last_WT_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((Original_Oil_Gravity.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[154].Value = ((decimal)(Original_Oil_Gravity.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            if ((Original_Water_SP_Grav.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((decimal)(Original_Water_SP_Grav.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            if ((Original_Gas_Sp_Grav.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((decimal)(Original_Gas_Sp_Grav.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((decimal)(Original_Tubing_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_Gradient.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((decimal)(Original_Tubing_Gradient.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            if ((Original_Tubing_Temp_Whead.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[164].Value = ((decimal)(Original_Tubing_Temp_Whead.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[166].Value = ((decimal)(Original_Casing_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[166].Value = global::System.DBNull.Value;
            }
            if ((Original_Casing_Oil_Cut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[168].Value = ((decimal)(Original_Casing_Oil_Cut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[167].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[168].Value = global::System.DBNull.Value;
            }
            if ((Original_Fluid_Level_From_Surface.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[170].Value = ((decimal)(Original_Fluid_Level_From_Surface.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[169].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[170].Value = global::System.DBNull.Value;
            }
            if ((Original_Fluid_Level_Shot_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[172].Value = ((System.DateTime)(Original_Fluid_Level_Shot_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[171].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[172].Value = global::System.DBNull.Value;
            }
            if ((Original_Fluid_Level_Comment == null)) {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[174].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[174].Value = ((string)(Original_Fluid_Level_Comment));
            }
            if ((Original_Use_Fluid_Insertia_For_Analysis == null)) {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[176].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[175].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[176].Value = ((string)(Original_Use_Fluid_Insertia_For_Analysis));
            }
            if ((Original_Unit_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[178].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[177].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[178].Value = ((string)(Original_Unit_Type));
            }
            if ((Original_Pumping_Unit == null)) {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[180].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[179].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[180].Value = ((string)(Original_Pumping_Unit));
            }
            if ((Original_Wrist_Pin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[182].Value = ((int)(Original_Wrist_Pin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[181].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[182].Value = global::System.DBNull.Value;
            }
            if ((Original_Actual_Stroke.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[184].Value = ((decimal)(Original_Actual_Stroke.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[183].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[184].Value = global::System.DBNull.Value;
            }
            if ((Original_Torque_Methode == null)) {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[186].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[186].Value = ((string)(Original_Torque_Methode));
            }
            if ((Original_Rotation == null)) {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[188].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[187].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[188].Value = ((string)(Original_Rotation));
            }
            if ((Original_Motor_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[190].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[190].Value = ((string)(Original_Motor_Type));
            }
            if ((Original_Motor_Size.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[192].Value = ((decimal)(Original_Motor_Size.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[191].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[192].Value = global::System.DBNull.Value;
            }
            if ((Original_Slip_Torque.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[194].Value = ((decimal)(Original_Slip_Torque.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[193].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[194].Value = global::System.DBNull.Value;
            }
            if ((Original_Measured_Motor_Amps_Up.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[196].Value = ((decimal)(Original_Measured_Motor_Amps_Up.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[195].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[196].Value = global::System.DBNull.Value;
            }
            if ((Original_Measured_Motor_Amps_Down.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[198].Value = ((decimal)(Original_Measured_Motor_Amps_Down.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[198].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Air_Balance_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[200].Value = ((decimal)(Original_Max_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[199].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[200].Value = global::System.DBNull.Value;
            }
            if ((Original_Min_Air_Balance_Press.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[202].Value = ((decimal)(Original_Min_Air_Balance_Press.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[201].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[202].Value = global::System.DBNull.Value;
            }
            if ((Original_Crank_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[204].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[203].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[204].Value = ((string)(Original_Crank_ID));
            }
            if ((Original_CBT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[206].Value = ((decimal)(Original_CBT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[205].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[206].Value = global::System.DBNull.Value;
            }
            if ((Original_C1_Lead_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[208].Value = ((decimal)(Original_C1_Lead_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[207].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[208].Value = global::System.DBNull.Value;
            }
            if ((Original_C1_Lead_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[210].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[209].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[210].Value = ((string)(Original_C1_Lead_Primary_Wt));
            }
            if ((Original_C1_Lead_Aux_WT == null)) {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[212].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[211].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[212].Value = ((string)(Original_C1_Lead_Aux_WT));
            }
            if ((Original_C1_lag_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[214].Value = ((decimal)(Original_C1_lag_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[213].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[214].Value = global::System.DBNull.Value;
            }
            if ((Original_C1_Lag_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[216].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[215].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[216].Value = ((string)(Original_C1_Lag_Primary_Wt));
            }
            if ((Original_C1_Lag_Aux_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[218].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[217].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[218].Value = ((string)(Original_C1_Lag_Aux_Wt));
            }
            if ((Original_C2_Lead_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[220].Value = ((decimal)(Original_C2_Lead_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[219].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[220].Value = global::System.DBNull.Value;
            }
            if ((Original_C2_Lead_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[222].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[221].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[222].Value = ((string)(Original_C2_Lead_Primary_Wt));
            }
            if ((Original_C2_Lead_Aux_WT == null)) {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[224].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[223].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[224].Value = ((string)(Original_C2_Lead_Aux_WT));
            }
            if ((Original_C2_lag_Distance.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[226].Value = ((decimal)(Original_C2_lag_Distance.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[225].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[226].Value = global::System.DBNull.Value;
            }
            if ((Original_C2_Lag_Primary_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[228].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[227].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[228].Value = ((string)(Original_C2_Lag_Primary_Wt));
            }
            if ((Original_C2_Lag_Aux_Wt == null)) {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[230].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[229].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[230].Value = ((string)(Original_C2_Lag_Aux_Wt));
            }
            if ((Original_Fluid_Above_Pump.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[232].Value = ((decimal)(Original_Fluid_Above_Pump.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[231].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[232].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string navigator_name, 
                    string CAO_ID, 
                    string Long_Name, 
                    string Internal_ID, 
                    string Group1, 
                    string Group2, 
                    string Group3, 
                    string Group4, 
                    string Facility_Description, 
                    string Rodpum_Controller, 
                    string Controller_Type, 
                    string Sub_Controller_Type, 
                    string Communication_Protocol, 
                    string Communication_Port, 
                    global::System.Nullable<int> Communication_Address, 
                    global::System.Nullable<int> Alt_Address, 
                    global::System.Nullable<int> Comm_retry, 
                    global::System.Nullable<int> Key_On_Delay, 
                    global::System.Nullable<int> Key_Off_Delay, 
                    global::System.Nullable<int> Alarm_Delay, 
                    global::System.Nullable<int> Clear_Delay, 
                    global::System.Nullable<int> Max_Event_History_Recs, 
                    global::System.Nullable<decimal> Top_Perforation, 
                    global::System.Nullable<decimal> Bottom_Perforation, 
                    global::System.Nullable<decimal> Anchor_depth, 
                    global::System.Nullable<decimal> Plug_Back_TD, 
                    global::System.Nullable<decimal> Pump_Measured, 
                    global::System.Nullable<decimal> Pump_Vertical, 
                    global::System.Nullable<decimal> Pump_ID, 
                    string Casing_Valve_Open, 
                    global::System.Nullable<decimal> Casing_OD, 
                    global::System.Nullable<decimal> Casing_Weight, 
                    global::System.Nullable<decimal> Tubing_OD, 
                    global::System.Nullable<decimal> Oil, 
                    global::System.Nullable<decimal> Water, 
                    global::System.Nullable<decimal> Gas, 
                    global::System.Nullable<global::System.DateTime> Last_WT_date, 
                    global::System.Nullable<decimal> Oil_Gravity, 
                    global::System.Nullable<decimal> Water_SP_Grav, 
                    global::System.Nullable<decimal> Gas_Sp_Grav, 
                    global::System.Nullable<decimal> Tubing_Press, 
                    global::System.Nullable<decimal> Tubing_Gradient, 
                    global::System.Nullable<decimal> Tubing_Temp_Whead, 
                    global::System.Nullable<decimal> Casing_Press, 
                    global::System.Nullable<decimal> Casing_Oil_Cut, 
                    global::System.Nullable<decimal> Fluid_Level_From_Surface, 
                    global::System.Nullable<global::System.DateTime> Fluid_Level_Shot_Date, 
                    string Fluid_Level_Comment, 
                    string Use_Fluid_Insertia_For_Analysis, 
                    string Unit_Type, 
                    string Pumping_Unit, 
                    global::System.Nullable<int> Wrist_Pin, 
                    global::System.Nullable<decimal> Actual_Stroke, 
                    string Torque_Methode, 
                    string Rotation, 
                    string Motor_Type, 
                    global::System.Nullable<decimal> Motor_Size, 
                    global::System.Nullable<decimal> Slip_Torque, 
                    global::System.Nullable<decimal> Measured_Motor_Amps_Up, 
                    global::System.Nullable<decimal> Measured_Motor_Amps_Down, 
                    global::System.Nullable<decimal> Max_Air_Balance_Press, 
                    global::System.Nullable<decimal> Min_Air_Balance_Press, 
                    string Crank_ID, 
                    global::System.Nullable<decimal> CBT, 
                    global::System.Nullable<decimal> C1_Lead_Distance, 
                    string C1_Lead_Primary_Wt, 
                    string C1_Lead_Aux_WT, 
                    global::System.Nullable<decimal> C1_lag_Distance, 
                    string C1_Lag_Primary_Wt, 
                    string C1_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> C2_Lead_Distance, 
                    string C2_Lead_Primary_Wt, 
                    string C2_Lead_Aux_WT, 
                    global::System.Nullable<decimal> C2_lag_Distance, 
                    string C2_Lag_Primary_Wt, 
                    string C2_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Fluid_Above_Pump, 
                    string Original_wellname, 
                    string Original_navigator_name, 
                    string Original_CAO_ID, 
                    string Original_Long_Name, 
                    string Original_Internal_ID, 
                    string Original_Group1, 
                    string Original_Group2, 
                    string Original_Group3, 
                    string Original_Group4, 
                    string Original_Facility_Description, 
                    string Original_Rodpum_Controller, 
                    string Original_Controller_Type, 
                    string Original_Sub_Controller_Type, 
                    string Original_Communication_Protocol, 
                    string Original_Communication_Port, 
                    global::System.Nullable<int> Original_Communication_Address, 
                    global::System.Nullable<int> Original_Alt_Address, 
                    global::System.Nullable<int> Original_Comm_retry, 
                    global::System.Nullable<int> Original_Key_On_Delay, 
                    global::System.Nullable<int> Original_Key_Off_Delay, 
                    global::System.Nullable<int> Original_Alarm_Delay, 
                    global::System.Nullable<int> Original_Clear_Delay, 
                    global::System.Nullable<int> Original_Max_Event_History_Recs, 
                    global::System.Nullable<decimal> Original_Top_Perforation, 
                    global::System.Nullable<decimal> Original_Bottom_Perforation, 
                    global::System.Nullable<decimal> Original_Anchor_depth, 
                    global::System.Nullable<decimal> Original_Plug_Back_TD, 
                    global::System.Nullable<decimal> Original_Pump_Measured, 
                    global::System.Nullable<decimal> Original_Pump_Vertical, 
                    global::System.Nullable<decimal> Original_Pump_ID, 
                    string Original_Casing_Valve_Open, 
                    global::System.Nullable<decimal> Original_Casing_OD, 
                    global::System.Nullable<decimal> Original_Casing_Weight, 
                    global::System.Nullable<decimal> Original_Tubing_OD, 
                    global::System.Nullable<decimal> Original_Oil, 
                    global::System.Nullable<decimal> Original_Water, 
                    global::System.Nullable<decimal> Original_Gas, 
                    global::System.Nullable<global::System.DateTime> Original_Last_WT_date, 
                    global::System.Nullable<decimal> Original_Oil_Gravity, 
                    global::System.Nullable<decimal> Original_Water_SP_Grav, 
                    global::System.Nullable<decimal> Original_Gas_Sp_Grav, 
                    global::System.Nullable<decimal> Original_Tubing_Press, 
                    global::System.Nullable<decimal> Original_Tubing_Gradient, 
                    global::System.Nullable<decimal> Original_Tubing_Temp_Whead, 
                    global::System.Nullable<decimal> Original_Casing_Press, 
                    global::System.Nullable<decimal> Original_Casing_Oil_Cut, 
                    global::System.Nullable<decimal> Original_Fluid_Level_From_Surface, 
                    global::System.Nullable<global::System.DateTime> Original_Fluid_Level_Shot_Date, 
                    string Original_Fluid_Level_Comment, 
                    string Original_Use_Fluid_Insertia_For_Analysis, 
                    string Original_Unit_Type, 
                    string Original_Pumping_Unit, 
                    global::System.Nullable<int> Original_Wrist_Pin, 
                    global::System.Nullable<decimal> Original_Actual_Stroke, 
                    string Original_Torque_Methode, 
                    string Original_Rotation, 
                    string Original_Motor_Type, 
                    global::System.Nullable<decimal> Original_Motor_Size, 
                    global::System.Nullable<decimal> Original_Slip_Torque, 
                    global::System.Nullable<decimal> Original_Measured_Motor_Amps_Up, 
                    global::System.Nullable<decimal> Original_Measured_Motor_Amps_Down, 
                    global::System.Nullable<decimal> Original_Max_Air_Balance_Press, 
                    global::System.Nullable<decimal> Original_Min_Air_Balance_Press, 
                    string Original_Crank_ID, 
                    global::System.Nullable<decimal> Original_CBT, 
                    global::System.Nullable<decimal> Original_C1_Lead_Distance, 
                    string Original_C1_Lead_Primary_Wt, 
                    string Original_C1_Lead_Aux_WT, 
                    global::System.Nullable<decimal> Original_C1_lag_Distance, 
                    string Original_C1_Lag_Primary_Wt, 
                    string Original_C1_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Original_C2_Lead_Distance, 
                    string Original_C2_Lead_Primary_Wt, 
                    string Original_C2_Lead_Aux_WT, 
                    global::System.Nullable<decimal> Original_C2_lag_Distance, 
                    string Original_C2_Lag_Primary_Wt, 
                    string Original_C2_Lag_Aux_Wt, 
                    global::System.Nullable<decimal> Original_Fluid_Above_Pump) {
            return this.Update(Original_wellname, navigator_name, CAO_ID, Long_Name, Internal_ID, Group1, Group2, Group3, Group4, Facility_Description, Rodpum_Controller, Controller_Type, Sub_Controller_Type, Communication_Protocol, Communication_Port, Communication_Address, Alt_Address, Comm_retry, Key_On_Delay, Key_Off_Delay, Alarm_Delay, Clear_Delay, Max_Event_History_Recs, Top_Perforation, Bottom_Perforation, Anchor_depth, Plug_Back_TD, Pump_Measured, Pump_Vertical, Pump_ID, Casing_Valve_Open, Casing_OD, Casing_Weight, Tubing_OD, Oil, Water, Gas, Last_WT_date, Oil_Gravity, Water_SP_Grav, Gas_Sp_Grav, Tubing_Press, Tubing_Gradient, Tubing_Temp_Whead, Casing_Press, Casing_Oil_Cut, Fluid_Level_From_Surface, Fluid_Level_Shot_Date, Fluid_Level_Comment, Use_Fluid_Insertia_For_Analysis, Unit_Type, Pumping_Unit, Wrist_Pin, Actual_Stroke, Torque_Methode, Rotation, Motor_Type, Motor_Size, Slip_Torque, Measured_Motor_Amps_Up, Measured_Motor_Amps_Down, Max_Air_Balance_Press, Min_Air_Balance_Press, Crank_ID, CBT, C1_Lead_Distance, C1_Lead_Primary_Wt, C1_Lead_Aux_WT, C1_lag_Distance, C1_Lag_Primary_Wt, C1_Lag_Aux_Wt, C2_Lead_Distance, C2_Lead_Primary_Wt, C2_Lead_Aux_WT, C2_lag_Distance, C2_Lag_Primary_Wt, C2_Lag_Aux_Wt, Fluid_Above_Pump, Original_wellname, Original_navigator_name, Original_CAO_ID, Original_Long_Name, Original_Internal_ID, Original_Group1, Original_Group2, Original_Group3, Original_Group4, Original_Facility_Description, Original_Rodpum_Controller, Original_Controller_Type, Original_Sub_Controller_Type, Original_Communication_Protocol, Original_Communication_Port, Original_Communication_Address, Original_Alt_Address, Original_Comm_retry, Original_Key_On_Delay, Original_Key_Off_Delay, Original_Alarm_Delay, Original_Clear_Delay, Original_Max_Event_History_Recs, Original_Top_Perforation, Original_Bottom_Perforation, Original_Anchor_depth, Original_Plug_Back_TD, Original_Pump_Measured, Original_Pump_Vertical, Original_Pump_ID, Original_Casing_Valve_Open, Original_Casing_OD, Original_Casing_Weight, Original_Tubing_OD, Original_Oil, Original_Water, Original_Gas, Original_Last_WT_date, Original_Oil_Gravity, Original_Water_SP_Grav, Original_Gas_Sp_Grav, Original_Tubing_Press, Original_Tubing_Gradient, Original_Tubing_Temp_Whead, Original_Casing_Press, Original_Casing_Oil_Cut, Original_Fluid_Level_From_Surface, Original_Fluid_Level_Shot_Date, Original_Fluid_Level_Comment, Original_Use_Fluid_Insertia_For_Analysis, Original_Unit_Type, Original_Pumping_Unit, Original_Wrist_Pin, Original_Actual_Stroke, Original_Torque_Methode, Original_Rotation, Original_Motor_Type, Original_Motor_Size, Original_Slip_Torque, Original_Measured_Motor_Amps_Up, Original_Measured_Motor_Amps_Down, Original_Max_Air_Balance_Press, Original_Min_Air_Balance_Press, Original_Crank_ID, Original_CBT, Original_C1_Lead_Distance, Original_C1_Lead_Primary_Wt, Original_C1_Lead_Aux_WT, Original_C1_lag_Distance, Original_C1_Lag_Primary_Wt, Original_C1_Lag_Aux_Wt, Original_C2_Lead_Distance, Original_C2_Lead_Primary_Wt, Original_C2_Lead_Aux_WT, Original_C2_lag_Distance, Original_C2_Lag_Primary_Wt, Original_C2_Lag_Aux_Wt, Original_Fluid_Above_Pump);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private BeamWellTableAdapter _beamWellTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BeamWellTableAdapter BeamWellTableAdapter {
            get {
                return this._beamWellTableAdapter;
            }
            set {
                this._beamWellTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._beamWellTableAdapter != null) 
                            && (this._beamWellTableAdapter.Connection != null))) {
                    return this._beamWellTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._beamWellTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(BeamWellDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._beamWellTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BeamWell.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._beamWellTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(BeamWellDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._beamWellTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BeamWell.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._beamWellTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(BeamWellDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._beamWellTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BeamWell.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._beamWellTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(BeamWellDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._beamWellTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._beamWellTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._beamWellTableAdapter != null)) {
                    revertConnections.Add(this._beamWellTableAdapter, this._beamWellTableAdapter.Connection);
                    this._beamWellTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._beamWellTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._beamWellTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._beamWellTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._beamWellTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._beamWellTableAdapter != null)) {
                    this._beamWellTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._beamWellTableAdapter]));
                    this._beamWellTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591