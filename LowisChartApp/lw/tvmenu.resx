<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AQDAAAEAwAABAMAAAQDgAAMA
</value>
  </data>
</root>